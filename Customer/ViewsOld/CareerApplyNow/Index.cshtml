@model ModelLayer.Models.ApplicationDetail
@{
    ViewBag.Title = "Apply Now";
}
<style>
    .field-validation-error {
        color: red;
    }
</style>
<div class="gap"></div>
<div class="row box" data-gutter="15">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "CareerApplyNow", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            if (ViewBag.Message != null)
            {
                <span style="font-weight:bold; color:red;">@ViewBag.Message</span>
            }
            <h3>Career</h3>

            <div class="col-md-6">
                <div class="form-group">
                    <input type="text" disabled placeholder="@ViewBag.Career" class="form-control">
                    @Html.Hidden("CareerID")
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Name" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>


            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.Mobile, new { maxlength = "10", @class = "form-control", placeholder = "Mobile" })
                    @Html.ValidationMessageFor(model => model.Mobile)
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.TotalExpience, new { @class = "form-control", placeholder = "Total Expience" })
                    @Html.ValidationMessageFor(model => model.TotalExpience)
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.CurrentCTC, new { @class = "form-control", placeholder = "Current CTC" })
                    @Html.ValidationMessageFor(model => model.CurrentCTC)
                </div>
            </div>


            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.ExpectedCTC, new { @class = "form-control", placeholder = "Expected CTC" })
                    @Html.ValidationMessageFor(model => model.ExpectedCTC)
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control", placeholder = "Remarks" })
                    @Html.ValidationMessageFor(model => model.Remarks)
                </div>
            </div>
            <div class="col-md-6" style="padding-top: 11px;">
                <div class="form-group">
                    <input type="file" id="fileToUpload" name="file" />
                    <span class="field-validation-error" id="spanfile"></span>
                </div>
            </div>
            <div class="col-md-12">
                <input type="submit" id="btnSubmit" value="Submit" class="btn btn-success" />
            </div>
        }
    </div>

</div>
<div class="gap"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/jscript">
    //get file size
    function GetFileSize(fileid) {
        try {
            var fileSize = 0;
            //for IE
            if ($.browser.msie) {
                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject"); var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }
                //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#" + fileid)[0].files[0].size //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }
            return fileSize;
        }
        catch (e) {
            //alert("Error is :" + e);
        }
    }

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    $("#btnSubmit").live("click", function () {
        if ($('#fileToUpload').val() == "") {
            $("#spanfile").html("Please upload file");
            return false;
        }
        else {
            return checkfile();
        }
    });

    function checkfile() {
        var file = getNameFromPath($("#fileToUpload").val());
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            // alert(extension);
            switch (extension) {
                case 'doc':
                case 'docx':
                case 'pdf':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }
        if (flag == false) {
            $("#spanfile").text("You can upload only doc,docx,pdf extension file");
            return false;
        }
        else {
            var size = GetFileSize('fileToUpload');
            if (size > 3) {
                $("#spanfile").text("You can upload file up to 3 MB");
                return false;
            }
            else {
                $("#spanfile").text("");
            }
        }
    }

    $(function () {
        $("#fileToUpload").change(function () {
            checkfile();
        });
    });
</script>