@model List<ModelLayer.Models.ViewModel.ProductStockDetailViewModel>
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "eZeelo: Online Jewellery, Home Appliances, Electronics & Fashion Store Nagpur";
    string cityName = "";
    int franchiseID = 0;////added
    if (Request.Cookies["CityCookie"] != null && Request.Cookies["CityCookie"].Value != "")
    {
        cityName = Request.Cookies["CityCookie"].Value.Split('$')[1].ToLower();
        franchiseID = Convert.ToInt32(Request.Cookies["CityCookie"].Value.Split('$')[2]);////added
    }
}
@*<link href="~/Content/css/Site.css" rel="stylesheet" />*@
<script src="~/Scripts/Products.js"></script>
<link href="~/Content/css/Site.css" rel="stylesheet" />
<style>
    .product-caption {
        padding: 10px 2px;
        position: relative;
    }

    .row[data-gutter="15"] {
        margin-bottom: -15px;
        margin-left: -11.5px;
        margin-right: -11.5px;
    }

    .product-img-wrap:hover {
        -webkit-transform: scale(1.1);
        transform: scale(1.1);
    }
</style>
<div id="navbar">
    <ol class="breadcrumb page-breadcrumb">
        <li>
            @Html.RouteLink("Home", "Home", new { city = cityName, franchiseId = franchiseID })
        </li>
        <li>@Html.RouteLink("My Account", "CustomerOrder/myorders", new { city = cityName, franchiseId = franchiseID })</li>
        <li class="active">Wishlist</li>
    </ol>
</div>
@Html.Partial("_CustomerDashboardMenu")
<div class="gap" style="display:none;"></div>
<div class="row box animated fadeInUp wishList_path_code" data-gutter="15">
    <h3 style="padding:5px;">My Wish List</h3>
    <div class="col-md-12">
        @Html.Hidden("hdnSessionValue", Session["UID"])
        @if (Model.Count > 0)
        {

            int salerate = 0;
            <div class="row" data-gutter="15">
                @foreach (var item in Model)
                {
                    @*//***** SEO URL Structure RULE by Ashish 18/11/2016 ******//*@
                    string str = item.ProductName;
                    str = System.Text.RegularExpressions.Regex.Replace(str, @"[\\\#$~%.':*?<>{} ]", " ").Replace("&", "and");
                    str = System.Text.RegularExpressions.Regex.Replace(str, @"\s+/g", " ");
                    // string[] parts2 = Regex.Split(str, @"\+\/\-\,\(\)");
                    ///////////////////
                    string concat = "";
                    str = System.Text.RegularExpressions.Regex.Replace(str, @"[\/\+-,()]", "|");
                    string[] strSplit = str.Split('|');
                    for (int i = 0; i < strSplit.Length; i++)
                    {
                        if (concat.Length <= 30)
                        {
                            concat = concat.Length == 0 ? strSplit[i].Trim() : concat + ' ' + strSplit[i].Trim();
                        }
                    }
                    concat = System.Text.RegularExpressions.Regex.Replace(concat, @"\s+", " ");
                    concat = System.Text.RegularExpressions.Regex.Replace(concat, @"[\/\\#,+()$~%.':*?<>{} ]", "-").Replace("&", "and");

                    concat = concat.Trim(new[] { '-' });
                    @*//***** End SEO URL Structure RULE by Ashish 18/11/2016 ******//*@

                    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2" style=" padding: 0px 2px;">
                        <div class="product ">
                            <div class=" ">
                                <div id="soldOutDiv" class="">
                                    @*Yashaswi 21-7-2018*@
                                    @if (item.StockStatus == true && item.StockQty > 0)
                                    {
                                        <span class="soldOut"> </span>
                                    }
                                    else
                                    {
                                        <span class="soldOut soldout-div"> Sold<br /> Out </span>
                                    }
                                </div>
                                @if (item.MRP != item.SaleRate)
                                {
                                    decimal offerValue = ((item.MRP - item.SaleRate) / (item.MRP)) * 100;
                                    decimal offerPercentage = Math.Round(offerValue);

                                    if (offerPercentage > 0)
                                    {
                                        <ul class="product-labels" style="display:block">
                                            <li class="offerPercentage" style="display:block;">@offerPercentage % OFF</li>
                                        </ul>
                                    }
                                    else
                                    {
                                        <ul class="product-labels" style="display: none">
                                            <li class="offerPercentage"></li>
                                        </ul>
                                    }
                                }
                                else
                                {
                                    <ul class="product-labels" style="display: none">
                                        <li class="offerPercentage"></li>
                                    </ul>
                                }
                            </div>
                            <div class="left-block">
                                <div class="product-img-wrap">
                                    @*<a class="anchorRedirect" href="@Url.RouteUrl("pre-prod-name", new { itemId = item.ProductID, itemName = Regex.Replace(item.ProductName.Substring(0, Math.Min(item.ProductName.Length, 30)), @"[\/\\#,+()$~%.':*?<>{} ]", "-").Replace("&", "and").ToLower(), city = cityName.ToLower(), franchiseId = franchiseID })">*@
                                    <a class="anchorRedirect" href="@Url.RouteUrl("pre-prod-name", new { itemId = item.ProductID, itemName = concat.ToLower(), city = cityName.ToLower(), franchiseId = franchiseID })">
                                        <img src="@Url.Content(string.IsNullOrEmpty(item.StockThumbPath) ? "/Content/Images/no_image.png" : item.StockThumbPath)" class="product-img" />
                                    </a>
                                </div>
                                <div class="product-caption">
                                    <div class="product-caption">
                                        <span class="product-caption">@item.SizeName</span>
                                        <h6 class="product-name" style="height: 25px; margin-bottom: 3px;">
                                            @if (item.ProductName.Length > 60)
                                            {
                                                //string name = item.ProductName.Substring(0, 57).ToString() + "...";
                                                @*//***** SEO URL Structure RULE by Ashish 18/11/2016 ******//*@
                                                string name = item.ProductName.Replace("+", " ").Substring(0, 57).ToString() + "...";
                                                @name
                                            }
                                            else
                                            {
                                                @*//***** SEO URL Structure RULE by Ashish 18/11/2016 ******//*@


                                                @item.ProductName.Replace("+", " ")
                                            }
                                        </h6>
                                    </div>
                                    <div class="product-caption-price" style=" padding: 0px 2px;">
                                        @if (item.MRP > item.SaleRate)
                                        {
                                            <span class="product-caption-price-old"><i class="fa fa-inr" aria-hidden="true"></i><del> @((Convert.ToDecimal(item.MRP)).ToString("0.00"))</del></span>
                                        }
                                        else
                                        {
                                            <span class="product-caption-price-old"></span>
                                        }
                                        <span class="product-caption-price-new" style="color:brown"><i class="fa fa-inr" aria-hidden="true"></i> @((Convert.ToDecimal(item.SaleRate)).ToString("0.00"))</span>
                                    </div>
                                    <div style="padding-bottom: 10px;">



                                        @*@Html.RouteLink("View", "preview-stock", new { itemID = item.ProductID, shopStockID = item.ShopStockID, itemName = item.ProductName.ToLower().Substring(0, Math.Min(item.ProductName.Length, 30)).Replace(' ', '-'), shopID = 0, city = cityName.ToLower(), franchiseId = franchiseID }, new { @class = "btn btn-success })*@ @*////added franchiseId=franchiseID*@
                                        @*//***** SEO URL Structure RULE by Ashish 18/11/2016 ******//*@
                                        @if (item.ProductName.Length > 0)
                                        {

                                            @Html.RouteLink("View", "preview-stock", new { itemID = item.ProductID, shopStockID = item.ShopStockID, itemName = concat.ToLower(), shopID = 0, city = cityName.ToLower(), franchiseId = franchiseID }, new { @class = "btn btn-success" })@*////added franchiseId=franchiseID*@

                                        }
                                        @*//***** End SEO URL Structure RULE by Ashish 18/11/2016 ******//*@

                                        @*Yashaswi 21-7-2018*@
                                        @if (item.StockStatus == true && item.StockQty > 0)
                                        {
                                            <button class="btn btn-warning" type="button" onclick="AddProduct(@item.ShopStockID,@item.ProductID)">Add<i class="fa fa-shopping-basket"></i></button>
                                        }
                                        <button id="anchorRemove" onclick="RemoveProductFromWishList(@item.ShopStockID)" class="btn btn-danger" type="button" title="Remove">X</button>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            @Html.Hidden("ShopStockID", item.ShopStockID)
                        </div>

                    </div>
                }
            </div>
        }
        else
        {
            <div>
                <h5 class="breadcrumbs dark newbackground">Your Wishlist Is Empty</h5>
            </div>
        }
    </div>
</div>

<div class="gap"></div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">

    function RemoveProductFromWishList(shopStockID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("RemoveFromWishList","WishList")",
            data: "{'shopStockID':" + shopStockID + "}",
            contentType: "application/json; charset = utf-8",
            dataType: "json",
            success: function (response) {
                window.location.href = '@Url.RouteUrl("MyWishList", new { city = cityName, franchiseId = franchiseID })';@*////added franchiseId=franchiseID*@
            },
            //success: OnSuccess,
            failure: function (response) {

            },
            error: function (response) {
                window.location.href = '@Url.RouteUrl("MyWishList", new { city = cityName, franchiseId = franchiseID })';@*////added franchiseId=franchiseID*@
            }
            //error: OnSuccess
        });

    }

    function OnSuccess() {

        $.ajax({
            type: "POST",
            url: "@Url.RouteUrl("MyWishList", new { city = cityName, franchiseId = franchiseID })",////added franchiseId=franchiseID
            data: "",
            contentType: "application/json; charset = utf-8",
            dataType: "json",
            success: function (response) {
            },
            failure: function (response) {
            },
            error: function (response) {
            }
        });

    }



    function AddProduct(shopStockId, itemId) {
        var _url = '@Url.Action("AddProductInShoppingCart", "Product")';
        AddProductToShppingCartWithoutQuantity(shopStockId, itemId, _url);
    }

</script>

