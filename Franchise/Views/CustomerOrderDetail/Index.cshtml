@model IEnumerable<ModelLayer.Models.CustomerOrderDetail>
@using Franchise.Models.ViewModel;
@*@using ModelLayer.Models;*@
@{
    Layout = "~/Views/Shared/_LayoutPartial.cshtml";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
<style>
    a {
        color: yellow;
        font-weight: bold;
    }

        a:hover {
            color: white;
        }

    th {
        background: #0B8E3E !important;
        color: #ffffff !important;
    }

    td {
        background: #727E5A !important;
        color: #ffffff !important;
    }

    .dropdown-menu {
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1000;
        float: left;
        display: none;
        min-width: 160px;
        padding: 4px 0;
        margin: 0;
        list-style: none;
        background-color: #ffffff;
        border-color: #ccc;
        border-color: rgba(0, 0, 0, 0.2);
        border-style: solid;
        border-width: 1px;
        -webkit-border-radius: 0 0 5px 5px;
        -moz-border-radius: 0 0 5px 5px;
        border-radius: 0 0 5px 5px;
        -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -moz-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        -webkit-background-clip: padding-box;
        -moz-background-clip: padding;
        background-clip: padding-box;
    }

        .dropdown-menu a {
            display: block !important;
            padding: 3px 15px !important;
            clear: both !important;
            font-weight: normal !important;
            line-height: 18px !important;
            color: #333333 !important;
            white-space: nowrap !important;
        }

        .dropdown-menu li > a:hover, .dropdown-menu .active > a, .dropdown-menu .active > a:hover {
            background-color: #0088cc;
            color: #ffffff;
            text-decoration: none;
        }

            .dropdown-menu li > a:hover, .dropdown-menu .active > a, .dropdown-menu .active > a:hover {
                background-color: #0085c8;
                background-image: linear-gradient(hsla(0, 0%, 100%, 0.05), hsla(0, 0%, 0%, 0.05)), linear-gradient(-72deg, hsla(0, 0%, 100%, 0.05) 50%, transparent 50%);
                box-shadow: 0 0 0.25em hsla(0, 0%, 0%, 0.1) inset, 0 0 1.5em hsla(0, 0%, 0%, 0.25) inset;
            }

        .dropdown-menu:after, .dropdown-menu:before {
            top: 0;
            left: 0;
            border-right: none;
            border-bottom: none;
            border-left: none;
            content: '';
        }
</style>

@{
    List<DeliveryOrderDetailViewModel> DeliveryOrderDetailViewModels = ViewBag.DeliveryOrderDetails;
    List<ProductByShopStockViewModel> ProductByShopStockViewModels = ViewBag.ProductByShopStockViewModels;
    List<ModelLayer.Models.Unit> Units = ViewBag.Units;
    string PaymentMode = @Request.QueryString["PaymentMode"];
    string OrderCode = @Request.QueryString["OrderCode"];
}
<table class="table">
    <tr>
        @{
            string lMobileNo = "";
            if (Model.FirstOrDefault().CustomerOrder.UserLogin.Mobile != null)
            {
                lMobileNo = Model.FirstOrDefault().CustomerOrder.UserLogin.Mobile.Trim();
            }
            string lCustomerOrderCode = Model.FirstOrDefault().CustomerOrder.OrderCode.Trim();
            string lRegEmail = "";
            if (Model.FirstOrDefault().CustomerOrder.UserLogin.Email != null)
            {
                lRegEmail = Model.FirstOrDefault().CustomerOrder.UserLogin.Email.Trim();
            }
            string lCustomerOrderID = Model.FirstOrDefault().CustomerOrderID.ToString();
        }
        <th>Shipping Address <a href="#" style="float:right;" id="btnSendSMS" class="btn btn-danger" onclick="SendSMS(@lCustomerOrderID);">Send Delivery SMS</a></th>

    </tr>
    <tr>
        @*Added by harshada to add area,city,pincode in shipping address*@
        @{ string AreaName = ""; }

        @if (Model.First().CustomerOrder.AreaID != null)
        {
            AreaName = "," + Model.First().CustomerOrder.Area.Name;
        }

        <td>@Model.First().CustomerOrder.ShippingAddress@AreaName,@Model.First().CustomerOrder.Pincode.City.Name,@Model.First().CustomerOrder.Pincode.Name</td>
    </tr>
    <tr>
        <td>
            Contact : @Model.FirstOrDefault().CustomerOrder.PrimaryMobile, @Model.FirstOrDefault().CustomerOrder.SecondoryMobile,
            @{
                if (Model.FirstOrDefault().CustomerOrder.UserLogin.Mobile != null)
                {
                    if (!Model.FirstOrDefault().CustomerOrder.UserLogin.Mobile.Equals(Model.FirstOrDefault().CustomerOrder.PrimaryMobile) && !Model.FirstOrDefault().CustomerOrder.UserLogin.Mobile.Equals(Model.FirstOrDefault().CustomerOrder.SecondoryMobile))
                    {
            @Model.FirstOrDefault().CustomerOrder.UserLogin.Mobile
                    }
                }
            }
        </td>
    </tr>
</table>
<table class="table table-bordered table-hover table-responsive table-striped">
    <tr style="background-color:#00ff90">
        <th style="width:20px;">Sr.No</th>
        <th>
            Shop Order Code
        </th>
        <th>
            Shop
        </th>
        <th>
            Delivery
        </th>
        <th>
            Product
        </th>
        <th>
            Qty
        </th>
        <th>
            Sale Rate
        </th>
        <th>
            Total Amount
        </th>
        <th>
            Create Date
        </th>
        <th>
            Order Status
        </th>
        <th>
            Device Type
        </th>
        <th style="width:20px;">Call</th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="6" class="text-center"><h3>No Record Found...</h3></td>
        </tr>
    }
    else
    {
        int i = 0;
        string lShopOrderCode = "";
        foreach (var item in Model)
        {
            <tr>
                <td>@{i = i + 1; } @i</td>
                <td>
                    <a href="@System.Configuration.ConfigurationManager.AppSettings["EZEELO_DELIVERY_URL"]/DeliveryOrderDetail/details?Shopordercode=@item.ShopOrderCode" target="_blank">@Html.DisplayFor(modelItem => item.ShopOrderCode)</a>
                </td>
                <td>
                    <ul style="list-style:none;">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                @Html.DisplayFor(modelItem => item.Shop.Name)
                            </a>
                            <ul class="dropdown-menu">
                                <li><a target="_blank" href="@Url.Action("Index", "OrderTracking", new { Shop = item.Shop.Name })">Shop :@Html.DisplayFor(modelItem => item.Shop.Name)</a></li>
                                <li><a href="#">Contact Person : @Html.DisplayFor(modelItem => item.Shop.ContactPerson)</a></li>
                                <li><a href="#">Contact No : @Html.DisplayFor(modelItem => item.Shop.Mobile)</a></li>
                            </ul>
                        </li>
                    </ul>
                </td>
                <td>
                    @{
                int lDeliveryPartnerID = -1;
                string lDeliveryPartnerName = "";
                string lDeliveryPartnerContact = "";
                var DeliveryPartner = DeliveryOrderDetailViewModels.FirstOrDefault(x => x.ShopOrderCode == item.ShopOrderCode);
                if (DeliveryPartner != null)
                {
                    lDeliveryPartnerID = DeliveryPartner.DeliveryPartnerID;
                    lDeliveryPartnerName = DeliveryPartner.DeliveryPartnerName;
                    lDeliveryPartnerContact = DeliveryPartner.DeliveryPartnerVM.Mobile;
                }
                    }
                    <ul style="list-style:none;">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                @lDeliveryPartnerName
                            </a>
                            <ul class="dropdown-menu">
                                <li><a target="_blank" href="@Url.Action("Index", "OrderTracking", new { Delivery = lDeliveryPartnerName })">Delivery Shop : @lDeliveryPartnerName</a></li>
                                <li><a href="#">Contact Person : @lDeliveryPartnerName</a></li>
                                <li><a href="#">Contact No : @lDeliveryPartnerContact</a></li>
                            </ul>
                        </li>
                    </ul>
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.ShopStock.ShopProduct.Product.Name)*@
                    @{
                string ProductName = "";
                ProductByShopStockViewModel lProductByShopStockViewModel = ProductByShopStockViewModels.FirstOrDefault(x => x.ShopStockID == item.ShopStockID);
                if (lProductByShopStockViewModel != null)
                {
                    ProductName = ProductByShopStockViewModels.FirstOrDefault(x => x.ShopStockID == item.ShopStockID).ProductName;
                }
                    }
                    @ProductName
                    <br />
                    @if (item.ShopStock.ProductVarient.ColorID != 1) // - N/A
                    {
                        @Html.DisplayFor(modelItem => item.ShopStock.ProductVarient.Color.Name) <span>,</span>
                    }
                    @if (item.ShopStock.ProductVarient.SizeID != 1) // - N/A
                    {
                        @Html.DisplayFor(modelItem => item.ShopStock.ProductVarient.Size.Name) <span>,</span>
                    }
                    @if (item.ShopStock.ProductVarient.DimensionID != 1) // - N/A
                    {
                        @Html.DisplayFor(modelItem => item.ShopStock.ProductVarient.Dimension.Name) <span>,</span>
                    }
                    @if (item.ShopStock.ProductVarient.MaterialID != 1) // - N/A
                    {
                        @Html.DisplayFor(modelItem => item.ShopStock.ProductVarient.Material.Name)
                    }
                </td>
                <td>



                    <br />
                    @Html.DisplayFor(modelItem => item.Qty)
                    @*@{
                        string lUnitstr = "";
                        Unit lunit = Units.FirstOrDefault(x => x.ID == item.ShopStock.PackUnitID);
                        if (lunit != null)
                        {
                            lUnitstr = lunit.Name;
                        }
                        }
                        @lUnitstr*@
                </td>

                @*<td>
                        <span class="indian_currency"></span> @Html.DisplayFor(modelItem => item.MRP)
                    </td>*@
                <td>
                    <span class="indian_currency"></span> @Html.DisplayFor(modelItem => item.SaleRate)
                </td>
                <td>
                    <span class="indian_currency"></span> @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.OrderStatus)*@
                    @{
            if (lShopOrderCode != item.ShopOrderCode)
            {
                @Franchise.Common.Common.GetDeliveryStatus(item.OrderStatus)
            }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceType)
                </td>


                <td>
                    @{
            if (lShopOrderCode != item.ShopOrderCode)
            {
                <a href="@Url.Action("Index", "CustomerOrderDetailCall", new { ShopID = item.ShopID, DeliveryPartnerID = @lDeliveryPartnerID, OrderStatus = item.OrderStatus, ShopOrderCode = item.ShopOrderCode, PaymentMode = PaymentMode, OrderCode = OrderCode })" onclick="Logs()" target="frameLog" class="btn btn-small btn-success a_white">Logs</a>
                lShopOrderCode = item.ShopOrderCode;
            }
                    }
                </td>
            </tr>
        }
    }
</table>

<div id="divLog">
    <div class="loader">
        <img id="loader_img" src="~/Content/Images/loader.gif" style="display: none" />
    </div>
    <div id="Details">
        <iframe id="frameLog" name="frameLog" src='' width="100%" height="600px" frameborder="0" style="margin:0px; padding:0px;"></iframe>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script>
    function Logs() {
        $("#divLog").show();
    }


    function SendSMS(customerOrderID) {
        $.ajax({
            url: '@Url.Action("SendSMS", "CustomerOrderDetailCall")?CustomerOrderID=' + customerOrderID,
            type: "GET",
            success: function (result) {
                //$('#loader_img').hide();
                $('#btnSendSMS').html("SMS sent Successfully.");
            },
            error: function (data) {
                $('#btnSendSMS').html("Error in SMS Sending.");
                //$('#loader_img').hide();
            }
        });
    }

</script>

