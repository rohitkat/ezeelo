@model ModelLayer.Models.PersonalDetail

@{
    ViewBag.Title = "Edit";

}
<style>
    #msform1 fieldset:not(:first-of-type) {
        display: none;
    }
    .max-width {
        max-width: 88% !important;
        margin: 0px 79.09375px 0px 10px !important;
    }
    .btn-nxt {margin-top:22px;
    }
    .previous {
        margin-top: 22px !important;
    }
    .beatpicker-clear {
        display: none;
    }
    .add {
        margin-left: 12px !important;
        margin-right: 472px;
    }
    .succes-msg {
        color: #125400;
        font-size: 20px;
    }

    .alert-danger, .alert-error {
        margin-left: 95px;
    }
    .mrg-btm-extra {
        width: 825px;
    }
    .mrg-btm-extra1 {width:845px;
    }
    #SalutationID {
        width: 75px;
    }
    fieldset {
        width: 92% !important;
        margin: 0 2% !important;
    }
    .previous{
        margin-top:0px!important;
    }
</style>
<link href="~/Content/css/style_asset.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.9.1.min.js"></script>
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
@*<link href="~/Content/assets/css/form-design.css" rel="stylesheet" />*@
<link href="~/Content/css/Site.css" rel="stylesheet" />


<div id="content" class="span10">
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row-fluid">
            <div class="box span12">
                <div class="box-content">
                <form class="form-horizontal" id="msform1">
                        <ul id="progressbar">
                            <li class="active">Personal Details</li>
                            <li>Business Details</li>
                            <li>Shop Details</li>
                            <li>Bank Details</li>
                        </ul>
                        <fieldset>
                            <h2 class="fs-title">Personal Details</h2>
                           <div class="form-horizontal">
                               <div style="margin-top:20px;">
                                   @if (ViewBag.Message != null)
                                   {
                                       <span class="succes-msg" style="margin: 0 12px;">@ViewBag.Message</span>
                                   }
                               </div>
                               @Html.ValidationMessage("CustomError")
                                @Html.ValidationSummary(true)
                                @Html.HiddenFor(model => model.ID)

                                <div class="control-group">
                                    @*@Html.LabelFor(model => model.UserLoginID, "UserLoginID", new { @class = "control-label col-md-2" })*@
                                    <div class="">
                                        @*@Html.("UserLoginID", String.Empty)*@
                                        @Html.HiddenFor(model => model.UserLoginID)
                                        @Html.ValidationMessageFor(model => model.UserLoginID)

                                    </div>
                                </div>
                               <div class="control-group mrg-btm mrg-btm-extra">
                                   <div class="NameDescription">
                                       <div class="control-group mrg-left">
                                           @Html.LabelFor(model => model.SalutationID, "Select", new { @class = "col-md-2" })
                                           <div class="salutationList">
                                               @Html.DropDownList("SalutationID", String.Empty)

                                               @Html.ValidationMessageFor(model => model.SalutationID)
                                           </div>
                                       </div>

                                       <div class="control-group mrg-left">
                                           @Html.LabelFor(model => model.FirstName, new { @class = "col-md-2" })
                                           <div class="">
                                               @Html.TextBoxFor(model => model.FirstName, new { @class = "input-width", required = "required" })
                                               @Html.ValidationMessageFor(model => model.FirstName)
                                           </div>
                                       </div>

                                       <div class="control-group mrg-left">
                                           @Html.LabelFor(model => model.MiddleName, new { @class = "col-md-2" })
                                           <div class="">
                                               @Html.EditorFor(model => model.MiddleName)
                                               @Html.ValidationMessageFor(model => model.MiddleName)
                                           </div>
                                       </div>

                                       <div class="control-group mrg-left">
                                           @Html.LabelFor(model => model.LastName, new { @class = "col-md-2" })
                                           <div class="">
                                               @Html.TextBoxFor(model => model.LastName, new { required = "required" })
                                               @Html.ValidationMessageFor(model => model.LastName)
                                           </div>
                                       </div>
                                       <div class="clr"></div>
                                   </div>
                               </div>
                               <div class="control-group mrg-btm mrg-btm-extra1">
                                   <div class="NameDescription">
                                       <div class="control-group  mrg-left  mrg-btm">
                                           @Html.LabelFor(model => model.DOB, new { @class = "col-md-2 dtPic" })
                                           <div class="">                                              
                                               @*<input type="text" id="DOB1" name="DOB1" value="@ViewBag.DOB1" data-beatpicker="true" data-beatpicker-position="['*','*']">*@
                                               @Html.TextBox("DOB1", null, new { @readonly = "readonly", @class = "input" })
                                               @Html.ValidationMessageFor(model => model.DOB)
                                               <label for="DOB1" class="dtPic pull-right"><i class="glyphicons-icon calendar"></i></label>
                                           </div>

                                       </div>

                                       <div class="control-group  mrg-left">
                                           @Html.LabelFor(model => model.Gender, new { @class = " col-md-2" })
                                           <div class="">
                                               @*@Html.EditorFor(model => model.Gender)*@
                                               @Html.DropDownList("Gender")
                                               @Html.ValidationMessageFor(model => model.Gender)
                                           </div>

                                       </div>

                                       <div class="control-group  mrg-left">
                                           @Html.LabelFor(model => model.PincodeID, "Pincode ID")

                                           <div class="">
                                               @Html.TextBox("Pincode", null, new { @id = "Pincode", @class = "form-control-Widout-block", @placeholder = "Enter Pincode", @onkeypress = "return isValidPincode(event)", @required = "required" })
                                               <img id="Pincode_loading" src="~/Content/img/ajax_loader.gif" style="height: 20px; margin-left: -39px;display: none" />
                                               <div id="divPincodeError" style="width: 272px; padding: 1px; display: block; font-size: 11px; margin-top: -7px; " class="alert-danger focused"> </div>
                                           </div>
                                       </div>
                                       <div class="clr"></div>
                                   </div>
                               </div>
                                <div class="control-group ">
                                    @*@Html.LabelFor(model => model.Address)*@
                                    @Html.LabelFor(model => model.Address, new { @class = "span2 add" })
                                    <div class="">
                                        @Html.TextAreaFor(model => model.Address, new { @class = "discrip_box max-width" })
                                        @Html.ValidationMessageFor(model => model.Address)
                                    </div>
                                </div>
                                <div class="control-group mrg-btm">
                                    <div class="NameDescription">
                                        <div class="control-group mrg-left">
                                            @Html.LabelFor(model => model.AlternateMobile, new { @class = "col-md-2" })
                                            <div class="">
                                                @Html.EditorFor(model => model.AlternateMobile)
                                                @Html.ValidationMessageFor(model => model.AlternateMobile)
                                            </div>
                                        </div>

                                        <div class="control-group  mrg-left">
                                            @Html.LabelFor(model => model.AlternateEmail, new { @class = " col-md-2" })
                                            <div class="">
                                                @Html.EditorFor(model => model.AlternateEmail)
                                                @Html.ValidationMessageFor(model => model.AlternateEmail)
                                            </div>
                                        </div>
                                        <div class="clr"></div>
                                    </div>
                                </div>

                                <div class="control-group  mrg-btm">
                                    @*@Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })*@
                                    <div class="">
                                        @*@Html.EditorFor(model => model.IsActive)*@
                                        @Html.HiddenFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive)
                                    </div>
                                </div>

                                <div class="control-group  mrg-btm">
                                    @*@Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })*@
                                    <div class="">
                                        @*@Html.EditorFor(model => model.CreateDate)*@
                                        @Html.HiddenFor(model => model.CreateDate)
                                        @Html.ValidationMessageFor(model => model.CreateDate)
                                    </div>
                                </div>

                                <div class="control-group">
                                    @*@Html.LabelFor(model => model.CreateBy, "CreateBy", new { @class = "control-label col-md-2" })*@
                                    <div class="">
                                        @*@Html.DropDownList("CreateBy", String.Empty)*@
                                        @Html.HiddenFor(model => model.CreateBy)
                                        @Html.ValidationMessageFor(model => model.CreateBy)
                                    </div>
                                </div>
                              
                            </div>
                            <input type="submit" value="Save" class="btn btn-small btn-primary" />
                            <input type="button" name="next" class="next action-button btn-small btn-warning1" value="Next" style="margin-top:0px;" />

                        </fieldset>
                        <fieldset>
                            <h2 class="fs-title">Business Details</h2>
                         
                            @*<iframe src='@Url.Action("Edit", "BusinessDetail")' width="100%" height="400px" frameborder="0" id="iframePersonalDetail" class="tab-pane active mrg-Reduce"></iframe>*@
                            <iframe src='@Url.Action("Edit", "MBusinessDetail", new { UserLoginID = Model.UserLoginID }, null)' width="100%" height="600px" frameborder="0" id="iframePersonalDetail" class="tab-pane active mrg-Reduce"></iframe>
                            @*@Html.ActionLink("Edit", "Edit", "MPersonalDetail", new { id = Model.UserLoginID }, null)*@
                            <input type="button" name="previous" class="previous action-button btn btn-small btn-primary" value="Previous" />
                            <input type="button" name="next" class="next action-button btn btn-busn btn-small" value="Next" />
                          


                        </fieldset>
                        <fieldset>
                            <h2 class="fs-title">Shop Detail</h2>
                            
                            <iframe src='@Url.Action("Edit", "MShop", new { UserLoginID = Model.UserLoginID }, null)' width="100%" height="750px" frameborder="0" id="iframePersonalDetail" class="tab-pane active mrg-Reduce"></iframe>
                            <input type="button" name="previous" class="previous action-button btn btn-small btn-primary" value="Previous" />
                            <input type="button" name="next" class="next action-button btn-small btn-warning1" value="Next" />
                           


                        </fieldset>
                        <fieldset>
                            <h2 class="fs-title">Bank Detail</h2>
                          
                            <iframe src='@Url.Action("Edit", "MOwnerBank", new { UserLoginID = Model.UserLoginID }, null)' width="100%" height="300px" frameborder="0" id="iframePersonalDetail" class="tab-pane active  mrg-Reduce"></iframe>
                            <input type="button" name="previous" class="previous action-button btn btn-small btn-primary" value="Previous" />
                            @Html.ActionLink("Finish", "Index", "Home", string.Empty, new { @class = "action-button btn btn-small btn-warning1" })
                         



                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    }
   
</div>
<script defer="defer">
    $(function () {

        //jQuery time
        var current_fs, next_fs, previous_fs; //fieldsets
        var left, opacity, scale; //fieldset properties which we will animate
        var animating; //flag to prevent quick multi-click glitches

        $(".next").click(function () {
           
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            next_fs = $(this).parent().next();

            //activate next step on progressbar using the index of next_fs
            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

            //show the next fieldset
            next_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale current_fs down to 80%
                    scale = 1 - (1 - now) * 0.2;
                    //2. bring next_fs from the right(50%)
                    left = (now * 50) + "%";
                    //3. increase opacity of next_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'transform': 'scale(' + scale + ')' });
                    next_fs.css({ 'left': left, 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        $(".previous").click(function () {
       
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            previous_fs = $(this).parent().prev();

            //de-activate current step on progressbar
            $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

            //show the previous fieldset
            previous_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale previous_fs from 80% to 100%
                    scale = 0.8 + (1 - now) * 0.2;
                    //2. take current_fs to the right(50%) - from 0%
                    left = ((1 - now) * 50) + "%";
                    //3. increase opacity of previous_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'left': left });
                    previous_fs.css({ 'transform': 'scale(' + scale + ')', 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        $(".submit").click(function () {
            return false;
        })

    });
</script>
<script src="~/Content/js/jquery-2.1.3.min.js"></script>
<script type="text/javascript">
    var lPincode = $('#Pincode').val()
    $('#Pincode').bind('input propertychange', function () {
        var lPincode = $('#Pincode').val()
        $('#divPincodeError').hide();
        if (lPincode.length == 6) {
            $('#Pincode_loading').show();
            $.ajax({
                url: '@Url.Action("GetAddress", "PersonalDetail")?Pincode=' + lPincode,
                type: "GET",
                success: function (result) {
                    //$('#divAddress').html(result);
                    $('#Pincode_loading').hide();
                    $('#divPincodeError').hide();
                    if (result == "1") {
                        $('#divPincodeError').show();
                        $('#divPincodeError').html('[' + lPincode + '] dose not exist, Contact to ADMIN');
                        $('#Pincode').val('');
                    }
                },
                error: function (data) {
                    //alert('Pincode : ' + lPincode + ' Dose Not Exist, please Contact to ADMIN');
                    //$('#divAddress').empty();
                    //$('#Pincode_loading').hide();
                    $('#divPincodeError').hide();
                    //$('#divPincodeError').html('Pincode [' + lPincode + '] dose not exist, please Contact to ADMIN');
                    //$('#Pincode').val('');
                }
            });
        }
    });

</script>

<script>

    //----------------------------------------------------------------------For datepicker---//
    //<![CDATA[


    $(window).load(function () {
        //$('#SDate').datepicker('update');
        $('#DOB1').datepicker('update');
    });//]]>
</script>

@*<script type="text/javascript">
    $(document).ready(function () {
        var statusGenerator = function (text) {
            var statusElem = $(".status-box");
            var child = $("<span style='display: block'></span>").text(text);
            statusElem.append(child);
        };
        myDatePicker.on("select", function (data) {
            statusGenerator(data.string + " selected")
        });
        myDatePicker.on("change", function (data) {
            statusGenerator("Date picker changed current date: " + data.string);
        });
        myDatePicker.on("show", function () {
            statusGenerator("Date picker show")
        });
        myDatePicker.on("clear", function (data) {
            statusGenerator("Date picker cleared. cleared date: " + data.string)
        });
        myDatePicker.on("hide", function () {
            statusGenerator("Date picker hide")
        });
    })

</script>*@
