@model ModelLayer.Models.Shop

@{
    ViewBag.Title = "Edit";
    Layout = null;
}
<style>
    .field-validation-error {
        color: #ff0000 !important;
    }

    .succes-msg {
        color: #125400;
        font-size: 20px;
    }
    input[type="submit"].btn.btn-small {
    }
    .btn-warning {
        color: #fff !important;
        text-shadow: 0 -1px 0 rgba(0,0,0,0.25) !important;
        background-color: #faa732 !important;
        background-image: -moz-linear-gradient(top,#fbb450,#f89406) !important;
        background-image: -webkit-gradient(linear,0 0,0 100%,from(#fbb450),to(#f89406)) !important;
        background-image: -webkit-linear-gradient(top,#fbb450,#f89406) !important;
        background-image: -o-linear-gradient(top,#fbb450,#f89406) !important;
        background-image: linear-gradient(to bottom,#fbb450,#f89406) !important;
        background-repeat: repeat-x;
        border-color: #f89406 #f89406 #ad6704;
        border-color: rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25) !important;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450',endColorstr='#fff89406',GradientType=0);
        filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
    }
    .btn-small {
        padding: 2px 10px !important;
        font-size: 11.9px !important;
        -webkit-border-radius: 3p !importantx;
        -moz-border-radius: 3px !important;
        border-radius: 3px ;
    }
    .btn {
        display: inline-block !important;
        padding: 2px 12px !important;
        margin-bottom: 0;
        font-size: 11.9px;
        line-height: 20px !important;
        color: #fff !important;
        text-align: center !important;
        text-shadow: 0 1px 1px rgba(255,255,255,0.75);
        vertical-align: middle;
        cursor: pointer;
        background-color: #f5f5f5 !important;
        background-image: -moz-linear-gradient(top,#fff,#e6e6e6);
        background-image: -webkit-gradient(linear,0 0,0 100%,from(#fff),to(#e6e6e6));
        background-image: -webkit-linear-gradient(top,#fff,#e6e6e6);
        background-image: -o-linear-gradient(top,#fff,#e6e6e6);
        background-image: linear-gradient(to bottom,#fff,#e6e6e6);
        background-repeat: repeat-x;
        border: 1px solid #ccc;
        border-color: #e6e6e6 #e6e6e6 #bfbfbf;
        border-color: rgba(0,0,0,0.1) rgba(0,0,0,0.1) rgba(0,0,0,0.25);
        border-bottom-color: #b3b3b3;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px !important;
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff',endColorstr='#ffe6e6e6',GradientType=0);
        filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
        -webkit-box-shadow: inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);
        -moz-box-shadow: inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);
        box-shadow: inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05)!important;
    }
    .btn-warning:hover,
    .btn-warning:focus,
    .btn-warning:active,
    .btn-warning.active,
    .open .dropdown-toggle.btn-warning {
        color: #fff !important;
        background-color: #ed9c28 !important;
        border-color: #d58512 !important;
    }
</style>
<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#CheckOutsource').change(function () {
            if ('#CheckOutsource'.checked)
                $('.freeDeliveryBox').toggle();
            else
                $('.freeDeliveryBox').toggle();

        });
    });
    $(document).ready(function () {
        $('#CheckFreeDelivery').change(function () {
            if ('#CheckOutsource'.checked)
                $('.freeDeliveryBox2').toggle();
            else
                $('.freeDeliveryBox2').toggle();

        });
    });

</script>

@*<script type="text/javascript">
        $(document).ready(function () {
            $('input[type="checkbox"]').click(function () {

                if ($(this).attr("id")== "CheckOutsource"){
                    $(".freeDeliveryBox").toggle();
                }
                if ($(this).attr("id") =="CheckFreeDelivery" ) {
                    $(".freeDeliveryBox2").toggle();
                }

            });
        });
    </script>*@
<link href="~/Content/css/style_asset.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.9.1.min.js"></script>
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
@*<link href="~/Content/assets/css/form-design.css" rel="stylesheet" />*@

<div id="content" class="span10">
    <div style="margin-top:20px;">
        @if (ViewBag.Message != null)
        {
            <span class="succes-msg" style="margin: 0 12px;">@ViewBag.Message</span>
        }
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row-fluid">
            <div class="box span12">
                <div class="box-content">

                    <div class="form-horizontal" id="msform1">
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.ID)
                        <div class="control-group mrg-btm clearfix">
                            <div class="NameDescription">
                                <div class="control-group mrg-left">

                                    @Html.LabelFor(model => model.Name, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Name, new { required = "required" })
                                        @Html.ValidationMessageFor(model => model.Name)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.Website, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Website)
                                        @Html.ValidationMessageFor(model => model.Website)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.Lattitude, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Lattitude)
                                        @Html.ValidationMessageFor(model => model.Lattitude)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.Longitude, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Longitude)
                                        @Html.ValidationMessageFor(model => model.Longitude)
                                    </div>
                                </div>

                                <div id="divAddress" class="">
                                    @*to load Address Details*@
                                </div>
                                <div class="control-group mrg-left" id="divAddress2">
                                    @Html.LabelFor(model => model.Area)
                                    <div id="divAddress">
                                        @*to load Address Details*@
                                    </div>
                                    <div class="">
                                        @Html.DropDownList("AreaID", String.Empty)
                                        @Html.ValidationMessageFor(model => model.AreaID)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.OpeningTime, "Opening Time", new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.OpeningTime, new { @type = "time" })
                                        @Html.ValidationMessageFor(model => model.OpeningTime)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.ClosingTime, "Closing Time", new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.ClosingTime, new { @type = "time" })
                                        @Html.ValidationMessageFor(model => model.ClosingTime)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.PincodeID, "Pincode ID", new { @class = " " })
                                    <div class="">
                                        @*@Html.DropDownList("PincodeID", String.Empty)
                                            @Html.ValidationMessageFor(model => model.PincodeID)*@
                                        @Html.TextBox("Pincode", null, new { @id = "Pincode", @class = "form-control-Widout-block", @placeholder = "Enter Pincode", @onkeypress = "return isValidPincode(event)", required = "required" })
                                        <img id="Pincode_loading" src="~/Content/Images/ajax_loader.gif" style="height: 20px; margin-left: -39px; display:none" />
                                        <div id="divPincodeError" class="alert-danger focused">  </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div style="margin-top:20px" class="mrg-left">
                            <div class="control-group clearfix">
                                @*@Html.LabelFor(model => model.Address)*@
                                <div class="">
                                    @Html.TextAreaFor(model => model.Address, new { @class = "discrip_box max-width max-width-1", placeholder = "Address" })
                                    @Html.ValidationMessageFor(model => model.Address)
                                </div>
                            </div>
                        </div>






                        <div class="control-group mrg-btm clearfix">
                            <div class="NameDescription">
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.NearestLandmark, "Nearest Landmark", new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.NearestLandmark)
                                        @Html.ValidationMessageFor(model => model.NearestLandmark)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.ContactPerson, "Contact Person", new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.ContactPerson, new { required = "required" })
                                        @Html.ValidationMessageFor(model => model.ContactPerson)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.Email, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Email, new { required = "required" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.Mobile, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Mobile, new { required = "required" })
                                        @Html.ValidationMessageFor(model => model.Mobile)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="control-group mrg-btm clearfix">
                            <div class="NameDescription">


                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.Landline, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Landline)
                                        @Html.ValidationMessageFor(model => model.Landline)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.FAX, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.FAX)
                                        @Html.ValidationMessageFor(model => model.FAX)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.VAT, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.VAT)
                                        @Html.ValidationMessageFor(model => model.VAT)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.TIN, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.TIN)
                                        @Html.ValidationMessageFor(model => model.TIN)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="control-group mrg-btm clearfix">
                            <div class="NameDescription">
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.PAN, new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.PAN)
                                        @Html.ValidationMessageFor(model => model.PAN)
                                    </div>
                                </div>
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.WeeklyOff, "Weekly Off", new { @class = " " })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.WeeklyOff)
                                        @Html.ValidationMessageFor(model => model.WeeklyOff)
                                    </div>
                                </div>
                                @*<div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.MinimumAmountForFreeDelivery, new { @class = " " })
                                        <div class="set-input-wdth">
                                            @Html.TextBoxFor(model => model.MinimumAmountForFreeDelivery,new { required = "required" })
                                            @Html.ValidationMessageFor(model => model.MinimumAmountForFreeDelivery)
                                        </div>
                                    </div>*@
                                <div class="control-group mrg-left">
                                    @*@Html.LabelFor(model => model.DeliveryPartnerId, "DeliveryPartnerId", new { @class = " " })*@
                                    <div class="">
                                        @*@Html.DropDownList("DeliveryPartnerId", String.Empty)
                                            @Html.ValidationMessageFor(model => model.DeliveryPartnerId)*@
                                        @Html.HiddenFor(model => model.DeliveryPartnerId)
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div style="margin-top:20px">
                            <div class="NameDescription">
                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.SearchKeywords, "Search Keywords ", new { @class = "" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.SearchKeywords, new { required = "required" })
                                        @Html.ValidationMessageFor(model => model.SearchKeywords)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @Html.LabelFor(model => model.ReturnDurationInDays, "Return Duration In Days", new { @class = "" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.ReturnDurationInDays, new { required = "required" })
                                        @Html.ValidationMessageFor(model => model.ReturnDurationInDays)
                                    </div>
                                </div>

                                <div class="control-group mrg-left">
                                    @*@Html.LabelFor(model => model.FranchiseID, "FranchiseID", new { @class = "" })*@
                                    <div class="">
                                        @Html.HiddenFor(model => model.FranchiseID)
                                        @*@Html.DropDownList("FranchiseID", String.Empty)
                                            @Html.ValidationMessageFor(model => model.FranchiseID)*@
                                    </div>
                                </div>
                                <div class="control-group mrg-left max-width">
                                    @*@Html.LabelFor(model => model.CreateBy, "CreateBy", new { @class = " " })*@
                                    <div class="">
                                        @*@Html.DropDownList("CreateBy", String.Empty)*@
                                        @Html.HiddenFor(model => model.CreateBy)
                                        @Html.ValidationMessageFor(model => model.CreateBy)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="box-content">
                            <div style="margin-top:20px" class="mrg-left">
                                <div class="NameDescription">
                                    <div class="control-group deco-Checkbox clearfix">
                                        <ul>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.IsActive)
                                                        @Html.ValidationMessageFor(model => model.IsActive)
                                                    </span>
                                                    @*@Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label " })*@
                                                    @Html.LabelFor(model => model.IsActive, "Entitle for product approval", new { @class = "control-label " })
                                                </label>
                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.CurrentItSetup)
                                                        @Html.ValidationMessageFor(model => model.CurrentItSetup)
                                                    </span>
                                                    @Html.LabelFor(model => model.CurrentItSetup, "Current It Setup", new { @class = "control-label" })
                                                </label>

                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.InstitutionalMerchantPurchase)
                                                        @Html.ValidationMessageFor(model => model.InstitutionalMerchantPurchase)
                                                    </span>
                                                    @Html.LabelFor(model => model.InstitutionalMerchantPurchase, "Institutional Merchant Purchase", new { @class = "control-label" })
                                                </label>

                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.InstitutionalMerchantSale)
                                                        @Html.ValidationMessageFor(model => model.InstitutionalMerchantSale)
                                                    </span>
                                                    @Html.LabelFor(model => model.InstitutionalMerchantSale, "Institutional Merchant Sale", new { @class = "control-label" })
                                                </label>


                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.NormalSale)
                                                        @Html.ValidationMessageFor(model => model.NormalSale)
                                                    </span>
                                                    @Html.LabelFor(model => model.NormalSale, "Normal Sale", new { @class = "control-label" })
                                                </label>


                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.IsAgreedOnReturnProduct)
                                                        @Html.ValidationMessageFor(model => model.IsAgreedOnReturnProduct)
                                                    </span>
                                                    @Html.LabelFor(model => model.IsAgreedOnReturnProduct, "Is Agreed On Return Product", new { @class = " control-label" })
                                                </label>
                                            </li>
                                        </ul>

                                        <ul>


                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.IsLive)
                                                        @Html.ValidationMessageFor(model => model.IsLive)
                                                    </span>
                                                    @*@Html.LabelFor(model => model.IsLive, "Is Live", new { @class = " control-label" })*@
                                                    @Html.LabelFor(model => model.IsLive, "Place on Customer Portal", new { @class = " control-label" })
                                                </label>

                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>
                                                        @Html.EditorFor(model => model.IsManageInventory)
                                                        @Html.ValidationMessageFor(model => model.IsManageInventory)
                                                    </span>
                                                    @Html.LabelFor(model => model.IsManageInventory, "Is Manage Inventory", new { @class = " control-label" })
                                                </label>

                                            </li>
                                            <li>
                                                <label class="checkbox inline">
                                                    <span>

                                                        @Html.CheckBoxFor(model => model.IsDeliveryOutSource, new { @id = "CheckOutsource", @checked = "checked" })
                                                        @Html.ValidationMessageFor(model => model.IsDeliveryOutSource)
                                                    </span>
                                                    @Html.LabelFor(model => model.IsDeliveryOutSource, "Is Delivery Out Source", new { @class = " control-label" })
                                                </label>
                                                <div class="freeDeliveryBox" style="display:block;">
                                                    <label class="checkbox inline">
                                                        <span>

                                                            @Html.CheckBoxFor(model => model.IsFreeHomeDelivery, new { @id = "CheckFreeDelivery" })
                                                            @Html.ValidationMessageFor(model => model.IsFreeHomeDelivery)
                                                        </span>
                                                        @Html.LabelFor(model => model.IsFreeHomeDelivery, "Is Free Home Delivery", new { @class = " control-label" })
                                                    </label>
                                                    <div class="freeDeliveryBox2" style="display:none;">
                                                        @Html.LabelFor(model => model.MinimumAmountForFreeDelivery, "Minimum Amount For Free Delivery", new { @class = " " })
                                                        <div class="set-input-wdth">
                                                            @Html.TextBoxFor(model => model.MinimumAmountForFreeDelivery, new { required = "required" })
                                                            @Html.ValidationMessageFor(model => model.MinimumAmountForFreeDelivery)
                                                        </div>
                                                    </div>
                                                </div>


                                            </li>


                                        </ul>

                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="box-content" style="width:200px;">
                            @*<input type="submit" value="Save" class="btn btn-default btn-Ifrm-submit mrg-left mrg-top" />*@
                            <input type="submit" value="Save" class="btn btn-small btn-warning mrg-left mrg-top" />
                        </div>

                    </div>
                </div>

            </div>

        </div>
    }
</div>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>**@

<script src="~/Content/js/jquery-2.1.3.min.js"></script>
<script type="text/javascript">
    //alert("1");
    var lPincode = $('#Pincode').val()
    //alert("2");
    $('#Pincode').bind('input propertychange', function () {
        var lPincode = $('#Pincode').val()
        $('#divPincodeError').hide();

        if (lPincode.length == 6) {
            $('#Pincode_loading').show();
            $.ajax({
                url: '@Url.Action("GetAddress", "MShop")?Pincode=' + lPincode,
                type: "GET",
                //success: function (result) {
                //    //$('#divAddress').html(result);
                //    $('#Pincode_loading').hide();
                //    $('#divPincodeError').hide();
                //    if (result == "1") {
                //        $('#divPincodeError').show();
                //        $('#divPincodeError').html('Pincode [' + lPincode + '] dose not exist, please Contact to ADMIN');
                //        $('#Pincode').val('');
                //    }
                //},
                //error: function (data) {
                //    //alert('Pincode : ' + lPincode + ' Dose Not Exist, please Contact to ADMIN');
                //    //$('#divAddress').empty();
                //    //$('#Pincode_loading').hide();
                //    $('#divPincodeError').hide();
                //    //$('#divPincodeError').html('Pincode [' + lPincode + '] dose not exist, please Contact to ADMIN');
                //    //$('#Pincode').val('');
                //}
                success: function (result) {
                    $('#divAddress').html(result);
                    $('#divAddress2').hide();
                    $('#Pincode_loading').hide();
                    $('#divPincodeError').hide();
                },
                error: function (data) {
                    //alert('Pincode : ' + lPincode + ' Dose Not Exist, please Contact to ADMIN');
                    $('#divAddress').empty();
                    $('#Pincode_loading').hide();
                    $('#divPincodeError').show();
                    $('#divPincodeError').html('[' + lPincode + '] dose not exist, Contact to ADMIN');
                    $('#Pincode').val('');
                }
            });
        }
    });



    $("select#Pincode").bind('change', function () {

        var Pincode = $("select#Pincode option:selected").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAreaIDByPincodeID", "MShop")',
            data: { 'Pincode': Pincode },
            //dataType: "json",
            cache: false,
            success: function (msg) {
                $('#ddlArea').empty();
                //$('#ddlCategoryLevel2').empty();
                //$('#ddlProduct').empty();
                $('#ddlArea').append('<option value=0>--Select--</option>');
                //$('#ddlArea').append('<option value=0>--Select--</option>');
                //$('#ddlProduct').append('<option value=0>--Select--</option>');
                $.each(msg, function (index, item) {
                    $('#ddlArea').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                });
            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });

        //}
    });

</script>
