@using PagedList;
@using PagedList.Mvc;
@using Franchise.Models.ViewModel;
@model IPagedList<ModelLayer.Models.WishList>

@{
    ViewBag.Title = "List [ Wishlist ]";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<ProductByShopStockViewModel> ProductByShopStockViewModels = ViewBag.ProductByShopStockViewModels;
}

<style>
    input {
        width: 80px;
    }

    select {
        width: 120px;
    }

    #divtable {
        width: 1100px;
        margin-left: 35px;
        border: 1px solid#ccc;
    }

        #divtable h3 {
            padding: 11px;
            background-color: #794F2B;
            background-image: linear-gradient(hsla(0,0%,100%,.05), hsla(0,0%,0%,.05)), linear-gradient(-72deg, hsla(0,0%,100%,.05) 50%, transparent 50%);
            box-shadow: inset 0 0 .25em hsla(0,0%,0%,.1), inset 0 0 1.5em hsla(0,0%,0%,.25);
            border-bottom: 1px solid #d6d6d6;
            color: #FAFAFA;
        }

    .widget {
        padding: 0px;
        margin-bottom: 28px;
        margin-top: -10px;
    }

    .widget-content {
        padding: 10px;
    }

    .btn {
        line-height: 18px;
        border-radius: 4px !important;
    }
</style>
<div class="row">
    <div class="span12" id="divtable" style="margin-top:12px;">
        <div class="widget">
            <div class="widget-header">

                <h3><i class="icon-list-alt"></i> List [ Wishlist ]</h3>
            </div>
            <!-- /widget-header -->
            <div class="widget-content">
                <div class="widget big-stats-container">
                    <div class="widget-content matchdivheight">

                        @using (Html.BeginForm("Index", "WishList", FormMethod.Post))
                        {   @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                <table>
                                    <tr style="line-height:45px;">
                                        <td>From Date</td>
                                        <td>@Html.TextBox("FromDate", null, new { @readonly = "readonly" })</td>
                                        <td>To Date</td>
                                        <td>@Html.TextBox("ToDate", null, new { @readonly = "readonly" })</td>
                                        <td align="right">
                                            <button type="submit" value="Search" class="btn btn-small btn-warning1">
                                                <span class="glyphicon glyphicon-search"></span> Search
                                            </button>
                                        </td>
                                        <td><button type="button" class="btn btn-small btn-info1" id="btn_clear">Clear</button></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>Root Category</td>
                                        <td>@Html.DropDownList("CategoryLevel0", "All")</td>
                                        <td>&nbsp;&nbsp;&nbsp;Category</td>
                                        <td><select id="ddlCategoryLevel1" name="ddlCategoryLevel1" /></td>
                                        <td>&nbsp;&nbsp;&nbsp;Sub Category</td>
                                        <td><select id="ddlCategoryLevel2" name="ddlCategoryLevel2" /></td>
                                        <td>&nbsp;&nbsp;&nbsp;Product</td>
                                        <td><select id="ddlProduct" name="ddlProduct" /></td>
                                    </tr>
                                </table>
                            </div>
                        }

                        <table class="table table-bordered table-hover table-responsive table-striped">
                            <tr>
                                <th style="width:20px;">Sr.No</th>
                                <th>
                                    Customer Name
                                </th>
                                <th style="width:100px;">
                                    Mobile
                                </th>
                                <th>
                                    Email
                                </th>
                                <th style="width:160px;">
                                    Product
                                </th>
                                <th style="width:160px;">
                                    Date
                                </th>
                                @*<th>
                                        @Html.DisplayNameFor(model => model.NetworkIP)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.DeviceType)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.DeviceID)
                                    </th>*@
                                @*<th style="width:20px;">Alert</th>*@
                            </tr>
                            @if (Model.Count() == 0)
                            {
                                <tr>
                                    <td colspan="6" class="text-center"><h3>No Record Found...</h3></td>
                                </tr>
                            }
                            else
                            {
                                int i = 1;
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@{int SrNo = ((ViewBag.PageNumber - 1) * ViewBag.PageSize) + i; i = i + 1; } @SrNo</td>
                                        <td>
                                            &nbsp;@Html.DisplayFor(model => item.PersonalDetail.Salutation.Name)
                                            &nbsp;@Html.DisplayFor(modelItem => item.PersonalDetail.FirstName)
                                            &nbsp;@Html.DisplayFor(modelItem => item.PersonalDetail.MiddleName)
                                            &nbsp;@Html.DisplayFor(modelItem => item.PersonalDetail.LastName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserLogin.Mobile)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserLogin.Email)
                                        </td>
                                        <td>
                                            @*@Html.DisplayFor(modelItem => item.ShopStock.ShopProduct.Product.Name)*@
                                            @{
                                        string ProductName = "";
                                        ProductByShopStockViewModel lProductByShopStockViewModel = ProductByShopStockViewModels.FirstOrDefault(x => x.ShopStockID == item.ShopStockID);
                                        if (lProductByShopStockViewModel != null)
                                        {
                                            ProductName = ProductByShopStockViewModels.FirstOrDefault(x => x.ShopStockID == item.ShopStockID).ProductName;
                                        }

                                            }
                                            @ProductName
                                        </td>
                                        <td>
                                            @*@Html.DisplayFor(modelItem => item.CreateDate)*@
                                            @item.CreateDate.ToString("dd/MM/yyyy hh:mm:ss tt")
                                        </td>
                                        @*<td>
                                                    @Html.DisplayFor(modelItem => item.NetworkIP)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.DeviceType)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.DeviceID)
                                                </td>
                                            <td>*@
                                        @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })*@
                                        @*<a class="btn btn-small btn-success a_white">Send</a>
                                            </td>*@
                                    </tr>
                                }
                            }

                        </table>
                        <div class="pager">
                            @Html.PagedListPager(Model, Page => Url.Action("Index", new { page = Page, SearchString = ViewBag.SearchString }),
                                                                    new PagedListRenderOptions()
                                                                    {
                                                                        Display = PagedListDisplayMode.IfNeeded
                                                                    })
                        </div>
                    </div>
                    <!-- /widget-content -->
                </div>
            </div>
        </div>
    </div>
    <!-- /span12 -->
    @*<div class="span4">
            <div class="loader">
                <img id="loader_img" src="~/Content/Images/loader.gif" style="display: none" />
            </div>
            <div id="Details"></div>
        </div>*@

</div>
@section MyScripts{
    <script>

        //----------------------------------------------------------------------For datepicker---//
        //<![CDATA[
        $(window).load(function () {
            //$('#DOB').datepicker('setDate', new Date());
            $('#FromDate').datepicker('update');
            $('#ToDate').datepicker('update');
        });//]]>



        $("select#CategoryLevel0").bind('change', function () {

            var categoryid = $("select#CategoryLevel0 option:selected").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCategoryLevel1ByParentCategory", "WishList")',
                data: { 'categoryID': categoryid },
                //dataType: "json",
                cache: false,
                success: function (msg) {
                    $('#ddlCategoryLevel1').empty();
                    $('#ddlCategoryLevel2').empty();
                    $('#ddlProduct').empty();
                    $('#ddlCategoryLevel1').append('<option value=0>--Select--</option>');
                    $('#ddlCategoryLevel2').append('<option value=0>--Select--</option>');
                    $('#ddlProduct').append('<option value=0>--Select--</option>');
                    $.each(msg, function (index, item) {
                        $('#ddlCategoryLevel1').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                    });
                },
                error: function (x, e) {
                    //alert('Failure');
                    //alert("The call to the server side failed. " + x.responseText);
                }
            });

            //}
        });

        $("select#ddlCategoryLevel1").bind('change', function () {

            var categoryid = $("select#ddlCategoryLevel1 option:selected").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCategoryLevel2ByCategoryLevel1", "WishList")',
                data: { 'categoryID': categoryid },
                //dataType: "json",
                cache: false,
                success: function (msg) {
                    $('#ddlCategoryLevel2').empty();
                    $('#ddlProduct').empty();
                    $('#ddlCategoryLevel2').append('<option value=0>--Select--</option>');
                    $('#ddlProduct').append('<option value=0>--Select--</option>');
                    $.each(msg, function (index, item) {
                        $('#ddlCategoryLevel2').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                    });
                },
                error: function (x, e) {
                    //alert('Failure');
                    //alert("The call to the server side failed. " + x.responseText);
                }
            });

            //}
        });


        $("select#ddlCategoryLevel2").bind('change', function () {

            var categoryid = $("select#ddlCategoryLevel2 option:selected").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetPoductByCategoryId", "WishList")',
                data: { 'categoryID': categoryid },
                //dataType: "json",
                cache: false,
                success: function (msg) {
                    $('#ddlProduct').empty();
                    $('#ddlProduct').append('<option value=0>--Select--</option>');
                    $.each(msg, function (index, item) {
                        $('#ddlProduct').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                    });
                },
                error: function (x, e) {
                    //alert('Failure');
                    //alert("The call to the server side failed. " + x.responseText);
                }
            });

            //}
        });
    </script>
}


