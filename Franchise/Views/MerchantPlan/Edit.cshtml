@*//-----------------------------------------------------------------------
        // <copyright file="Edit.cshtml" company="Ezeelo Consumer Services Pvt. Ltd.">
        //     Copyright (c) Ezeelo Consumer Services Pvt. Ltd. All rights reserved.
        //
    </copyright>
        // <author>Snehal Shende</author>
        //-----------------------------------------------------------------------*@
@model ModelLayer.Models.OwnerPlan

@{
    ViewBag.Title = "Edit";
}

<style>
    .beatpicker-clear {
        display: none;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="span10" id="content">
        <ul class="breadcrumb">
            <li>
                <i class="icon-group"></i>
                Merchant Plan
            </li>
        </ul>
        <div class="row-fluid sortable ui-sortable">
            <div class="box span12">
                <div class="box-header" data-original-title="">
                    <h2><i class="icon-edit"></i><span class="break">Edit</span></h2>

                </div>
                <div class="box-content">
                    <form class="form-horizontal">
                        <fieldset>
                            @Html.ValidationMessage("CustomError")
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.ID)

                            <div class="control-group">
                                @Html.LabelFor(model => model.PlanID, "Plan", new { @class = "control-label span2" })
                                <div class="controls">
                                    @Html.DropDownList("PlanID", null, "Select Plan", new { @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.PlanID)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.OwnerID, "Owner", new { @class = "control-label span2" })
                                <div class="controls">
                                    @Html.DropDownList("OwnerID", null, "Select Merchant", new { @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.OwnerID)
                                </div>
                            </div>

                            <div class="control-group icon-dt">
                                @Html.LabelFor(model => model.StartDate, "Start Date", new { @class = "control-label span2" })
                                <div class="controls">                                   
                                    @Html.TextBox("SDate", null, new { @readonly = "readonly", @class = "input" }) 
                                    @*<input type="text" id="SDate" name="SDate" value="@ViewBag.SDate" readonly="readonly" />*@
                                    @Html.ValidationMessageFor(model => model.StartDate)
                                </div>
                            </div>

                            <div class="control-group icon-dt">
                                @Html.LabelFor(model => model.EndDate, "End Date", new { @class = "control-label span2" })
                                <div class="controls">                                    
                                    @Html.TextBox("EDate", null, new { @*@readonly = "readonly",*@ @class = "input" })                                    
                                    @*<input type="text" id="EDate" name="EDate" value="@ViewBag.EDate" data-beatpicker="true" data-beatpicker-position="['*','*']" />*@
                                    @Html.ValidationMessageFor(model => model.EndDate)
                                    <label for="EDate" class="dtPic"><i class="glyphicons-icon calendar"></i></label>
                                </div>
                            </div>

                            @*<div class="control-group">
                                    @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label span2" })
                                    <div class="controls">
                                        @Html.EditorFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive)
                                    </div>
                                </div>*@

                            <div class="form-actions">
                                <div class="col-md-offset-2 span10">
                                    <input type="submit" value="Deactivate" class="btn btn-danger" />
                                    @Html.ActionLink("Back to List", "Index", "MerchantPendingApprovals", null, new { @class = "btn" })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/Content/js/jquery-2.1.3.min.js"></script>
<script>

    //----------------------------------------------------------------------For datepicker---//
    //<![CDATA[
    

    $(window).load(function () {
        //$('#SDate').datepicker('update');
        $('#EDate').datepicker('update');
    });//]]>
</script>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@*<script type="text/javascript">
    $(document).ready(function () {
        var statusGenerator = function (text) {
            var statusElem = $(".status-box");
            var child = $("<span style='display: block'></span>").text(text);
            statusElem.append(child);
        };
        myDatePicker.on("select", function (data) {
            statusGenerator(data.string + " selected")
        });
        myDatePicker.on("change", function (data) {
            statusGenerator("Date picker changed current date: " + data.string);
        });
        myDatePicker.on("show", function () {
            statusGenerator("Date picker show")
        });
        myDatePicker.on("clear", function (data) {
            statusGenerator("Date picker cleared. cleared date: " + data.string)
        });
        myDatePicker.on("hide", function () {
            statusGenerator("Date picker hide")
        });
    })

</script>*@