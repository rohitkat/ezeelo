@model ModelLayer.Models.ViewModel.EmployeeManagement

@{
    ViewBag.Title = "Edit";
}



@*<link href="~/Content/assets/css/form-design.css" rel="stylesheet" />*@
<link href="~/Content/css/style_asset.css" rel="stylesheet" />
<style>
    #msform1 fieldset:not(:first-of-type) {
        display: none;
    }

    .max-width {
        max-width: 88% !important;
        margin: 0px 79.09375px 0px 10px !important;
    }

    .text-box {
    }

    h2 {
        color: #fff;
    }

    .wdth-small {
        width: 74px;
    }

    .wdth-mid {
        width: 125px;
    }

    .wdth-large {
        width: 163px;
    }

    .mrg-leftSm {
        margin-left: 2px;
    }

    .mrg-top {
        margin-top: 10px;
    }


    .login-div {
        float: right;
        margin-top: 10px;
    }

    .login-btn {
        width: 59px !important;
    }

    .max-width {
        max-width: 88% !important;
        margin: 0px 79.09375px 0px 10px !important;
    }

    .add {
        margin-left: 12px !important;
        margin-right: 472px;
    }

    .alert-danger, .alert-error {
        margin-left: 95px;
    }

    .form-actions {
        background: none !important;
    }

    #BusinessOwner {
        margin-top: 0 !important;
        margin-left: 0 !important;
    }

    select {
        width: 220px;
        background-color: #ffffff !important;
        border: 1px solid #eee !important;
    }

    .text-box {
        width: 210px;
        background-color: #ffffff !important;
        border: 1px solid #eee !important;
    }

    .NameDescription .control-group {
        margin-right: 20px;
    }

    div.checker {
        margin-left: 0px;
        margin-top: 0px !important;
    }

    .action-second {
        background-color: #FFEFD8 !important;
    }

    #Salutation {
        width: 220px !important;
    }

    #Gender {
        width: 220px;
    }

    .is-ac {
        margin-left: -492px !important;
        margin-top: 70px;
    }

    #Address {
        width: 613px;
        padding-bottom: 50px;
    }

    #FirstName {
        width: 206px;
    }

    #MiddleName {
        width: 206px;
    }

    #LastName {
        width: 206px;
    }

    .for-bor {
        border: 1px solid#eee;
        padding: 3px;
    }

    .NameDescription input, .NameDescription select {
        border: 1px solid#eee !important;
    }

    .form-actions {
        padding: 19px 20px 20px;
        margin: 365px -10px -10px -11px;
        background-color: #FFEFD8;
        border-top: 1px solid #eee;
    }

    input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
        width: 206px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="content" class="span10" style="min-height: 400px;">
        <div class="row-fluid">
            <div class="box span12">
                <div class="box-header">
                    <h2><i class="icon-group"></i><span class="break"></span>Employee Management Edit</h2>

                </div>
                <div class="box-content box_contRespons">
                    <form class="form-horizontal">

                        @Html.ValidationSummary(false)
                        @Html.HiddenFor(model => model.ID)
                        @Html.HiddenFor(model => model.UserLoginID)

                        @*<div class="content-hed">

                                                    <div class="control-group clearfix">
                                                            @Html.LabelFor(model => model.UserLoginID, new { @class = "control-label span2 top-text" })
                                                            <div class="controls">
                                                                @Html.DisplayFor(model => model.UserLoginID)

                                                                @Html.ValidationMessageFor(model => model.UserLoginID)
                                                            </div>
                                                        </div>


                                                   <div class="control-group clearfix">
                                    @Html.LabelFor(model => model.EmployeeCode, new { @class = "control-label span2 top-text" })
                                    <div class="controls">
                                        @Html.DisplayFor(model => model.EmployeeCode)
                                        @Html.HiddenFor(model => model.EmployeeCode)
                                        @Html.ValidationMessageFor(model => model.EmployeeCode)
                                    </div>
                                </div>
                            </div>*@
                        @*<div class="control-group">
                            <label class="control-label span2" for="focusedInput"> Business Type</label>
                            <div class="controls">

                              @Html.DropDownList("OwnerType", "Select Business")
                                                        <span id="OwnerTypeMsg"></span>
                                                        @Html.ValidationMessageFor(model => model.OwnerID)
                                                    </div>
                                                </div>*@

                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                <label class="control-label col-md-2" for="focusedInput"> EmployeeCode</label>
                            </div>
                            <div class="span3">
                                @Html.DisplayFor(model => model.EmployeeCode, new { @class = "for-bor" })
                                @Html.HiddenFor(model => model.EmployeeCode)
                                @Html.ValidationMessageFor(model => model.EmployeeCode)
                            </div>
                            <div class="span2">
                                <label class="control-label col-md-2" for="focusedInput">Owner Name</label>
                            </div>
                            <div class="span3">
                                @Html.DropDownList("BusinessOwner", "Select")
                                <span id="BusinessOwnerMsg"></span>
                                @Html.ValidationMessageFor(model => model.OwnerID)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                <label class="control-label col-md-2" for="focusedInput"> Salutation</label>
                            </div>
                            <div class="span3">
                                @Html.DropDownList("Salutation")
                                <span id="SalutationMsg"></span>
                                @Html.ValidationMessageFor(model => model.SalutationID)
                            </div>
                            <div class="span2">
                                @Html.LabelFor(model => model.FirstName)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.FirstName, new { @class = "col-md-2" })
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                @Html.LabelFor(model => model.MiddleName)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.MiddleName)
                                @Html.ValidationMessageFor(model => model.MiddleName)
                            </div>
                            <div class="span2">
                                @Html.LabelFor(model => model.LastName)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.LastName)
                                @Html.ValidationMessageFor(model => model.LastName)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                @Html.LabelFor(model => model.Gender)
                            </div>
                            <div class="span3">
                                @Html.DropDownList("Gender", "Select for_width")
                                <span id="GenderMsg"></span>
                                @Html.ValidationMessageFor(model => model.Gender)
                            </div>
                            <div class="span2">
                                @Html.LabelFor(model => model.Mobile)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.Mobile)
                                <span id="MobileError"></span>
                                @Html.ValidationMessageFor(model => model.Mobile)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                @Html.LabelFor(model => model.AlternateMobile)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.AlternateMobile)
                                @Html.ValidationMessageFor(model => model.AlternateMobile)
                            </div>
                            <div class="span2">
                                @Html.LabelFor(model => model.Email)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.Email)
                                <span id="EmailError"></span>
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                @Html.LabelFor(model => model.AlternateEmail)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.AlternateEmail)
                                @Html.ValidationMessageFor(model => model.AlternateEmail)
                            </div>
                            <div class="span2">
                                @Html.LabelFor(model => model.Password)
                            </div>
                            <div class="span3">
                                @Html.EditorFor(model => model.Password)
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">
                                @Html.LabelFor(model => model.Address)
                            </div>
                            <div class="span10">
                                @Html.EditorFor(model => model.Address)
                                @Html.ValidationMessageFor(model => model.Address)
                            </div>
                        </div>
                        <div class="span12" style="margin-left: 0px;">
                            <div class="span2">

                                @Html.LabelFor(model => model.IsActive)
                            </div>
                            <div class="span3">
                                <div class="controls">
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                </div>

                            </div>
                        </div>


                        <div class="form-actions action-second">
                            <div class="col-md-offset-2 col-md-10 both-btn">
                                <input type="submit" value="Save" id="btnSubmit" class="btn btn-primary btn-small" />
                                @Html.ActionLink("Back to List", "Index", string.Empty, new { @class = "btn btn-small" })
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(function () {
        $("#btnSubmit").click(function (e) {
            //alert('1');
            var selectedOwner = $("#BusinessOwner option:selected ").val();
            var selectOwnerType = $("#OwnerType option:selected").val();
            var Salutation = $("#Salutation option:selected").val();
            var selectGender = $("#Gender option:selected").val();

            $('#OwnerTypeMsg').text('');
            $('#BusinessOwnerMsg').text('');
            $('#salutationMsg').text('');
            $('#GenderMsg').text('');


            if (selectOwnerType == "Select Business" || selectOwnerType == '') {
                $('#OwnerTypeMsg').text("Select Business type");
                // alert('Please select the Business type');
                return false;
            }
            else if (selectedOwner == "Select Owner" || selectedOwner == 0) {
                $('#BusinessOwnerMsg').text("Select Owner");

                //alert('Select Owner');
                return false;

            }
            else if (Salutation == 'Select' || Salutation == '') {
                $('#salutationMsg').text("Select Salutation");
                // alert('Select Salutation');
                return false;
            }
            else if (Gender == 'Select' || selectGender == '') {
                $('#GenderMsg').text("Select Gender");
                //alert('Plese Select the Gender');
                return false;
            }
        });
    });

    $(function () {
        //MobileError
        $('#Mobile').blur(function (e) {
            var strMobile = $("#Mobile").val();
            var strUserLoginID = $("#UserLoginID").val();

            $.ajax({
                type: "POST",
                url: "/EmployeeManagement/CheckEditMobile",
                data: "{ 'strMobile': '" + strMobile + "', 'strUserLoginID': '" + strUserLoginID + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                cache: false,
                success: function (msg) {
                    if (msg > 0) {
                        $("#MobileError").text("Mobile No is Already Exist");

                    }
                    else
                        $("#MobileError").text('');
                },
                error: function (x, e) {
                    alert("unable to Retrive Mobile No ");
                }

            });
        });
    });

    $(function () {
        //MobileError
        $('#Email').blur(function (e) {
            //alert('hello');
            var strEmail = $("#Email").val();
            var strUserLoginID = $("#UserLoginID").val();
            $.ajax({
                type: "POST",
                url: "/EmployeeManagement/CheckEditEmail",
                data: "{ 'strEmail': '" + strEmail + "', 'strUserLoginID': '" + strUserLoginID + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                cache: false,
                success: function (msg) {
                    if (msg > 0)
                        $("#EmailError").text("Email Address is Already Exist");
                    else
                        $("#EmailError").text('');
                },
                error: function (x, e) {
                    alert("unable to Retrive Email No ");
                }

            });
        });
    });
    //$(function () {
    //    $("#btnSubmit").click(function (e) {
    //        //alert('1');
    //        var selectedOwner = $("#BusinessOwner option:selected ").val();
    //        var selectOwnerType = $("#OwnerType option:selected").val();
    //        var Salutation = $("#Salutation option:selected").val();
    //        var selectGender = $("#Gender option:selected").val();
    //        if (selectOwnerType == "Select Business" || selectOwnerType == '') {
    //            alert('Please select the Business type');
    //            return false;
    //        }
    //        else if (selectedOwner == "Select Owner" || selectedOwner == 0) {
    //            alert('Select Owner');
    //            return false;

    //        }
    //        else if (Salutation == 'Select' || Salutation == '') {
    //            alert('Select Salutation');
    //            return false;
    //        }
    //        else if (Gender == 'Select' || selectGender == '') {
    //            alert('Plese Select the Gender');
    //            return false;
    //        }
    //    });
    //});

    $(function () {
        $('#OwnerType').change(function (e) {
            var selectedVal = $("#OwnerType option:selected").val();
            if (selectedVal > 0) {

                $.ajax({
                    type: "POST",
                    url: "/EmployeeManagement/getOwnerID",
                    data: "{ businessTypeID: '" + selectedVal + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    cache: false,
                    success: function (msg) {
                        $('#BusinessOwner').empty();
                        $('#BusinessOwner').append('<option value=0>Select Owner</option>');
                        $.each(msg, function (index, item) {
                            $('#BusinessOwner').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                        });
                    },
                    error: function (x, e) {
                        alert("Sorry No Such Type of Owner Is available. ");
                    }
                });
            }
        });
    });

</script>