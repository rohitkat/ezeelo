@model ModelLayer.Models.ViewModel.InvoiceViewModel

@using ModelLayer.Models.ViewModel

@* This partial view defines form fields that will appear when creating and editing entities *@
<style type="text/css">
    #msform1 fieldset:not(:first-of-type) {
        display: none;
    }

    .field-validation-error {
        color: #000000 !important;
    }

    .succes-msg {
        color: #31A012;
        font-size: 20px;
    }

    .beatpicker-clearButton button {
        display: none;
    }

    .input-parent button {
        display: none;
    }

    .textarea-adjust {
        width: 85%;
    }
    /*Beatpicker Css*/
    .beatpicker-clearButton button {
        display: none;
    }

    .input-parent button {
        display: none;
    }

    .header-navbar-button {
        position: absolute !important;
    }

    .beatpicker .main-nav .current-indicator {
        text-align: center !important;
    }

    .beatpicker .main-nav .prev1 {
        left: 0 !important;
        width: 14%;
        padding: 0px 10px;
        color: #fff;
        font-size: 16px;
    }

    .beatpicker .main-nav .next1 {
        right: 0 !important;
        width: 9%;
        color: #fff;
        font-size: 16px;
    }

    .beatpicker .main-nav .prev1:hover {
        left: 0 !important;
        width: 14%;
        padding: 0px 10px;
        color: #fff;
        font-size: 20px;
        cursor: pointer !important;
    }

    .beatpicker .main-nav .next1:hover {
        right: 0 !important;
        width: 9%;
        color: #fff;
        font-size: 20px;
        cursor: pointer !important;
    }

    #divImages .remove {
        background: url(/Content/img/remove-icon.png) no-repeat 0px 0px #fff;
        float: left;
        font-size: 0 !important;
        width: 23px !important;
        padding: 2px 4px;
    }
    /*Beatpicker Css End*/

    #Remark {
        width: 99%;
    }
</style>



<link href="~/Content/css/BeatPicker.min.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.11.0.min.js"></script>
<script src="~/Content/js/BeatPicker.js"></script>
<link href="~/Content/assets/css/style.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.9.1.min.js"></script>
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<link href="~/Content/assets/css/form-design.css" rel="stylesheet" />

<div class="row-fluid">
    <div class="box span12">
        <div class="box-header creatProduct clearfix" data-original-title="">
            <h2>
                <i class="icon-exclamation-sign"></i>
                <span class="break"></span>
                INVOICE DETAIL
            </h2>
        </div>
        <div class="box-content">
            <div class="form-horizontal">
                @Html.HiddenFor(model => @Model.InvoiceID)
                @Html.HiddenFor(model=>model.IsFulfillmentCenter)
                <div class="display-label" style="font-size:large; color:red">Invoice Code: <b>@Model.InvoiceCode</b>
                @Html.HiddenFor(model => @Model.InvoiceCode)
                </div>
                <div class="display-label">Warehouse Name: <b>@Model.WarehouseName</b></div>
                <div class="display-label">Supplier Name: <b>@Model.SupplierName</b></div>
                <div class="display-label">Invoice Date: <b>@Model.InvoiceDate.ToString("dd/MM/yyyy")</b></div>
                @Html.HiddenFor(model => @Model.InvoiceDate)
                <div class="display-label">Total Discount Amount:<b><i class="fa fa-inr"></i> @Model.TotalDiscountAmount</b></div>
                <div class="display-label">Shipping Charge: <b><i class="fa fa-inr"></i> @Model.ShippingCharge</b></div>
                <div class="display-label">Custom Duty Charge: <b><i class="fa fa-inr"></i> @Model.CustomDutyCharge</b></div>
                <div class="display-label">Operating Cost: <b><i class="fa fa-inr"></i> @Model.OperatingCost</b></div>
                <div class="display-label">Additional Cost: <b><i class="fa fa-inr"></i> @Model.AdditionalCost</b></div>
                <div class="display-label">Invoice Amount: <b><i class="fa fa-inr"></i> @Model.OrderAmount</b></div>
                <div class="display-label">Total Amount: <b><i class="fa fa-inr"></i> @Model.TotalAmount</b></div>
                <div class="display-label">Remark: <b>@Model.Remark</b></div>
                <b>@ViewBag.SelectedDvName</b>
                @if (Model.Invoice_Attachment != null)
                { <div class="display-label"><a class="submenu" style="color:blue;cursor:pointer" href=@Url.Action("Download","Invoices", new { fileName = Model.Invoice_AttachmentFileName }) id="btnRate"><span class="hidden-tablet">DownLoad Attachment -> @Model.Invoice_AttachmentFileName</span></a></div>}
@if (Model.IsFulfillmentCenter==true)
{ 
     <div class="display-label" style="visibility:hidden"> Select Shop to add items: 
                    @Html.DropDownListFor(model => model.ShopID, ((IEnumerable<ModelLayer.Models.Shop>)ViewBag.AllShops).Select(option => new SelectListItem
{
    Text = (option == null ? "None" : option.Name),
    Value = option.ID.ToString(),
    Selected = (Model != null) && (option.ID == Model.ShopID)
}), "--Select Shop--")

                    @Html.ValidationMessageFor(model => model.ShopID)
                </div>
    <b>SHOP DETAIL</b>
    <div class="display-label">Shop Name: <b style="font-size:large">@Model.ShopName</b></div>  
    <div class="display-label">Address: <b>@Model.ShopAddress</b></div>    
                       if(@ViewBag.IsReadyToApprove==false)
                            { 
                              <b style="color:red">Note: Please ensure that all items are exist/approved in Shop.</b>
                            }
}
            </div>
        </div>
    </div>

    <div class="box">
        <div class="box-header creatProduct clearfix" data-original-title="">
            <h2>
                <i class="icon-file-alt"></i>
                <span class="break"></span>
                INVOICE ITEM(S)
            </h2>
        </div>

        <div class="box-content nameDscrp">
            <div class="NameDescription">
                <div class="box-content box-content1" style="padding-left:0px;width:99%;overflow-x:scroll;z-index:1;">
                    <div id="ItemDetails">
                        <table id="tbl" class="table table-striped table-bordered bootstrap-datatable datatable dataTable" width="100%">
                            <tr>
                             @if (Model.IsFulfillmentCenter==true)
                                {
                                <th>Is Item Exists In Shop</th>
                                }
                                <th>Product</th>
                                <th>Item</th>
                                <th>HSN Code</th>
                                @*<th>Required Quantity</th>*@
                                <th>Received Quantity</th>
                                <th>BuyRatePerUnit</th>
                                <th>MRP</th>
                                <th>SaleRate</th>
                                <th>CGST/Unit</th>
                                <th>SGST/Unit</th>
                                <th>IGST/Unit</th>
                                <th>Amount</th>
                                <th>Reorder Level</th>
                                <th>Item Expiry Date</th>
                                <th>Remark</th>
                            </tr>
                            @*@foreach (var item in Model)*@
                            @for (int i = 0; i < Model.lInvoiceDetailViewModels.Count; i++)
                            {
                                <tr>
                                @if (Model.IsFulfillmentCenter==true)
                                    {
                                    <td>
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].IsItemExistsInShop)
                                        @Html.CheckBoxFor(model => @Model.lInvoiceDetailViewModels[i].IsItemExistsInShop, new { disabled = "disabled" })                                        
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].ShopStockID)
                                    </td>
                                    }
                                    <td class="table-shopping-cart-img" style="text-align: left;">
                                        <img id=" imgproductimage" src="@Model.lInvoiceDetailViewModels[i].StockThumbPath" onerror="this.src = '/Content/Images/no_image.png'" style="width: 70px; height:70px;" alt=" eZeelo " />
                                    </td>
                                    <td>                                       
                                        @Model.lInvoiceDetailViewModels[i].ItemName
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].PurchaseOrderDetailsID)
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].ProductID)
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].ProductVarientID)
                                       
                                    </td>
                                    <td>
                                        @Model.lInvoiceDetailViewModels[i].HSNCode
                                    </td>
                                    @*<td>
                                        @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].Quantity, @Model.lInvoiceDetailViewModels[i].Quantity.ToString(), new { text = @Model.lInvoiceDetailViewModels[i].Quantity, value = @Model.lInvoiceDetailViewModels[i].Quantity, id = "Quantity_" + i, placeholder = "0", Style = "width:30px" })
                                    </td>*@
                                    <td>
                                        @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].ReceivedQuantity, @Model.lInvoiceDetailViewModels[i].ReceivedQuantity.ToString(), new { id = "ReceivedQuantity_" + i, placeholder = "0", Style = "width:30px" })
                                    @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].ReceivedQuantity)
                                </td>
                                <td>
                                    @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].BuyRatePerUnit, @Model.lInvoiceDetailViewModels[i].BuyRatePerUnit.ToString(), new { id = "BuyRatePerUnit_" + i, placeholder = "0", Style = "width:40px" })
                                    @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].BuyRatePerUnit)
                                </td>
                                    <td>
                                        @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].MRP, @Model.lInvoiceDetailViewModels[i].MRP.ToString(), new { id = "MRP_" + i, placeholder = "0", Style = "width:40px" })
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].MRP)
                                    </td>
                                    <td>
                                        @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].SaleRate, @Model.lInvoiceDetailViewModels[i].SaleRate.ToString(), new { id = "SaleRate_" + i, placeholder = "0", Style = "width:40px" })
                                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].SaleRate)
                                    </td>
                                <td>
                                    @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].CGSTAmount, @Model.lInvoiceDetailViewModels[i].CGSTAmount.ToString(), new { placeholder = "0", Style = "width:40px" })
                                @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].CGSTAmount)
                            </td>
                            <td>
                                @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].SGSTAmount, @Model.lInvoiceDetailViewModels[i].SGSTAmount.ToString(), new { placeholder = "0", Style = "width:40px" })
                            @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].SGSTAmount)
                        </td>
                        <td>
                            @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].IGSTAmount, @Model.lInvoiceDetailViewModels[i].IGSTAmount.ToString(), new { placeholder = "0", Style = "width:40px" })
                        @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].IGSTAmount)

                    </td>
                    <td>
                        @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].Amount, @Model.lInvoiceDetailViewModels[i].Amount.ToString(), new { @class = "txt", id = "Amount_" + i, placeholder = "0", Style = "width:40px" })
                    @Html.HiddenFor(model => @Model.lInvoiceDetailViewModels[i].Amount)
                    </td>
                    <td>
                        @Html.TextBoxFor(model => @Model.lInvoiceDetailViewModels[i].ReorderLevel, @Model.lInvoiceDetailViewModels[i].ReorderLevel.ToString(), new { placeholder = "0", Style = "width:40px" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => @Model.lInvoiceDetailViewModels[i].ExpiryDate, "{0:MM/dd/yyyy}", new { id = "ExpiryDate_" + i, @readonly = "readonly", placeholder = "Expiry Date", Style = "width:70px" })
                    </td>
                    <td>
                        @Html.LabelFor(model => @Model.lInvoiceDetailViewModels[i].Remark, @Model.lInvoiceDetailViewModels[i].Remark, new { Style = "width:180px" })
                    </td>
                    </tr>
                            }
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script language="javascript">

    //If in future 1 fulfillment center have more than 1 shop then we can utilizy this method
    $("select#ShopID").bind('change', function () {
        
        var InvoiceID = $("#InvoiceID").val();
        var ShopID = $("select#ShopID option:selected").val();
        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("Edit", "WarehouseStocks")',
            data: { 'InvoiceID': InvoiceID, 'ShopID': ShopID },
            //dataType: "json",
            cache: false,
            success: function (data) {
                //SecondLevelCategory(data);

            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    });
    //End




    $(document).ready(function () {
        var table = document.getElementById('tbl');
        var rowLength = table.rows.length;


        for (var i = 0; i < rowLength-1; i++) {
            $('.table #ExpiryDate_' + i).each(function () {
                $(this).datepicker({ dateFormat: 'mm/dd/yy' });

                $(this).css({
                    "position": "relative",
                    "z-index": 999999
                });
            });
        }
    });
</script>



