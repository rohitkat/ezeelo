@model ModelLayer.Models.ViewModel.QuotationViewModel
@using ModelLayer.Models.ViewModel

@* This partial view defines form fields that will appear when creating and editing entities *@
<style type="text/css">
    #msform1 fieldset:not(:first-of-type) {
        display: none;
    }

    .field-validation-error {
        color: #000000 !important;
    }

    .succes-msg {
        color: #31A012;
        font-size: 20px;
    }

    .beatpicker-clearButton button {
        display: none;
    }

    .input-parent button {
        display: none;
    }

    .textarea-adjust {
        width: 85%;
    }
    /*Beatpicker Css*/
    .beatpicker-clearButton button {
        display: none;
    }

    .input-parent button {
        display: none;
    }

    .header-navbar-button {
        position: absolute !important;
    }

    .beatpicker .main-nav .current-indicator {
        text-align: center !important;
    }

    .beatpicker .main-nav .prev1 {
        left: 0 !important;
        width: 14%;
        padding: 0px 10px;
        color: #fff;
        font-size: 16px;
    }

    .beatpicker .main-nav .next1 {
        right: 0 !important;
        width: 9%;
        color: #fff;
        font-size: 16px;
    }

    .beatpicker .main-nav .prev1:hover {
        left: 0 !important;
        width: 14%;
        padding: 0px 10px;
        color: #fff;
        font-size: 20px;
        cursor: pointer !important;
    }

    .beatpicker .main-nav .next1:hover {
        right: 0 !important;
        width: 9%;
        color: #fff;
        font-size: 20px;
        cursor: pointer !important;
    }

    #divImages .remove {
        background: url(/Content/img/remove-icon.png) no-repeat 0px 0px #fff;
        float: left;
        font-size: 0 !important;
        width: 23px !important;
        padding: 2px 4px;
    }
    /*Beatpicker Css End*/

    #Remark{
        width:99%;
    }
</style>



<link href="~/Content/css/BeatPicker.min.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.11.0.min.js"></script>
<script src="~/Content/js/BeatPicker.js"></script>
<link href="~/Content/assets/css/style.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.9.1.min.js"></script>
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<link href="~/Content/assets/css/form-design.css" rel="stylesheet" />

<div class="row-fluid">
    <div class="box span12">
        <div class="box-header creatProduct clearfix" data-original-title="">
            <h2>
                <i class="icon-exclamation-sign"></i>
                <span class="break"></span>
                QUOTATION REQUEST
            </h2>
        </div>
        <div class="box-content nameDscrp">
            <div class="form-horizontal">

                <div class="NameDescription">
                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                            Warehouse
                        </div>
                        <div class="col-sm-6">
                            @Html.DropDownListFor(model => model.RequestFromWarehouseID, ((IEnumerable<ModelLayer.Models.Warehouse>)ViewBag.PossibleWarehouses).Select(option => new SelectListItem
{
    Text = (option == null ? "None" : option.Name),
    Value = option.ID.ToString(),
    Selected = (Model != null) && (option.ID == Model.RequestFromWarehouseID)
}), "--Select Warehouse--")
                           
                            @Html.ValidationMessageFor(model => model.RequestFromWarehouseID)

                        </div>
                    </div>                    

                    <div class="control-group mrg-left">
                        <div class="col-sm-3">                           
                            Root Category
                        </div>
                        <div class="col-sm-6">      
                            
                            @if (ViewBag.WarehouseID != null && Convert.ToInt64(ViewBag.WarehouseID) > 0)
                            {
                                @Html.DropDownListFor(model => model.ddlParentCatetory, ((IEnumerable<Inventory.Controllers.ForLoopClass>)ViewBag.PossiblePrentCategory).Select(option => new SelectListItem
{
    Text = (option == null ? "None" : option.Name),
    Value = option.ID.ToString(),
    Selected = (Model != null) && (option.ID == Model.ddlParentCatetory)
}), "--Select Root Catetory--")
                               
                            @Html.ValidationMessageFor(model => model.ddlParentCatetory)
                            }
                            else
                            { 
                            <select id="ddlParentCatetory" title="--Select Root Catetory--"></select>    
                            }               
                        </div>
                    </div>

                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                           Second Category
                        </div>
                        <div class="col-sm-6">                            
                           
                            <select id="ddlCategorySecondID">
                              
                            </select>
                          
                        </div>
                    </div>

                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                            Third Category
                        </div>
                        <div class="col-sm-6">
                             
                            <select id="ddlCategoryThirdID" title="--Select Third Catetory--"></select>
                            
                        </div>
                    </div>
                   
                    <div class="clr"></div>
                </div>

                <div class="NameDescription">

                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                            Product <span style="color:red">*</span>
                        </div>
                        <div class="col-sm-6">
                            <input type="hidden" id="SelectedProductId" />
                            <select id="ddlProductID" title="--Select Product--" style="display:none"></select>
                            <input type="text" id="search" title="Enter Product Name.." placeholder="Enter Product Name.."  />  @*style="width:30vw !important; min-width:150px !important; "*@
                        </div>
                    </div>

                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                            Varient/Item <span style="color:red">*</span>
                        </div>
                        <div class="col-sm-6">
                            <select id="ddlProductVarientID" title="--Select Varient--"></select>
                        </div>
                    </div>                    

                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                           Quantity Required <span style="color:red">*</span>
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(model => model.Quantity)
                            @Html.ValidationMessageFor(model => model.Quantity)
                        </div>
                    </div> 
                                                           
                    <div class="control-group mrg-left">
                        <div class="col-sm-3">
                            Nickname
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(model => model.Nickname)
                            @Html.ValidationMessageFor(model => model.Nickname)

                        </div>
                    </div>                                                               
                    <div class="clr"></div>
                </div>

                <div class="NameDescription">     
                    <div class="control-group mrg-left">
                        <div class="col-sm-3">

                        </div>
                        <div class="col-sm-6">
                            <input type="button" class="itemList btn btn-warning btn-small" value="Add To List" />
                        </div>
                    </div>          
                    <div class="clr"></div>
                </div>              

                    <br />
                    <br />
                </div>
        </div>
    </div>
    <div class="box">
        <div class="box-header creatProduct clearfix" data-original-title="">
            <h2>
                <i class="icon-file-alt"></i>
                <span class="break"></span>
                ADDED ITEM(S)
            </h2>
        </div>

        <div class="box-content nameDscrp">
            <div class="NameDescription">                  
                <div class="box-content box-content1" style="padding-left:0px;width:99%;overflow-x:scroll;z-index:1;">               
                    <div id="ItemDetails">
                        @if (Session["lQuotationItemDetailViewModel"] != null)
                        {
                            List<QuotationItemDetailViewModel> objList = (List<QuotationItemDetailViewModel>)Session["lQuotationItemDetailViewModel"];
                            @Html.Partial("ItemDetails", objList);
                        }
                        else
                        {
                            @Html.Partial("ItemDetails", new List<QuotationItemDetailViewModel>());
                        }

                    </div>                 
                </div>
                </div>
            </div>
        </div>   
    
    <div class="col-md-12">
        <div class="NameDescription">
            
            <div class="control-group mrg-left">
                <div class="col-sm-3">
                    Expected Reply Date
                </div>

                <div class="col-sm-6">
                    @Html.TextBoxFor(model => model.ExpectedReplyDate, "{0:MM/dd/yyyy}", new { @readonly = "readonly", placeholder = "Expeted Reply Date", @required = "required" })
                    @Html.ValidationMessageFor(model => model.ExpectedReplyDate)
                </div>
            </div>              

            <div class="control-group mrg-left">
                Supplier <span style="color:red">*</span>

                <div class="">                    
                    <table>
                        @for (var i = 0; i < Model.SupplierList.Distinct().Count(); i++)
                        {
                            <tr>
                                <td>
                                    @Html.CheckBoxFor(it => it.SupplierList[i].IsSelected, new { Style = "vertical-align:3px}", @class = "brandCheckBox" })
                                </td>
                                <td>
                                    @Html.HiddenFor(it => it.SupplierList[i].ID)
                                    @Html.HiddenFor(it => it.SupplierList[i].Name)
                                    @Html.DisplayFor(it => it.SupplierList[i].Name)
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
                  
            <div class="mrg-left">
                <div class="col-sm-3">                  
                </div>
                <div class="col-sm-6">
                    @Html.TextBoxFor(model => model.Remark, new { placeholder = "Remark" })
                    @Html.ValidationMessageFor(model => model.Remark)
                </div>
                </div>

            <div class="control-group mrg-left">
                <div class="col-sm-3">
                    <span>Send Request on Save</span>
                </div>

                <div class="col-sm-6">
                    @Html.CheckBoxFor(model => model.IsSent, new { @checked = true })
                    @Html.ValidationMessageFor(model => model.IsSent)

                </div>
            </div> 
            <div class="clr"></div>
            </div>
    </div> 
    </div>




<script type="text/javascript">

    $("select#WarehouseID").bind('change', function () {
        $('#ddlParentCatetory').empty();
        $('#ddlCategorySecondID').empty();
        $('#ddlCategoryThirdID').empty();
        $('#ddlProductID').empty();
        $('#ddlProductVarientID').empty();
        var WarehouseID = $("select#WarehouseID option:selected").val();

        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("BindParentCategory", "Quotation")',
            data: { 'WarehouseID': WarehouseID },
            //dataType: "json",
            cache: false,
            success: function (data) {
                var ID = 0;
                $("#ddlParentCatetory").prepend("<option value='' selected='selected'>--Select--</option>");
                $.each(data, function (index, item) {
                    ID = item.ID;
                    $('#ddlParentCatetory').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                });

            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    });

    $("select#ddlParentCatetory").bind('change', function () {
        $('#ddlCategorySecondID').empty();
        $('#ddlCategoryThirdID').empty();
        $('#ddlProductID').empty();
        $('#ddlProductVarientID').empty();
        var categoryid = $("select#ddlParentCatetory option:selected").val();
        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetNextLevelCategory", "Quotation")',
            data: { 'categoryID': categoryid },
            //dataType: "json",
            cache: false,
            success: function (data) {
                SecondLevelCategory(data);

            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    });

    function SecondLevelCategory(data) {
        var ID = 0;

        $("#ddlCategorySecondID").prepend("<option value='' selected='selected'>--Select--</option>");
        $.each(data, function (index, item) {
            ID = item.ID;
            $('#ddlCategorySecondID').append('<option value=' + item.ID + '>' + item.Name + '</option>');
        });
    }


    $("select#ddlCategorySecondID").bind('change', function () {
        $('#ddlCategoryThirdID').empty();
        $('#ddlProductID').empty();
        $('#ddlProductVarientID').empty();
        var categoryid = $("select#ddlCategorySecondID option:selected").val();
        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetNextLevelCategory", "Quotation")',
            data: { 'categoryID': categoryid },
            //dataType: "json",
            cache: false,
            success: function (data) {
                GetThirdLevelCategory(data);

            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    });

    function GetThirdLevelCategory(data) {
        var ID = 0;
        $("#ddlCategoryThirdID").prepend("<option value='' selected='selected'>--Select--</option>");

        $.each(data, function (index, item) {
            ID = item.ID;
            $('#ddlCategoryThirdID').append('<option value=' + item.ID + '>' + item.Name + '</option>');
        });
    }



    $("select#ddlCategoryThirdID").bind('change', function () {
        $('#ddlProductID').empty();
        var categoryid = $("select#ddlCategoryThirdID option:selected").val();
        var WarehouseID = $("select#RequestFromWarehouseID option:selected").val();
        $('#ddlProductVarientID').empty();
        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductList", "Quotation")',
            data: { 'categoryID': categoryid, 'WarehouseID': WarehouseID },
            //dataType: "json",
            cache: false,
            success: function (data) {
                GetProductList(data);
            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    });

    function GetProductList(data) {
        var ID = 0;
        $("#ddlProductID").prepend("<option value='' selected='selected'>--Select--</option>");
        $.each(data, function (index, item) {
            ID = item.ID;
            $('#ddlProductID').append('<option value=' + item.ID + '>' + item.Name + '</option>');
        });
    }




    $("select#ddlProductID").bind('change', function () {
        $('#ddlProductVarientID').empty();
        //var ProductID = $("select#ddlProductID option:selected").val();
        var ProductID = $("#SelectedProductId").val(); //Yashaswi 3/5/2018
        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductVarientList", "Quotation")',
            data: { 'ProductID': ProductID },
            //dataType: "json",
            cache: false,
            success: function (data) {
                
                GetProductVarientList(data);
            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    });

    function GetProductVarientList(data) {
        var ID = 0;
        $('#ddlProductVarientID').empty();
        $("#ddlProductVarientID").prepend("<option value='' selected='selected'>--Select--</option>");
        $.each(data, function (index, item) {
            ID = item.ID;
            $('#ddlProductVarientID').append('<option value=' + item.ID + '>' + item.Name + '</option>');
        });
    }

    //Used to get Available item quantity in stock, If required then remove comment
    @*$("select#ddlProductVarientID").bind('change', function () {
        var ProductVarientID = $("select#ddlProductVarientID option:selected").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProductVarientDetail", "PurchaseOrders")',
            data: { 'ProductVarientID': ProductVarientID },
            //dataType: "json",
            cache: false,
            success: function (data) {
                var xmlDoc = $.parseXML(data);
                var xml = $(xmlDoc);
                var $person = xml.find("NewDataSet");
                $person.each(function () {
                    var SizeID = $(this).find('SizeID').text(),
                        StockIn = $(this).find('StockIn').text();

                    if(SizeID==1)
                    {
                        alert('Size not alloted to this Item! Please contact with Admin.');
                        return false;
                    }

                    $("#StockIn").val(StockIn);

                });

            },
            error: function (x, e) {
                alert('Failure');
                alert("The call to the server side failed. ");
            }
        });
    });*@

</script>



<script type="text/javascript">
    @*$(document).ready(function () {

        $('#btnAdd').click(function ()
        {
            document.location = '@Url.Action("Add", "Quotation")';
        });

    });*@


    $(document).ready(function () {

        $(".itemList").click(function (evt) {
            var ProductID = $("#SelectedProductId").val(); //Yashaswi 3/5/2018
            //var ProductID = $("select#ddlProductID option:selected").val();
            var ProductVarientID = $("select#ddlProductVarientID option:selected").val();
            var Quantity = $("#Quantity").val();
            var Nickname = $("#Nickname").val();

            if (ProductID === undefined || ProductID <= 0 || ProductID == "") { //Yashaswi 3/5/2018
                alert('Please Select Product')
                return;
            }

            if (ProductVarientID === undefined || ProductVarientID <= 0) {
                alert('Please Select Varient/Item')
                return;
            }

            if (Quantity <= 0) {
                alert('Please Enter Item Quantity')
                return;
            }


            $("#ItemDetails").load("/Quotation/Add", { 'ProductID': ProductID, 'ProductVarientID': ProductVarientID, 'Quantity': Quantity, 'Nickname': Nickname });

            document.getElementById('Quantity').value = '';
            document.getElementById('Nickname').value = '';
            //document.getElementById('UnitPrice').value = '';
            //Yashaswi 3/5/2018
            $("#SelectedProductId").val("");
            $('#ddlParentCatetory').val("");
            $('#ddlCategorySecondID').val("");
            $('#ddlCategoryThirdID').val("");
            $('#search').val("");
            $('#ddlProductVarientID').val("");

            $("#RequestFromWarehouseID").attr("readonly", true);
            $("#RequestFromWarehouseID").attr("readonly", true);

        });

        //$(".orderDetails").click(function (evt) {
        //    var cell = $(evt.target).closest("tr").children().first();
        //    var custID = cell.text();
        //    $("#viewPlaceHolder").load("/home/getview",
        //       { customerID: custID, viewName: "OrderDetails" });
        //});
    });
</script>


<script language="javascript">
    $(document).ready(function () {
        $('#ExpectedReplyDate').datepicker({ dateFormat: 'mm/dd/yy' });

        //Yashaswi 3/5/2018
        var WarehouseID = '@ViewBag.WarehouseID';
        if (WarehouseID != null && WarehouseID > '0' && WarehouseID != 'null') {
            $("#RequestFromWarehouseID").val(WarehouseID);
        }
        $('#search').autocomplete({
            source: function (request, response) {
                var searchTerm = $("#search").val();
                searchTerm = searchTerm.replace("+", "=");
                var categoryID = $("#ddlCategoryThirdID").val();
                var autocompleteUrl = '/Quotation/AutoComplete?term=' + searchTerm + '&categoryID=' + categoryID;

                $.ajax({
                    url: autocompleteUrl,
                    type: 'GET',
                    cache: false,
                    dataType: 'json',
                    success: function (json) {
                        if (json.length > 0) {
                            response($.map(json, function (data, id) {
                                return {
                                    ID: data.ID,
                                    label: data.Name,
                                    Cat3: data.Cat3,
                                    Cat2: data.Cat2,
                                    Cat1: data.Cat1,
                                };
                            }));
                        } else {
                            $('#ddlCategorySecondID').val("");
                            $('#ddlCategoryThirdID').val("");
                            $("#UnitPrice").val(0);
                            response([{ label: 'No results found.', val: -1 }]);
                        }

                    },
                    error: function (xmlHttpRequest, textStatus, errorThrown) {
                        console.log('some error occured', textStatus, errorThrown);
                    }
                });
            },
            minLength: 1,

            select: function (event, ui) {
                //set product id to product DDL
                $("#SelectedProductId").val(ui.item.ID);
                //Set Parent Category
                $('#ddlParentCatetory').val(ui.item.Cat1);

                //Bind Varient List
                var ProductID = ui.item.ID;
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetProductVarientList", "Quotation")',
                    data: { 'ProductID': ProductID },
                    //dataType: "json",
                    cache: false,
                    success: function (data) {
                        GetProductVarientList(data);
                    },
                    error: function (x, e) {

                    }
                });

                //Bind and set Second Category
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCategoryAfterProductSelect", "Quotation")',
                    data: { 'categoryID': ui.item.Cat2 },
                    cache: false,
                    success: function (data) {
                        SecondLevelCategory(data);
                        $("#ddlCategorySecondID").val(ui.item.Cat2);

                        //Bind and set Main Category
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetCategoryAfterProductSelect", "Quotation")',
                            data: { 'categoryID': ui.item.Cat3 },
                            cache: false,
                            success: function (data) {
                                GetThirdLevelCategory(data);
                                $("#ddlCategoryThirdID").val(ui.item.Cat3);
                            },
                            error: function (x, e) {
                            }
                        });
                    },
                    error: function (x, e) {
                    }
                });


            },

        });
    });
</script>