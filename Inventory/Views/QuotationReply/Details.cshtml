@model ModelLayer.Models.ViewModel.QuotationViewModel
@using ModelLayer.Models.ViewModel

@{
    ViewBag.Title = "Details";
}

<link href="~/Content/assets/css/font-awesome.min.css" rel="stylesheet" />

<div id="content" class="span10">
    <div class="row-fluid">
        <div class="box span12">
            <div class="box-header creatProduct clearfix" data-original-title="">
                <h2>
                    <i class="icon-exclamation-sign"></i>
                    <span class="break"></span>
                    QUOTATION DETAILS
                </h2>
            </div>
            <div class="box-content">
                <div class="form-horizontal">
                    <div class="display-label">Quotation Code: <b>@Model.QuotationCode</b></div>
                    <div class="display-label">Reply Date: <b>@Model.QuotationReplyDate</b></div> 
                    <div class="display-label">Remark: <b>@Model.Remark</b></div> 
                    <div class="display-label">IsReplied: @Html.CheckBoxFor(model => model.IsReplied, new { @disabled = "disabled" })</div>
                    
                </div>
            </div>
        </div>

        <div class="box">
            <div class="box-header creatProduct clearfix" data-original-title="">
                <h2>
                    <i class="icon-exclamation-sign"></i>
                    <span class="break"></span>
                    ADDED ITEM(S)
                </h2>
            </div>
            <div class="box-content nameDscrp">
                <div class="NameDescription">
                    <div class="box-content box-content1" style="padding-left:0px;width:99%;overflow-x:scroll;z-index:1;">                      
                                                            
             <table class="table table-striped table-bordered bootstrap-datatable datatable dataTable" width="100%">
                <tr>
                    <th>Product</th>
                    <th>Item</th>
                    <th>HSN Code</th>
                    <th>Quantity</th>
                    <th>UnitPrice</th>
                    <th>CGSTAmount</th>
                    <th>SGSTAmount</th>
                    <th>IGSTAmount</th>
                    <th>Amount</th>
                    <th>Remark</th>
                </tr>
               @for (int i = 0; i < Model.lQuotationItemDetailViewModels.Count; i++)
{
    <tr>
        <td class="table-shopping-cart-img" style="text-align: left;">
            <img id=" imgproductimage" src="@Model.lQuotationItemDetailViewModels[i].StockThumbPath" onerror="this.src = '/Content/Images/no_image.png'" style="width: 70px; height:70px;" alt=" eZeelo " />
        </td>
        <td>
            @Model.lQuotationItemDetailViewModels[i].ItemName
            @Html.HiddenFor(model => @Model.lQuotationItemDetailViewModels[i].ItemID)
            @Html.HiddenFor(model => @Model.lQuotationItemDetailViewModels[i].QuotationItemDetailID)
            @Html.HiddenFor(model => @Model.lQuotationItemDetailViewModels[i].ProductID)
            @Html.HiddenFor(model => @Model.lQuotationItemDetailViewModels[i].ProductVarientID)
        </td>
        <td>@Model.lQuotationItemDetailViewModels[i].HSNCode</td>
        <td>
            @Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].Quantity, @Model.lQuotationItemDetailViewModels[i].Quantity.ToString(), new { Style = "width:30px" })
            @Html.HiddenFor(model => @Model.lQuotationItemDetailViewModels[i].Quantity)
        </td>
        <td>
            @Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].UnitPrice, @Model.lQuotationItemDetailViewModels[i].UnitPrice.ToString(), new { placeholder = "0", Style = "width:30px" })
        </td>
        <td>@Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].CGSTAmount, @Model.lQuotationItemDetailViewModels[i].CGSTAmount.ToString(), new { Style = "width:40px" })</td>
        <td>@Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].SGSTAmount, @Model.lQuotationItemDetailViewModels[i].SGSTAmount.ToString(), new { Style = "width:40px" })</td>
        <td>@Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].IGSTAmount, @Model.lQuotationItemDetailViewModels[i].IGSTAmount.ToString(), new { Style = "width:40px" })</td>
        <td>@Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].ProductAmount, @Model.lQuotationItemDetailViewModels[i].ProductAmount.ToString(), new { Style = "width:40px" })</td>
        <td>
            @Html.LabelFor(model => @Model.lQuotationItemDetailViewModels[i].ProductRemark, Convert.ToString(@Model.lQuotationItemDetailViewModels[i].ProductRemark), new { Style = "width:180px" })
        </td>
    </tr>
}
            </table>                             
                    </div>
                    <div style="text-align:right;padding-right:15px">
                        Total Amount: @Html.LabelFor(model => model.Amount, @Model.Amount.ToString())
                    </div>
                </div>
            </div>
        </div> 
        <br />
        <p>
            @*@Html.ActionLink("Edit", "Edit", new { id = Model.PurchaseOrderID }, new { @class = "btn btn-success mrg-left mrg-top" })*@
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default mrg-left mrg-top" })
        </p>

    </div>
</div>


