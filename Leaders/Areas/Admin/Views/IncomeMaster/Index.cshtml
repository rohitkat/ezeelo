@model IEnumerable<ModelLayer.Models.LeadersIncomeMaster>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LeadersLayout.cshtml";
}

<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>

<div class="container">


    @*<p>
            @Html.ActionLink("Create New", "Create")
        </p>*@
    <br />
    <legend>Income Master</legend>
    <div class="card">
        <div class="card-header">
            <strong class="card-title">Direct Income</strong>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Level0)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Level1)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Level2)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Level3)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Level4)
                        </th>

                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level0)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level2)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level3)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Level4)
                            </td>

                            <td>
                                @Html.ActionLink("Update", "Edit", new { id = item.ID }) |

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

<br />

<div class="card">

    <div class="card-header">
        <strong class="card-title">Indirect Income</strong>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Level5)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level6)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level7)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level8)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level9)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level10)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level11)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level12)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level13)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Level14)
                    </th>


                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level5)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level6)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level7)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level8)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level9)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level10)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level11)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level12)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level13)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level14)
                        </td>

                        <td>
                            @Html.ActionLink("Update", "Edit", new { id = item.ID }) |

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="col-lg-12">
    <div class="card">
        <div class="card-header">
            <strong class="card-title">Log Table For Direct Income</strong>
        </div>
        <div class="card-body">
            <table class="LogTable" id="LogDirectIncomeTable">
                <thead>
                    <tr>
                        <th scope="col">Level0</th>
                        <th scope="col">Level1</th>
                        <th scope="col">Level2</th>
                        <th scope="col">Level3</th>
                        <th scope="col">Level4</th>

                        <th>Last Modify Date</th>

                    </tr>
                </thead>

            </table>
        </div>
    </div>
</div>

<br />
<div class="card">
    <div class="card-header">
        <strong class="card-title">Log Table For InDirect Income</strong>
    </div>
    <div class="card-body">
        <table class="LogTable" id="LogInDirectIncomeTable">
            <thead>
                <tr>

                    <th scope="col">Level5</th>
                    <th scope="col">Level6</th>
                    <th scope="col">Level7</th>
                    <th scope="col">Level8</th>
                    <th scope="col">Level9</th>
                    <th scope="col">Level10</th>
                    <th scope="col">Level11</th>
                    <th scope="col">Level12</th>
                    <th scope="col">Level13</th>
                    <th scope="col">Level14</th>
                    <th>Last Modify Date</th>

                </tr>
            </thead>

        </table>
    </div>
</div>

    </div>

<script>
    $(document).ready(function () {


        $("#LogDirectIncomeTable").DataTable({

            "ajax": {
                "url": "/IncomeMaster/LogIndex",
                "type": "POST",
                "datatype": "json"
            },

            "columns": [
                { "data": "Level0", "name": "Level0", "autoWidth": true },
                { "data": "Level1", "name": "Level1", "autoWidth": true },
                { "data": "Level2", "name": "Level2", "autoWidth": true },



                { "data": "Level3", "name": "Level3", "autoWidth": true },
                { "data": "Level4", "name": "Level4", "autoWidth": true },

                {
                    "data": "Last_Modify_Date", "name": "Last_Modify_Date", "autoWidth": true,
                    "render": function (value) {
                        if (value === null) return "";

                        var pattern = /Date\(([^)]+)\)/;
                        var results = pattern.exec(value);
                        var dt = new Date(parseFloat(results[1]));

                        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                    }
                },

            ]

        });




        $("#LogInDirectIncomeTable").DataTable({

            "ajax": {
                "url": "/IncomeMaster/LogIndex",
                "type": "POST",
                "datatype": "json"
            },

            "columns": [


                { "data": "Level5", "name": "Level5", "autoWidth": true },
                { "data": "Level6", "name": "Level6", "autoWidth": true },
                { "data": "Level7", "name": "Level7", "autoWidth": true },

                { "data": "Level8", "name": "Level8", "autoWidth": true },
                { "data": "Level9", "name": "Level9", "autoWidth": true },
                { "data": "Level10", "name": "Level10", "autoWidth": true },
                { "data": "Level11", "name": "Level11", "autoWidth": true },

                { "data": "Level12", "name": "Level12", "autoWidth": true },

                { "data": "Level13", "name": "Level13", "autoWidth": true },
                { "data": "Level14", "name": "Level14", "autoWidth": true },
                //{ "data": "Level12", "name": "Level12", "autoWidth": true },

                {
                    "data": "Last_Modify_Date", "name": "Last_Modify_Date", "autoWidth": true,
                    "render": function (value) {
                        if (value === null) return "";

                        var pattern = /Date\(([^)]+)\)/;
                        var results = pattern.exec(value);
                        var dt = new Date(parseFloat(results[1]));

                        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                    }
                },

            ]

        });
    });


</script>