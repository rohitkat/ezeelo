<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="M:API.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:API.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:API.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,API.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:API.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:API.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:API.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:API.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:API.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,API.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,API.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:API.Areas.HelpPage.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},API.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:API.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:API.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleKey.#ctor(API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:API.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:API.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:API.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:API.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:API.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:API.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:API.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:API.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:API.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:API.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:API.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:API.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:API.Controllers.ApplicationVersionController.Get">
            <summary>
            Provide latest version of App, published in App Stored in mobile
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ApplyCoupenController.Get(System.String,System.Int64,System.Double,System.Int64,System.Int64,System.Nullable{System.Int32})">
            <summary>
            Apply coupencode against shop bill Amount
            </summary>
            <param name="couponCode">CoupenCode entered by Customer</param>
            <param name="shopId">Shop ID</param>
            <param name="billAmount">Shopwise Bill Amount Without Delivery Charges</param>
            <param name="customerLoginID">CustomerLoginID</param>
            <returns>Coupen details</returns>
        </member>
        <member name="M:API.Controllers.BankController.GetBanks">
            <summary>
            Gets the list of banks.
            </summary>
        </member>
        <member name="M:API.Controllers.BankController.GetBank(System.Int32)">
            <summary>
            Get selected bank details
            </summary>
            <param name="id">Bank ID</param>
            <returns>Returns selected bank details</returns>
        </member>
        <member name="M:API.Controllers.BankController.PutBank(System.Int32,ModelLayer.Models.Bank)">
            <summary>
            Edit details of selected bank
            </summary>
            <param name="id">Bank id for which details to be updated. </param>
            <param name="bank"></param>
            <returns>Returns operation status Success/Failure Code</returns>
        </member>
        <member name="M:API.Controllers.BankController.PostBank(ModelLayer.Models.Bank)">
            <summary>
            Save new bank details
            </summary>
            <param name="bank"></param>
            <returns>Returns operation status Success/Failure Code</returns>
        </member>
        <member name="M:API.Controllers.BankController.DeleteBank(System.Int32)">
            <summary>
            Delete perticular bank details
            </summary>
            <param name="id">Bank ID</param>
            <returns>operation status Success/Failure Code</returns>
        </member>
        <member name="M:API.Controllers.BestDealsController.Get">
            <summary>
            Get the list of all types of offers like flat discount,free offer,Component offer applicable as on date.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.BestDealsController.Post(ModelLayer.Models.ViewModel.BestDealProductSearchViewModel)">
            <summary>
            Get the list of all products(with their different stocks) valid for selected offer
            </summary>
            <param name="searchDealProducts">Object with members OfferID, OfferType etc. send CategoryID = 0 if you want to search the products in selected offer, for all categories.</param>
            <returns>List of product stocks</returns>
        </member>
        <member name="M:API.Controllers.CalculateTaxController.Get(System.Int64)">
             <summary>
            
             Get detail about product taxes
             </summary>
             <param name="ShopStockIDList">List of ShopStockID</param>
             <returns>List of taxes of each shopstockIDs</returns>
        </member>
        <member name="M:API.Controllers.ChangePasswordController.Post(API.Models.ChangePassword)">
            <summary>
            Change user login password.
            </summary>
            <param name="changePassword">Credentials required for change password</param>
            <returns>Opreation status.</returns>
            --Sonali 07-09-2018 --
        </member>
        <member name="M:API.Controllers.CustomerLoginController.post(ModelLayer.Models.ViewModel.LoginViewModel)">
            <summary>
            Customer Login 
            </summary>
            <param name="login">Customer Login credentials</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.CustomerProfileController.Get(System.Int64)">
            <summary>
            Get Customer Details
            </summary>
            <param name="lCustLoginID">CustomerLoginID</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.CustomerProfileController.Post(ModelLayer.Models.ViewModel.CustomerDetailsViewModel)">
            <summary>
            Customer Registration
            </summary>
            <param name="lcust">CustomerDetails</param>
            <returns>Registration Operation Status</returns>
        </member>
        <member name="M:API.Controllers.CustomerProfileController.Put(System.Int64,ModelLayer.Models.ViewModel.CustomerDetailsViewModel)">
            <summary>
            Edit Customer Details
            </summary>
            <param name="id">Customer Login ID</param>
            <param name="lcust">Customer Details</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.CustomerShippingAddressController.Get(System.Int64)">
            <summary>
            Get the list all shipping addresses maintained by customer
            </summary>
            <param name="custLoginID">Customer Login ID</param>
            <returns>List all shipping addresses</returns>
        </member>
        <member name="M:API.Controllers.CustomerShippingAddressController.Post(ModelLayer.Models.CustomerShippingAddress)">
            <summary>
            Save shipping address
            </summary>
            <param name="Addr">CustomerShippingAddress memberes:UserLoginID,PrimaryMobile,ShippingAddress,PincodeID,AreaID </param>
            <returns>Response contains save operation status</returns>
        </member>
        <member name="M:API.Controllers.CustomerShippingAddressController.Put(System.Int32,ModelLayer.Models.CustomerShippingAddress)">
             <summary>
             Edit customer Shipping address
             </summary>
            <param name="id">Shipping Address ID</param>
             <param name="Addr">customershippingaddress members: ID, PrimaryMobile,ShippingAddress,PincodeID</param>
             <returns>Response contains edit opration status</returns>
        </member>
        <member name="M:API.Controllers.CustomerShippingAddressController.Delete(System.Int32)">
            <summary>
            Delete Customer Shipping address
            </summary>
            <param name="id">Shipping address ID</param>
            <returns>Response delete operation status</returns>
        </member>
        <member name="M:API.Controllers.DeliveryChargeController.Get(System.String,System.Decimal,System.Boolean)">
            <summary>
            Get Delivery Charges for total weight of product against each shop involved in order.
            </summary>
            <param name="pinCode">Shipping Pincode</param>
            <param name="totalWeight">Total Weight</param>
            <param name="isExpress">Delivery Type Express/Normal</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ForgetPasswordController.Post(API.Models.ForgetPassword)">
            <summary>
            Receive Password.
            </summary>
            <param name="changePassword">Credentials required to get forgot password.</param>
            <returns>Password for authenticated user</returns>
        </member>
        <member name="T:API.Controllers.FranchiseMenu_ShopPriorityListController">
            <summary>
            Franchise Menu with Shop Priority
            Pradnyakar Badge 
            28-01-2016
            </summary>
        </member>
        <member name="M:API.Controllers.GcmMessageDetailController.PostGCMMsgDetails(GCMUserDetailViewModel)">
            <summary>
            TO Display GCM Message Detail
            </summary>
            <param name="gCMUserDetailViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetCoupenDetailsForShopListController.Post(ModelLayer.Models.ViewModel.CoupenCodeOnShopListViewModel)">
            <summary>
            Get Coupen details, and ID of shop for which coupen is applied if IsFreeDelivery flag in CouponDetails is true, then 
            Delivery Charges for that shop will be zero(free delivery)
            </summary>
            <param name="ShopListAndCoupen">Shop list included in Cart and Coupen code applied against cart.</param>
            <returns>Coupen </returns>
        </member>
        <member name="M:API.Controllers.GetDeliveryChargesForShopListController.Post(ModelLayer.Models.ViewModel.GetShopWiseDeliveryChargesViewModel)">
            <summary>
            Update Delivery charges against total weight of products in ashop, in the ShopWiseDeliveryCharges list.
            </summary>
            <param name="ShopListAndPincode">List of ShopWiseDeliveryCharges and Delivery Pincode</param>
            <returns>Updated list of ShopWiseDeliveryCharges</returns>
        </member>
        <member name="M:API.Controllers.GetDeliveryScheduleController.Get(System.Int64,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Delivery Schedule 
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetFranchiseAllottedLocationController.Get(System.Int32)">
            <summary>
            For Getting Franchise allotted Area with Pincode
            </summary>
            <param name="cityid"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetFranchiseCityController.Get">
            <summary>
            Provide list of cities and its franchise on load page in mobile
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetOrderDetailsController.Get(System.Int64,System.Int64)">
            <summary>
            Get selected order details for customer
            </summary>
            <param name="lCustLoginID">Customer Login ID</param>
            <param name="lOrderID">Customer Order ID</param>
            <returns>List of Products in Order and Order Details for Given Order ID.</returns>
        </member>
        <member name="M:API.Controllers.GetOrderDetailsController.Get(System.Int64)">
            <summary>
            Get order list for customer
            </summary>
            <param name="lCustLoginID">Customer Login ID</param>
            <returns>List of Products in Order and Order Details for All Orders for Selected Customer Login ID.</returns>
        </member>
        <member name="M:API.Controllers.GetOrderDetailsController.Get(System.Int64,System.String,System.String)">
            <summary>
            Selecting first 10 records
            And Filtering by Date --- By Ashish not in use now
            </summary>
            <param name="lCustLoginID"></param>
            <param name="FrmDate"></param>
            <param name="ToDate"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetOrderDetailsController.Get(System.Int64,System.Int32,System.Nullable{System.Int64})">
            <summary>
            Selecting first 10 records
            And Filtering by  Index --- By Ashish
            </summary>
            <param name="lCustLoginID"></param>
            <param name="FrmDate"></param>
            <param name="ToDate"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetSellersDealsInProductController.GetProductVarientList(System.Int64)">
            <summary>
            Get Sellers List Deals in product irrespective of city and location
            </summary>
            <param name="productID">Product ID</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetSellersDealsInProductController.GetProductVarientList(System.Int64,System.Int64,System.Nullable{System.Int32})">
             <summary>
            Get Sellers List Deals in product in selected city and location
             </summary>
             <param name="productID">Product ID</param>
             <param name="cityID">City ID</param>
             <returns></returns>
        </member>
        <member name="M:API.Controllers.GetSellersDealsInProductController.GetProductVarientList(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int32})">
            <summary>
            Get Sellers List Deals in product in selected city and location
            </summary>
            <param name="productID">Product ID</param>
            <param name="cityID">City ID</param>
            <param name="locationID">Location ID</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.GetPageMessagesController.Get(System.Int32)">
            <summary>
            Get String Messages on Customer Page for Holidays
            </summary>
            <param name="FrnachiseId"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.MerchantLoginController.post(ModelLayer.Models.ViewModel.LoginViewModel)">
            <summary>
            Customer Login 
            </summary>
            <param name="login">Customer Login credentials</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.MoreImagesController.Get(System.Int32,System.String)">
            <summary>
            Get different large and small images of the selected product depending on given color stock variant
            </summary>
            <param name="pID">Product ID</param>
            <param name="clName">Color Name</param>
            <returns>List of small and large images</returns>
        </member>
        <member name="M:API.Controllers.OnlinePaymentTransactionController.Post(ModelLayer.Models.ViewModel.OnlinePaymentTransactionViewModel)">
            <summary>
            Save online payment transaction details 
            </summary>
            <param name="paymentDetails">Gateway payment details; Send Status = 1 when payment successfull else, 0 in case of failure.</param>
            <returns>Status of operation</returns>
        </member>
        <member name="M:API.Controllers.PaymentModesController.Post(ModelLayer.Models.ViewModel.ShopListViewModel)">
            <summary>
            Get list of payment modes available by shop while processing order.
            </summary>
            <param name="shopList">List of ShopID's</param>
            <returns>List of payment modes</returns>
             -----------------changes by Sonali Warhade 07-09-2018 For api return format change--------------------//
        </member>
        <member name="M:API.Controllers.PlaceOrderController.Get(System.Int64)">
            <summary>
            Get Customer Ordrs
            </summary>
            <param name="lCustLoginID">Customer Login ID</param>
            <returns>List of order summaries</returns>
        </member>
        <member name="M:API.Controllers.PlaceOrderController.POST(ModelLayer.Models.ViewModel.APIOrderViewModel)">
            <summary>
            Place Customer order
            </summary>
            <param name="pOrderViewModel"> Order object which contains the list of order products and shop wise delivery charges.</param>
            <returns>Operation Status.</returns>
        </member>
        <member name="M:API.Controllers.PlaceOrderController.Delete(System.Int64,System.Int64,System.Int64)">
            <summary>
            Cancel order by authorized  customer
            </summary>
            <param name="orderID">Order Id</param>
            <param name="shopStockID">Shop Stock ID</param>
            <param name="lCustLoginID">Customer Login ID</param>
            <returns>Operation Status</returns>
        </member>
        <member name="M:API.Controllers.PlaceOrderController.Put(System.Int64,System.Int64)">
            <summary>
            Update order status from Pending to Placed from App(mobile), when Online is successful.
            By Ashish
            </summary>
            <param name="orderID"></param>
            <param name="lCustLoginID"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProductListController.post(ModelLayer.Models.ViewModel.ProductSearchViewModel)">
            <summary>
            Get list of products having minimun sale rate, depending on search criteria
            </summary>
            <param name="productSearch">Product Search object</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProductsBroughtTogetherController.Post(ModelLayer.Models.ViewModel.SearchFrequentlyBuyedProductViewModel)">
            <summary>
            Get the list of product which can be brought with selected product. e.g. Screen guared,flip Cover with mobile.
            </summary>
            <param name="searchFrequent">Object with members like CategoryID, ShopID, PageIndex, PageSize etc.</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProductStockListController.Post(ModelLayer.Models.ViewModel.ProductSearchViewModel)">
            <summary>
            Get product list with all its stocks depending on search keyword and category
            </summary>
            <param name="productSearch">Product search object</param>
            <returns>List of relevant product Stocks</returns>
        </member>
        <member name="M:API.Controllers.ProductTechnicalSpecificationController.Get(System.Int64)">
            <summary>
            Product's technical specification e.g Front Camera : 5 MP.  
            </summary>
            <param name="pID">Product ID</param>
            <returns>Product's Technical Specification List</returns>   
        </member>
        <member name="M:API.Controllers.ProductViewController.ProductDetails(System.Int64,System.Int32,System.Nullable{System.Int64})">
            <summary>
            Get Product Basic details like Brand, Category, Short description etc 
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.SearchEngineController.GetSearchMetaData(System.String,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Search by keyword related to product/category/shop; Provide Search keyword in Pre Parameter and 0: All; 1:Shop; 2:Product in seachBy Parameter  
            </summary>
            <param name="pre">Search Term</param>
            <param name="searchby">Search For Shop/Product</param>
            <param name="cityID">City ID</param>
            <returns>List of objects related to search</returns>
        </member>
        <member name="M:API.Controllers.SendOrderSmsAndEmailController.Get(System.Int64,System.Int64,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Send SMS and Emails  to merchant and customer after placing or cancellation of order by customer.
            </summary>
            <param name="custLoginID">Customer Login ID</param>
            <param name="orderID">Order ID</param>
            <param name="status">Status of order 1: Placed; 2: Confirmed....</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.SendOTPController.GetOTP(System.String,System.String[])">
            <summary>
            Generate OTP 
            </summary>
            <param name="mobileNo">mobile no</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ShopProductViewController.ShopStockVarients(System.Int64,System.Int64)">
            <summary>
            Get Shop Product details
            </summary>
            <param name="ProductID">Product ID</param>
            <param name="shopID">Shop ID</param>
            <returns>product details with varients available for shop.</returns>
        </member>
        <member name="M:API.Controllers.SimillarProductsController.Post(ModelLayer.Models.ViewModel.SearchSimilarProductViewModel)">
            <summary>
            Get list of simillar products related to search product
            </summary>
            <param name="searchSimilarProducts">Simillar product object with page index and page size.</param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.StockOfferController.Get(System.Int64)">
            <summary>
            List of different offers (flat discount, free, component etc offers) and their details.
            </summary>
            <param name="ssID">Shop stock ID</param>
            <returns>List of offers and their details</returns>
        </member>
        <member name="M:API.Controllers.StockVarientController.GetStockVarients(System.Int64,System.Int64)">
            <summary>
            This method gives the details for Specific shopStockId, can be used while displaying Perticular product info at the time of purchasing.
            </summary>
            <param name="shopStockID">ShopStockID</param>
            <returns>object of type ShopProductVarientViewModel</returns>
        </member>
        <member name="M:API.Controllers.SubscriberDiscountOnCategoryController.Post(API.Models.SubscriberDiscountOnShopStock)">
            <summary>
            
            </summary>
            <param name="UserLoginId"></param>
            <param name="CartShopStockID"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.TerritoryController.Get(System.Int32,System.Int64)">
             <summary>
             Get list of territory depending on level.
            For State Level =1 and parentID= ContryID
            For District Level =2 and parentID= StateID
            For City Level =3 and parentID= DistrictID
            For Pincode Level =4 and parentID=CityID
            For Area Level =5 and parentID=PincodeID
             </summary>
             <param name="level">Territory Level</param>
             <param name="parentID">Parent Territory ID</param>
             <returns></returns>
        </member>
        <member name="M:API.Controllers.TerritoryHierarchyByPincodeController.Get(System.Nullable{System.Int32})">
            <summary>
            Get hierarchy details above pincode like city, district, state for provided pincode
            </summary>
            <param name="pincode">pincode e.g 440001</param>
            <returns>Hierachy and Area List for provided pincode</returns>
        </member>
        <member name="M:API.Controllers.TrackShipmentController.Get(System.Int64,System.Int64)">
            <summary>
            Track customer’s order shipment. It displays the status(1: Placed; 2:Confirm; 3: Packed;
            4:Dispatched from Shop; 7:Delivered; 8: Returned; 9: Cancelled) of Shipment at perticular time.
            </summary>
            <param name="orderID">Order ID</param>
            <param name="shopStockID">Shop Stock ID</param>
            <returns>Shipment History</returns>
        </member>
        <member name="M:API.Controllers.VerifyPincodeController.Get(System.Int64,System.Int32)">
            <summary>
            Verify whether the product is deliverable on given pincode or not.
            </summary>
            <param name="pincode">Shipping Pincode</param>
            <returns>Flag True/False</returns>
        </member>
        <member name="M:API.Controllers.WishlistController.Get(System.Int64,System.Int64)">
            <summary>
            Get list of products added in customer wishlist
            </summary>
            <param name="lCustLoginID">customer login ID</param>
            <returns>List of Products, added in authenticated customer's wishlist.</returns>
        </member>
        <member name="M:API.Controllers.WishlistController.Post(ModelLayer.Models.ViewModel.CustomerFavorites)">
            <summary>
            Add product in customer wishlist
            </summary>
            <param name="CustFavorites">CustomerFavorites object wich contains customer login ID and product stock id</param>
            <returns>Operation Status</returns>
        </member>
        <member name="M:API.Controllers.WishlistController.Delete(System.Int64,System.Int64)">
            <summary>
            Remove product from customer's wishlist
            </summary>
            <param name="lCustLoginID">Customer login ID</param>
            <param name="lShopStockID">Product Stock ID</param>
            <returns>Operation Status</returns>
        </member>
        <member name="T:API.Models.MyDateTimeConvertor">
            <summary>
            Modify  Json request and response 
            </summary>
        </member>
    </members>
</doc>
