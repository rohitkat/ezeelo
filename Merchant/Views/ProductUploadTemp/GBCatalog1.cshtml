@model ModelLayer.Models.ViewModel.ProductUploadTempViewModel

@{
    ViewBag.Title = "Edit";
}


<script>
    //$(document).ready(function () {
    //    $.cookie('Varient', '', { expires: -1 });
    //});
</script>
<link href="~/Content/css/bootstrap.min2.css" rel="stylesheet" />
<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<link href="~/Content/css/fileinput.min.css" rel="stylesheet" />
<script src="~/Content/js/fileinput_locale_es.js"></script>
<script src="~/Content/js/fileinput_locale_fr.js"></script>
<style type="text/css">
    .editPopUp {
        position: fixed;
        background-color: #fff;
        width: 700px;
        height: auto;
        top: 12%;
        left: 28%;
        z-index: 1000;
        overflow: hidden;
    }




    .selectImg {
        padding: 0 17px;
        font-size: 16px;
        line-height: 22px;
        border-bottom: 1px solid #ccc;
        color: #AB8F65;
        font-weight: normal;
    }

        .selectImg span {
            line-height: 1;
            float: right;
            display: block;
            border: 1px solid #AB8F65;
            border-radius: 15px;
            width: 18px;
            height: 18px;
            text-align: center;
            cursor: pointer;
        }

    #editPopUp .divImages {
        padding: 0 13px !important;
    }

    .file-drop-zone {
        margin: 0px 15px;
        border: none;
    }

    .popupInner {
        height: 267px;
        overflow-y: auto;
        overflow-x: hidden;
        padding-bottom: 15px;
    }

    .input-group-btn {
        border-top: 1px solid #ccc;
        padding: 4px 10px;
    }

    #cover {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 999;
    }
</style>
<style>
    .img_div img[alt] {
        background: none;
    }

    .kv-file-remove {
        display: none !important;
    }



    .glyphicon-hand-down {
        display: none;
    }

    .fileinput-remove-button {
        display: none !important;
    }

    .fileinput-upload-button {
        display: none !important;
    }

    .kv-file-upload {
        display: none !important;
    }

    .btn-file .action {
        display: none !important;
    }

    div.uploader {
        position: absolute !important;
        left: 0;
        opacity: 0;
        width: 88px !important;
    }

    .kv-main {
        border-radius: 5px;
        border: 0 none;
        margin-bottom: 10px;
        margin-top: 10px;
        padding: 4px;
    }

    .file-caption-name {
        display: none !important;
    }

    .file-actions {
        margin-top: 6px;
    }

    .fileinput-cancel-button {
        display: none !important;
    }

    .file-preview-frame img {
        width: 152px !important;
        height: 115px !important;
    }

    #divImages .remove {
        background: url(/Content/img/remove-icon.png) no-repeat 0px 0px #fff;
        float: left;
        font-size: 0 !important;
        width: 23px !important;
        padding: 2px 4px;
    }


    #Catspecification {
    }

        #Catspecification li {
            display: inline-block;
            padding-right: 10px;
        }

            #Catspecification li label {
            }

            #Catspecification li input.inp-box {
            }



    .file-preview {
        border: none;
        padding: 5px 0px;
    }

    .fileinput-cancel-button {
        display: none;
    }

    .file-drop-zone-title {
        display: none;
    }

    .remove img {
        max-width: none !important;
    }

    .file-preview-frame {
        display: block;
        margin: 5px 5px;
        height: 146px;
        border: 1px solid #ddd;
        box-shadow: 1px 1px 5px 0 #a2958a;
        padding: 3px;
        float: left;
    }

    .ThumbDiv {
        width: 200px;
        float: left;
        padding: 6px 6px;
        border: 1px solid #ccc;
        margin-left: 8px;
        height: 225px;
    }

        .ThumbDiv img {
            width: 200px;
            height: 100%;
        }

    .DivSetImg {
        width: 443px;
        float: left;
    }

    .file-thumbnail-footer .radioSet {
        width: 19px !important;
        float: left;
        margin-left: -25px;
        margin-top: 5px;
    }

    .img_div img {
        width: 55px;
        height: 32px !important;
        font-size: 12px; margin-top:5px;
    }

    #dataTable tr td:nth-child(-1n+7) select {
        pointer-events: none;
    }

    #dataTable tr th:nth-child(10) {
        display: none;
    }

    #dataTable tr td:nth-child(11) {
        display: none;
    }

    #dataTable tr th:nth-child(13) {
        display: none;
    }

    #dataTable tr td:nth-child(14) {
        display: none;
    }

    #dataTable tr td:nth-child(15) {
        text-align: center;
    }



    #dataTable tr td:nth-child(2) {
        display: none;
    }

    #dataTable tr td:first-child {
        text-align: center;
    }

        #dataTable tr td:first-child span {
            margin-left: 0;
        }


    #dataTable tr td input {
        padding: 4px 9px;
    }

    .pro-scrol tr th {
        line-height: 15px;
    }

    .file-input {
        height: 201px;
        max-height: 450px;
        overflow-y: scroll;
        overflow-x: hidden;
    }

        .file-input .input-group {
            background: #fff;
            width: 100%;
            clear: both;
            position: absolute;
            bottom: 0px;
            left: 0px;
        }
    .pro-scrol tr th {
        font-size: 11px !important;
        padding-top: 5px;
        padding-bottom: 5px;
    }

    .poplink {
        margin-right: 5px;
        margin-left: 5px;
    }

    .black_overlay {
        width: 1700px;
    }

    .white_content {
        left: 85%;
    }
</style>

<script>
    $('#file-fr').fileinput({
        language: 'fr',
        uploadUrl: '#',
        allowedFileExtensions: ['jpg', 'png', 'gif', 'JPG', 'PNG', 'GIF', 'jpeg', 'JPEG'],
    });
    $('#file-es').fileinput({
        language: 'es',
        uploadUrl: '#',
        allowedFileExtensions: ['jpg', 'png', 'gif', 'JPG', 'PNG', 'GIF', 'jpeg', 'JPEG'],
    });
    $("#file-0").fileinput({
        'allowedFileExtensions': ['jpg', 'png', 'gif', 'JPG', 'PNG', 'GIF', 'jpeg', 'JPEG'],
        language: 'es',
        uploadUrl: '#',
    });
    $("#file-1").fileinput({
        uploadUrl: '#', // you must set a valid URL here else you will get an error
        allowedFileExtensions: ['jpg', 'png', 'gif', 'JPG', 'PNG', 'GIF', 'jpeg', 'JPEG'],
        overwriteInitial: false,
        maxFileSize: 1000,
        maxFilesNum: 10,
        //allowedFileTypes: ['image', 'video', 'flash'],
        slugCallback: function (filename) {
            return filename.replace('(', '_').replace(']', '_');
        }
    });
    /*
    $(".file").on('fileselect', function(event, n, l) {
        alert('File Selected. Name: ' + l + ', Num: ' + n);
    });
    */
    $("#file-3").fileinput({
        showUpload: false,
        showCaption: false,
        browseClass: "btn btn-primary btn-lg",
        fileType: "any",
        previewFileIcon: "<i class='glyphicon glyphicon-king'></i>"
    });
    $("#file-4").fileinput({
        uploadExtraData: { kvId: '10' }
    });
    $(".btn-warning").on('click', function () {
        if ($('#file-4').attr('disabled')) {
            $('#file-4').fileinput('enable');
        } else {
            $('#file-4').fileinput('disable');
        }
    });
    $(".btn-info").on('click', function () {
        $('#file-4').fileinput('refresh', { previewClass: 'bg-info' });
    });
    /*
    $('#file-4').on('fileselectnone', function() {
        alert('Huh! You selected no files.');
    });
    $('#file-4').on('filebrowse', function() {
        alert('File browse clicked for #file-4');
    });
    */
    $(document).ready(function () {
        $("#test-upload").fileinput({
            'showPreview': false,
            'allowedFileExtensions': ['jpg', 'png', 'gif'],
            'elErrorContainer': '#errorBlock'
        });
        /*
        $("#test-upload").on('fileloaded', function(event, file, previewId, index) {
            alert('i = ' + index + ', id = ' + previewId + ', file = ' + file.name);
        });
        */
    });
</script>
@*@using (Html.BeginForm())*@

<div class="span10 " id="content" style="">
    @using (Html.BeginForm("GBCatalog1", "ProductUploadTemp", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

    @Html.AntiForgeryToken();
    @Html.Hidden("ThumbIndex")
    @*<ul class="breadcrumb">
        <li>
            <i class="icon-home"></i>
            <a href="index.html">Edit</a>
            <i class="icon-angle-right"></i>
        </li>
        <li><a href="#">Tables</a></li>
    </ul>*@

    <div class="row-fluid ">
        <div class="box span12">
            <div class="box-header creatProduct clearfix" data-original-title="">
                <h2><i class="icon-exclamation-sign"></i><span class="break"></span>Product Edit</h2>


            </div>
            <div class="box-content ">
                <form class="form-horizontal">
                    <fieldset>
                        @Html.ValidationSummary(true)


                        @*<table class="table table-striped table-bordered bootstrap-datatable datatable dataTable">
                            <tr>
                                <td>File</td>
                                <td><input type="file" name="Files" id="Files" multiple="multiple" /></td>
                                @*
                                <td><input type="file" name="logo" id="logo" /></td>
                            </tr>*@
                            @*
                            <tr>
                                <td>&nbsp;</td>
                                <td><input type="submit" name="submit" value="Upload" id="Upload" /> </td>
                            </tr>
                        </table>*@

                        <div class="span12">
                            <div class="span8">
                                <div class="nameDscrp">

                                    <div class="control-group">
                                        <div class="eror-msg pull-right">@TempData["MyErrorMsg"]</div>
                                        @Html.LabelFor(model => model.Name, "Product Name")
                                        <div class="">
                                            @Html.TextBoxFor(model => model.Name, new { @class = "span12", required = "required", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.Name)
                                        </div>
                                    </div>
                                    <div class="control-group mrg-top">
                                        @Html.LabelFor(model => model.Description)

                                        @Html.TextAreaFor(model => model.Description, new { @class = "discrip_box1 span12 cleditor", @requird = "requird", id = "textarea2", maxlength = 150, @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.Description)
                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.SearchKeyword, "Search Keyword")
                                        <div class="">
                                            @Html.TextBoxFor(model => model.SearchKeyword, new { @class = "span12 back_searchIco", required = "required", style = "padding-right: 41px;", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.SearchKeyword)

                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="control-group nameDscrp margin-top clearfix" style="height:auto;">
                                    <div class="control-group span2 DivSmall1">
                                        @Html.LabelFor(model => model.WeightInGram, "Weight In Gram")
                                        <div>
                                            @Html.TextBoxFor(model => model.WeightInGram, new { @class = "txt-adjWidth1", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.WeightInGram)
                                        </div>
                                    </div>
                                    <div class="control-group span2 DivSmall1">
                                        @Html.LabelFor(model => model.LengthInCm, "Length In Cm")
                                        <div>
                                            @Html.TextBoxFor(model => model.LengthInCm, new { @class = "txt-adjWidth1", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.LengthInCm)
                                        </div>
                                    </div>
                                    <div class="control-group span2 DivSmall1">
                                        @Html.LabelFor(model => model.BreadthInCm, "Breadth In Cm")
                                        <div>
                                            @Html.TextBoxFor(model => model.BreadthInCm, new { @class = "txt-adjWidth1", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.BreadthInCm)
                                        </div>
                                    </div>
                                    <div class="control-group span2 DivSmall1">
                                        @Html.LabelFor(model => model.HeightInCm, "Height In Cm")
                                        <div>
                                            @Html.TextBoxFor(model => model.HeightInCm, new { @class = "txt-adjWidth1", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.HeightInCm)

                                        </div>
                                    </div>
                                    <label class="checkbox inline">
                                        <div id="uniform-inlineCheckbox1" class="checker">
                                            <span>
                                                @*@Html.EditorFor(model => model.IsActive)
                                                @Html.ValidationMessageFor(model => model.IsActive)*@
                                            </span>
                                        </div>@*@Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })*@
                                    </label>


                                </div>
                                <div class=" ui-sortable bg-white">
                                    <div class="box1 span12 bg-gray addMore">
                                        <div class="box-header bg-green">
                                            <h2><i class="icon-edit"></i><span class="break"></span>Add More Description</h2>
                                         <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                                             </div>
                                        </div>
                                        <div class="box-content hide-row clearfix" @*style="pointer-events:none;" *@>
                                            <div class="control-group hidden-phone">
                                                <div class="span12">
                                                    <div class="controls">
                                                       @Html.TextArea("textarea", null, new { id = "textarea", @class = "cleditor", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                            </div>


                                        </div>
                                    </div><!--/span-->
                                    <!--/span-->
                                </div>


                        

                            <div class="span4 scndBox">
                                <div class="right-brnd">

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.CategoryID, "Category", new { requird = "requird" })
                                        <div class="">
                                            @*@Html.DropDownList("CategoryID", String.Empty)*@
                                            @Html.DropDownList("CategoryID", null, "Select Category", new { @class = "form-control", required = "required", @style = "pointer-events:none;" })
                                            @Html.ValidationMessageFor(model => model.CategoryID)
                                        </div>
                                    </div>
                                    <div class="control-group">
                                        @*  @Html.LabelFor(model => model.CategoryID, "Category", new { requird = "requird" })*@
                                        Sub Category
                                        <div class="">
                                            @Html.DropDownList("ddlCategorySecondID", null, String.Empty, new { @style = "pointer-events:none;" })

                                        </div>
                                    </div>
                                    <div class="control-group">
                                        @* @Html.LabelFor(model => model.CategoryID, "Category", new { requird = "requird" })*@
                                        Root category
                                        <div class="">
                                            @Html.DropDownList("ddlCategoryFirstID", null, String.Empty, new { @style = "pointer-events:none;" })

                                        </div>
                                    </div>



                                    <div class="control-group">
                                        @Html.LabelFor(model => model.BrandID, "Brand", new { requird = "requird" })
                                        <div class="">

                                            @Html.DropDownList("BrandID", null, "Select Brand", new { @class = "form-control", required = "required", @style = "pointer-events:none;" })
                                            @Html.ValidationMessageFor(model => model.BrandID)
                                        </div>
                                    </div>


                                </div>
                                <div class="right-display">
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.DisplayProductFromDate, "Display Product From Date", new { @class = " " })
                                        <div class="">
                                            @Html.TextBox("DisplayProductFromDate1", null, new { id = "DisplayProductFromDate1", @class = "span10 datepicker glyphicons-iconcalendar" })
                                            @Html.ValidationMessageFor(model => model.DisplayProductFromDate)
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </fieldset>
                </form>

                @* ----- *@
                <div>

                    <div class="row-fluid  down-box">
                        <div class=" span12">

                            <div class="ui-sortable bg-white">
                                <div class="box1 span12 bg-gray addMore" style="margin-top:-14px;">
                                    @*<div id="divSpecification"></div>*@
                                    <div class="box-header bg-green">
                                        <h2><i class="icon-wrench"></i><span class="break"></span>Technical Specification</h2>
                                        <div class="box-icon">
                                            <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                                        </div>
                                    </div>
                                    <div class="box-content hide-row clearfix">
                                        @Html.Hidden("ProductID", (int)ViewBag.ProductID)
                                        <ul id="Catspecification"></ul>
                                    </div>

                                </div>
                            </div>
                            <div class=" control-group clearfix">
                                <div id=" users-contain" class="ui-widget span12">
                                    <div><a href="#" id="addNew">Add New</a></div>
                                    <div style="min-height: 253px; padding-left: 0px; width: 100%; background: white; overflow-x: scroll;">
                                        <table id="dataTable" class="pro-scrol" border="0" cellpadding="5" cellspacing="0" style="width: 1270px;">
                                            <thead>
                                                <tr class="ui-widget-header ">
                                                    <th style="width:80px;">Select</th>
                                                    <th>Images</th>
                                                    @*
                    <th width="9%"></th>*@
                                                    <th>Color</th>
                                                    <th>Size</th>
                                                    <th>Dimension</th>
                                                    <th>Material</th>
                                                    <th>Pack Size</th>
                                                    <th>Qty</th>
                                                    <th>Reorder Level</th>                                                
                                                    <th>Unit</th>
                                                    <th>MRP</th>
                                                    <th>Sale Rate</th>
                                                    <th>Is Inclusive of tax</th>
                                                    <th></th>
                                                </tr>


                                                @if (Model.NewProductVarientS != null && Model.NewProductVarientS.Count > 0)
                                                {
                                                    int j = 0;
                                                    foreach (var i in Model.NewProductVarientS)
                                                    {

                                                        <tr class="trMain-createId" id="MainTr_@j">
                                                            <td>@Html.CheckBoxFor(a => a.NewProductVarientS[j].IsSelect, new { id = "IsSelect" + j })</td>
                                                            <td>@Html.HiddenFor(a => a.NewProductVarientS[j].ProductVarientID, new { @class = "classVariant" })</td>

                                                            @{
                                                        List<SelectList> ColorID = (List<SelectList>)ViewBag.ColorID;
                                                        List<SelectList> SizeID = (List<SelectList>)ViewBag.SizeID;
                                                        List<SelectList> DimensionID = (List<SelectList>)ViewBag.DimensionID;
                                                        List<SelectList> MaterialID = (List<SelectList>)ViewBag.MaterialID;
                                                        List<SelectList> PackUnitID = (List<SelectList>)ViewBag.PackUnitID;

                                                            }


                                                            <td id="divPreview_@j" class="img_div" style="vertical-align: top; padding-right: 2px;cursor:pointer;">

                                                                <img src='@Model.NewProductVarientS[j].ThumbPath' id='@Model.NewProductVarientS[j].ColorID$@Model.NewProductVarientS[j].ProductVarientID' class='addProduct' onclick="GetImages(this.id,this);" alt='BROWSE' width='50' style="height:27px;" onerror="this.src ='../../Content/assets/img/No_thumbnail.png'" />
                                                                @Html.Hidden("ThumbScreen", @Model.NewProductVarientS[j].ThumbPath)
                                                            </td>

                                                            <td style=" width: 100px; padding-top:6px;">@Html.DropDownListFor(model => model.NewProductVarientS[j].ColorID, ColorID[j], new { id = "Color_" + j, onchange = "return EnableDisableImageCtrl(this,this.id);", style = "width:120px!important;" }) </td>
                                                            <td style=" width: 100px; padding-top: 6px;">@Html.DropDownListFor(model => model.NewProductVarientS[j].SizeID, SizeID[j], new { style = "width:120px!important;" })</td>
                                                            <td style="width: 100px; padding-top: 6px; ">@Html.DropDownListFor(model => model.NewProductVarientS[j].DimensionID, DimensionID[j], new { style = "width:120px!important;" })</td>
                                                            <td style="width: 100px; padding-top: 6px; ">@Html.DropDownListFor(model => model.NewProductVarientS[j].MaterialID, MaterialID[j], new { style = "width:120px!important;" })</td>
                                                            <td style="padding-top: 6px;">@Html.TextBoxFor(a => a.NewProductVarientS[j].PackSize, new { style = "width:100px!important;" })</td>
                                                            <td style="padding-top: 6px;">@Html.TextBoxFor(a => a.NewProductVarientS[j].Qty, new { style = "width:100px!important;" })</td>
                                                            <td style="padding-top: 6px;">@Html.TextBoxFor(a => a.NewProductVarientS[j].ReorderLevel, new { style = "width:100px!important;" })</td>                                                            
                                                            <td style=" width: 100px; padding-top: 6px;">@Html.DropDownListFor(model => model.NewProductVarientS[j].PackUnitID, PackUnitID[j], new { style = "width:100px!important;" })</td>
                                                            <td style="padding-top: 6px;">@Html.TextBoxFor(a => a.NewProductVarientS[j].MRP, new { style = "width:100px!important;" })</td>
                                                            <td style="padding-top: 6px;">@Html.TextBoxFor(a => a.NewProductVarientS[j].RetailerRate, new { style = "width:100px!important;" })</td>
                                                            <td style="text-align:center;">@Html.CheckBoxFor(a => a.NewProductVarientS[j].IsInclusiveOfTax)</td>
                                                            <td style="padding-top: 6px;">@Html.HiddenFor(a => a.NewProductVarientS[j].ShopStockID)</td>
                                                            <td>
                                                                @if (j > 0)
                                                                {
                                                                    @*<a href="#" class="remove">Remove</a>*@
                                                                }
                                                            </td>
                                                            <td>
                                                                <div id="editPopUp" title="Images" style="display:none">
                                                                    <h2 class="selectImg">
                                                                        Variant Image
                                                                        <span class="okClose">X</span>
                                                                    </h2>
                                                                    <div class="popupInner">
                                                                        <div class="ThumbDiv">
                                                                            @*<img id="@Model.ProductVarientID" src='' />*@
                                                                        </div>
                                                                        <div id="divImages" class="divImages DivSetImg">

                                                                        </div>
                                                                        <div class="openPopupUpload">

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div id="cover"></div>
                                                            </td>


                                                        </tr>
                                                                j++;
                                                    }
                                                }

                                            </thead>

                                        </table>
                                    </div>
                                </div>
                            </div>

                           

                        </div>
                    </div>
                </div>
                @* ----- *@

            </div>
            <div class="form-actions" style="margin-top:0px;">
                <div class="pull-right">
                    <input name="submit" type="submit" id="Save" value="Save$" class=" btn-Ifrm-submit1 dollr" onclick="return uploadFile();" />
                    @*<input type="submit" value="Save" id="Save" class="btn btn-success" />*@
                    @Html.ActionLink("Back to List", "Index", string.Empty, new { @class = "btn btn-brown" })
                </div>
            </div>
        </div>
    </div>


    }

</div>




@* ----------- *@
<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script src="~/Content/js/fileinput.min.js"></script>
@* script for new specification  *@


<script type="text/javascript">

    function GetImages(id, image) {

        // var soua = $(image).attr('src');
        //alert(soua);
        //var sou = $(image).closest('tr').find('td:last-child .ThumbDiv img').attr('src', soua);


        var count = 1;
        var counter = count - 1;
        //$('#dialog').empty();
        var ID = id.split('$');
        var productID = $("#ProductID").val();
        // alert(productID);
        //var ColorID = ID[0];
        var newColor = $(image).closest('tr').find("td:nth-child(4)");
        var ColorID = $(newColor).find('select').val();
        var VarientID = ID[1];
        if (ColorID > 0) {
            $.ajax({
                url: "/ProductUploadAproved/GetImagesWithThumb",
                type: "POST",
                dataType: "json",
                data: { 'productID': productID, 'ColorID': ColorID },
                success: function (data) {
                    count = data.length;
                    $.each(data, function (index, item) {
                        if (index < count - 1) {
                            var srcID = 0;
                            $("#divImages").append(
                                "<img src=" + item + " style='width:140px; height:105px; float: left;  margin-bottom:4px;' >"

                              //  "<input name='submit' type='submit' id='" + productID + "$" + ColorID + "$" + item + "' class='btn btn-dark-gray remove' value='" + "Remove$" + productID + "$" + ColorID + "$" + item + "' onclick='RemoveImage(this)' style='margin-left:-24px' />"

                                 //"<input type='Radio' class='radioSet' value='" + item + "' name='" + VarientID + "' id='" + counter + "' onclick='CreateThumbnail(this,this.name);'>"

                      );
                        }
                        else {
                            $('.ThumbDiv').empty();
                            $('.ThumbDiv').append(
                           "<img alt='' id=" + id + " src=" + item + " onerror=this.src='../../Content/assets/img/No_thumbnail.png' >"


                      );

                        }


                        //----------------
                        //$trNew.find('td:last').html("<div class='openPopupUpload'>" +
                        //                         "<div class='kv-main'>" +
                        //                        "<div class='form-group input-group mainInput'>" +
                        //                        "<input id='img_' name='files_' class='file' type='file' multiple='multiple' data-preview-file-type='any' data-upload-url='#' onchange='readURL1(this,this.id);' />" +
                        //                         "<a href='#' id='save' class='save'>OK</a>" +
                        //                         "</div>" +
                        //                         "</div>" +
                        //                         "</div>");
                        //$trNew.find("td:first").html("<img src='' id='img_' class='addProduct' alt='BROWSE' width='60' height='45' />");
                        //$trNew.find("td:nth-child(13)").html('<a href="#" class="remove"><img src="/Content/img/remove-icon.png" /></a>');


                        //var $newIn = $trNew.find('input.file');
                        //var $newIMG = $trNew.find('img.addProduct');
                        //var $newLink = $trNew.find('a.addProduct');

                        //$('.trMain-createId').each(function (i) {
                        //    //alert(i);
                        //    $newIMG.attr('id', 'img_' + (i + 1));
                        //    //$trNew.attr('id', 'MainTr_' + (i + 1));
                        //    $newIn.attr('id', 'img_' + (i + 1));
                        //    $newIn.attr('name', 'files_' + (i + 1));
                        //    $newLink.attr('id', 'img_' + (i + 1));


                        //});
                        //----------------

                    });
                    ////// alert(id);
                    //// //$("#" + id).closest('tr').find('#openPopupUpload_0').show();
                    //// //$("#" + id).closest('tr').find('#openPopupUpload_0').css('display', 'block');
                    //$('.ThumbDiv').append(
                    //        "<img alt='' id=" + id + " src=" + soua + " >"
                    //   );
                    var lcount = 0;
                    var flag = false;
                    var FileCount = 0;
                    lcount = $('#dataTable tr').length;
                    //alert(lcount);
                    //$('.trMain-createId').each(function (i) {


                    //    var trVariantID = $(this).find('.classVariant').val();

                    //    if (VarientID == trVariantID) {

                    //        if (!($("#" + VarientID).attr("id") == VarientID)) {
                    //            $(".kv-main").css("display", "none");

                    //            $(".openPopupUpload").append(

                    //                  "<div class='kv-main' id=" + FileCount + ">" +
                    //                       "<div class='form-group input-group mainInput' id='dvimg_" + FileCount + "'>" +

                    //                      "<input id='" + VarientID + "' name='files_" + FileCount + "' class='file' type='file' value='' multiple='multiple' data-preview-file-type='any' data-upload-url='#' onchange='readURL1(this,this.id);' />" +

                    //                       "</div>" +
                    //                       "</div>"

                    //           );
                    //            $("#" + FileCount).css("display", "block");



                    //            !function (e) {
                    //                "use strict"; e.fn.fileinputLocales = {}, String.prototype.repl = function (e, i) { return this.split(e).join(i) }; var i = function (e) { var i, t = document.createElement("div"); return t.innerHTML = "<!--[if IE " + e + "]><i></i><![endif]-->", i = 1 === t.getElementsByTagName("i").length, document.body.appendChild(t), t.parentNode.removeChild(t), i }, t = { data: {}, init: function (e) { var i = e.initialPreview, a = e.id; i.length > 0 && !z(i) && (i = i.split(e.initialPreviewDelimiter)), t.data[a] = { content: i, config: e.initialPreviewConfig, tags: e.initialPreviewThumbTags, delimiter: e.initialPreviewDelimiter, template: e.previewGenericTemplate, msg: function (i) { return e.getMsgSelected(i) }, initId: e.previewInitId, footer: e.getLayoutTemplate("footer"), isDelete: e.initialPreviewShowDelete, caption: e.initialCaption, actions: function (i, t, a, n, r) { return e.renderFileActions(i, t, a, n, r) } } }, fetch: function (e) { return t.data[e].content.filter(function (e) { return null !== e }) }, count: function (e, i) { return t.data[e] && t.data[e].content ? i ? t.data[e].content.length : t.fetch(e).length : 0 }, get: function (i, a, n) { var r, l, o = "init_" + a, s = t.data[i], d = s.config[a], c = s.initId + "-" + o, p = " file-preview-initial"; return n = void 0 === n ? !0 : n, null === s.content[a] ? "" : (R(d) || R(d.frameClass) || (p += " " + d.frameClass), r = s.template.repl("{previewId}", c).repl("{frameClass}", p).repl("{fileindex}", o).repl("{content}", s.content[a]).repl("{footer}", t.footer(i, a, n)), s.tags.length && s.tags[a] && (r = H(r, s.tags[a])), R(d) || R(d.frameAttr) || (l = e(document.createElement("div")).html(r), l.find(".file-preview-initial").attr(d.frameAttr), r = l.html(), l.remove()), r) }, add: function (i, a, n, r, l) { var o, s = e.extend(!0, {}, t.data[i]); return z(a) || (a = a.split(s.delimiter)), l ? (o = s.content.push(a) - 1, s.config[o] = n, s.tags[o] = r) : (o = a.length, s.content = a, s.config = n, s.tags = r), t.data[i] = s, o }, set: function (i, a, n, r, l) { var o, s = e.extend(!0, {}, t.data[i]); if (z(a) || (a = a.split(s.delimiter)), l) { for (o = 0; o < a.length; o++) s.content.push(a[o]); for (o = 0; o < n.length; o++) s.config.push(n[o]); for (o = 0; o < r.length; o++) s.tags.push(r[o]) } else s.content = a, s.config = n, s.tags = r; t.data[i] = s }, unset: function (e, i) { var a = t.count(e); if (a) { if (1 === a) return t.data[e].content = [], void (t.data[e].config = []); t.data[e].content[i] = null, t.data[e].config[i] = null } }, out: function (e) { var i, a = "", n = t.data[e], r = t.count(e, !0); if (0 === r) return { content: "", caption: "" }; for (var l = 0; r > l; l++) a += t.get(e, l); return i = n.msg(t.count(e)), { content: a, caption: i } }, footer: function (e, i, a) { var n = t.data[e]; if (a = void 0 === a ? !0 : a, 0 === n.config.length || R(n.config[i])) return ""; var r = n.config[i], l = M("caption", r) ? r.caption : "", o = M("width", r) ? r.width : "auto", s = M("url", r) ? r.url : !1, d = M("key", r) ? r.key : null, c = s === !1 && a, p = n.isDelete ? n.actions(!1, !0, c, s, d) : "", u = n.footer.repl("{actions}", p); return u.repl("{caption}", l).repl("{width}", o).repl("{indicator}", "").repl("{indicatorTitle}", "") } }, a = function (e, i) { return i = i || 0, "number" == typeof e ? e : ("string" == typeof e && (e = parseFloat(e)), isNaN(e) ? i : e) }, n = function () { return window.File && window.FileReader }, r = function () { var e = document.createElement("div"); return !i(9) && (void 0 !== e.draggable || void 0 !== e.ondragstart && void 0 !== e.ondrop) }, l = function () { return n() && window.FormData }, o = function (e, i) { e.removeClass(i).addClass(i) }, s = 'style="width:{width};height:{height};"', d = '      <param name="controller" value="true" />\n      <param name="allowFullScreen" value="true" />\n      <param name="allowScriptAccess" value="always" />\n      <param name="autoPlay" value="false" />\n      <param name="autoStart" value="false" />\n      <param name="quality" value="high" />\n', c = '<div class="file-preview-other">\n       {previewFileIcon}\n   </div>', p = { removeIcon: '<i class="glyphicon glyphicon-trash text-danger"></i>', removeClass: " btn-xs ", removeTitle: "Remove file", uploadIcon: '<i class="glyphicon glyphicon-upload text-info"></i>', uploadClass: "btn btn-xs btn-default", uploadTitle: "Upload file", indicatorNew: '<i class="glyphicon glyphicon-hand-down text-warning"></i>', indicatorSuccess: '<i class="glyphicon glyphicon-ok-sign file-icon-large text-success"></i>', indicatorError: '<i class="glyphicon glyphicon-exclamation-sign text-danger"></i>', indicatorLoading: '<i class="glyphicon glyphicon-hand-up text-muted"></i>', indicatorNewTitle: "Not uploaded yet", indicatorSuccessTitle: "Uploaded", indicatorErrorTitle: "Upload Error", indicatorLoadingTitle: "Uploading ..." }, u = '{preview}\n<div class="kv-upload-progress hide"></div>\n<div class="input-group {class}">\n   {caption}\n   <div class="input-group-btn">\n       {remove}\n       {cancel}\n       {upload}\n       {browse}\n   </div>\n</div>', f = '{preview}\n<div class="kv-upload-progress hide"></div>\n{remove}\n{cancel}\n{upload}\n{browse}\n', v = '<div class="file-preview {class}">\n    <div class="close fileinput-remove">&times;</div>\n    <div class="{dropClass}">\n    <div class="file-preview-thumbnails">\n    </div>\n    <div class="clearfix"></div>    <div class="file-preview-status text-center text-success"></div>\n    <div class="kv-fileinput-error"></div>\n    </div>\n</div>', h = '<span class="glyphicon glyphicon-file kv-caption-icon"></span>', m = '<div tabindex="-1" class="form-control file-caption {class}">\n   <span class="file-caption-ellipsis">&hellip;</span>\n   <div class="file-caption-name"></div>\n</div>', g = '<div id="{id}" class="modal fade">\n  <div class="modal-dialog modal-lg">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n        <h3 class="modal-title">Detailed Preview <small>{title}</small></h3>\n      </div>\n      <div class="modal-body">\n        <textarea class="form-control" style="font-family:Monaco,Consolas,monospace; height: {height}px;" readonly>{body}</textarea>\n      </div>\n    </div>\n  </div>\n</div>', w = '<div class="progress">\n    <div class="{class}" role="progressbar" aria-valuenow="{percent}" aria-valuemin="0" aria-valuemax="100" style="width:{percent}%;">\n        {percent}%\n     </div>\n</div>', b = '<div class="file-thumbnail-footer">\n    <div class="file-caption-name">{caption}</div>\n    {actions}\n</div>', x = '<div class="file-actions">\n    <div class="file-footer-buttons">\n        {upload}{delete}{other}    </div>\n    <div class="file-upload-indicator" tabindex="-1" title="{indicatorTitle}">{indicator}</div>\n    <div class="clearfix"></div>\n</div>', C = '<button type="button" class="kv-file-remove {removeClass}" title="{removeTitle}"{dataUrl}{dataKey}>{removeIcon}</button>\n', y = '<button type="button" class="kv-file-upload {uploadClass}" title="{uploadTitle}">   {uploadIcon}\n</button>\n', T = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   {content}\n   {footer}\n</div>\n', E = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n    <object data="{data}" type="{type}" width="{width}" height="{height}">\n       ' + c + "\n    </object>\n   {footer}\n</div>", k = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   <img src="{data}" class="file-preview-image" title="{caption}" alt="{caption}" ' + s + ">\n   {footer}\n</div>\n", F = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   <div class="file-preview-text" title="{caption}" ' + s + ">\n       {data}\n   </div>\n   {footer}\n</div>", $ = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <video width="{width}" height="{height}" controls>\n       <source src="{data}" type="{type}">\n       ' + c + "\n   </video>\n   {footer}\n</div>\n", I = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <audio controls>\n       <source src="{data}" type="{type}">\n       ' + c + "\n   </audio>\n   {footer}\n</div>", D = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <object type="application/x-shockwave-flash" width="{width}" height="{height}" data="{data}">\n' + d + "       " + c + "\n   </object>\n   {footer}\n</div>\n", P = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <object data="{data}" type="{type}" width="{width}" height="{height}">\n       <param name="movie" value="{caption}" />\n' + d + "         " + c + "\n   </object>\n   {footer}\n</div>", S = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + ">\n   " + c + "\n   {footer}\n</div>", U = { main1: u, main2: f, preview: v, icon: h, caption: m, modal: g, progress: w, footer: b, actions: x, actionDelete: C, actionUpload: y }, j = { generic: T, html: E, image: k, text: F, video: $, audio: I, flash: D, object: P, other: S }, A = ["image", "html", "text", "video", "audio", "flash", "object"], L = { image: { width: "auto", height: "160px" }, html: { width: "213px", height: "160px" }, text: { width: "160px", height: "160px" }, video: { width: "213px", height: "160px" }, audio: { width: "213px", height: "80px" }, flash: { width: "213px", height: "160px" }, object: { width: "160px", height: "160px" }, other: { width: "160px", height: "160px" } }, O = { image: function (e, i) { return void 0 !== e ? e.match("image.*") : i.match(/\.(gif|png|jpe?g)$/i) }, html: function (e, i) { return void 0 !== e ? "text/html" === e : i.match(/\.(htm|html)$/i) }, text: function (e, i) { return void 0 !== e && e.match("text.*") || i.match(/\.(txt|md|csv|nfo|php|ini)$/i) }, video: function (e, i) { return void 0 !== e && e.match(/\.video\/(ogg|mp4|webm)$/i) || i.match(/\.(og?|mp4|webm)$/i) }, audio: function (e, i) { return void 0 !== e && e.match(/\.audio\/(ogg|mp3|wav)$/i) || i.match(/\.(ogg|mp3|wav)$/i) }, flash: function (e, i) { return void 0 !== e && "application/x-shockwave-flash" === e || i.match(/\.(swf)$/i) }, object: function () { return !0 }, other: function () { return !0 } }, R = function (i, t) { return null === i || void 0 === i || 0 === i.length || t && "" === e.trim(i) }, z = function (e) { return Array.isArray(e) || "[object Array]" === Object.prototype.toString.call(e) }, M = function (e, i) { return "object" == typeof i && e in i }, N = function (i, t, a) { return R(i) || R(i[t]) ? a : e(i[t]) }, B = function () { return Math.round((new Date).getTime() + 100 * Math.random()) }, Z = function (e) { return String(e).repl("&", "&amp;").repl('"', "&quot;").repl("'", "&#39;").repl("<", "&lt;").repl(">", "&gt;") }, H = function (i, t) { var a = i; return t = t || {}, e.each(t, function (e, i) { "function" == typeof i && (i = i()), a = a.repl(e, i) }), a }, W = window.URL || window.webkitURL, _ = function (t, a) { var r = this; r.$element = e(t), r.validate() && (r.isPreviewable = n(), r.isIE9 = i(9), r.isIE10 = i(10), r.isPreviewable || r.isIE9 ? (r.init(a), r.listen()) : r.$element.removeClass("file-loading")) }; _.prototype = {
                    //                    constructor: _, validate: function () { var e, i = this; return "file" === i.$element.attr("type") ? !0 : (e = '<div class="help-block alert alert-warning"><h4>Invalid Input Type</h4>You must set an input <code>type = file</code> for <b>bootstrap-fileinput</b> plugin to initialize.</div>', i.$element.after(e), !1) }, init: function (i) { var n, s = this, d = s.$element; e.each(i, function (e, i) { s[e] = "maxFileCount" === e || "maxFileSize" === e ? a(i) : i }), s.fileInputCleared = !1, s.fileBatchCompleted = !0, R(s.allowedPreviewTypes) && (s.allowedPreviewTypes = A), s.isPreviewable || (s.showPreview = !1), s.uploadFileAttr = R(d.attr("name")) ? "file_data" : d.attr("name"), s.reader = null, s.formdata = {}, s.filestack = [], s.ajaxRequests = [], s.isError = !1, s.ajaxAborted = !1, s.dropZoneEnabled = r() && s.dropZoneEnabled, s.isDisabled = s.$element.attr("disabled") || s.$element.attr("readonly"), s.isUploadable = l() && !R(s.uploadUrl), s.slug = "function" == typeof i.slugCallback ? i.slugCallback : s.slugDefault, s.mainTemplate = s.getLayoutTemplate(s.showCaption ? "main1" : "main2"), s.captionTemplate = s.getLayoutTemplate("caption"), s.previewGenericTemplate = s.getPreviewTemplate("generic"), R(s.$element.attr("id")) && s.$element.attr("id", B()), void 0 === s.$container ? s.$container = s.createContainer() : s.refreshContainer(), s.$progress = s.$container.find(".kv-upload-progress"), s.$btnUpload = s.$container.find(".kv-fileinput-upload"), s.$captionContainer = N(i, "elCaptionContainer", s.$container.find(".file-caption")), s.$caption = N(i, "elCaptionText", s.$container.find(".file-caption-name")), s.$previewContainer = N(i, "elPreviewContainer", s.$container.find(".file-preview")), s.$preview = N(i, "elPreviewImage", s.$container.find(".file-preview-thumbnails")), s.$previewStatus = N(i, "elPreviewStatus", s.$container.find(".file-preview-status")), s.$errorContainer = N(i, "elErrorContainer", s.$previewContainer.find(".kv-fileinput-error")), R(s.msgErrorClass) || o(s.$errorContainer, s.msgErrorClass), s.$errorContainer.hide(), s.fileActionSettings = e.extend(p, i.fileActionSettings), s.previewInitId = "preview-" + B(), s.id = s.$element.attr("id"), t.init(s), s.initPreview(!0), s.initPreviewDeletes(), s.options = i, s.setFileDropZoneTitle(), s.uploadCount = 0, s.uploadPercent = 0, s.$element.removeClass("file-loading"), n = s.getLayoutTemplate("progress"), s.progressTemplate = n.replace("{class}", s.progressClass), s.progressCompleteTemplate = n.replace("{class}", s.progressCompleteClass), s.setEllipsis() }, parseError: function (i, t, a) { var n = this, r = e.trim(t + ""), l = "." === r.slice(-1) ? "" : ".", o = void 0 !== i.responseJSON && void 0 !== i.responseJSON.error ? i.responseJSON.error : i.responseText; return n.showAjaxErrorDetails ? (o = e.trim(o.replace(/\n\s*\n/g, "\n")), o = o.length > 0 ? "<pre>" + o + "</pre>" : "", r += l + o) : r += l, a ? "<b>" + a + ": </b>" + i : r }, raise: function (i, t) { var a = this, n = e.Event(i); if (void 0 !== t ? a.$element.trigger(n, t) : a.$element.trigger(n), !n.result) return n.result; switch (i) { case "filebatchuploadcomplete": case "filebatchuploadsuccess": case "fileuploaded": case "fileclear": case "filecleared": case "filereset": case "fileerror": case "filefoldererror": case "fileuploaderror": case "filebatchuploaderror": case "filedeleteerror": case "filecustomerror": case "filesuccessremove": break; default: a.ajaxAborted = n.result } return !0 }, getLayoutTemplate: function (e) { var i = this, t = M(e, i.layoutTemplates) ? i.layoutTemplates[e] : U[e]; return R(i.customLayoutTags) ? t : H(t, i.customLayoutTags) }, getPreviewTemplate: function (e) { var i = this, t = M(e, i.previewTemplates) ? i.previewTemplates[e] : j[e]; return t = t.repl("{previewFileIcon}", i.previewFileIcon), R(i.customPreviewTags) ? t : H(t, i.customPreviewTags) }, getOutData: function (e, i, t) { var a = this; return e = e || {}, i = i || {}, t = t || a.filestack.slice(0) || {}, { form: a.formdata, files: t, extra: a.getExtraData(), response: i, reader: a.reader, jqXHR: e } }, setEllipsis: function () { var e = this, i = e.$captionContainer, t = e.$caption, a = t.clone().css("height", "auto").hide(); i.parent().before(a), i.removeClass("kv-has-ellipsis"), a.outerWidth() > t.outerWidth() && i.addClass("kv-has-ellipsis"), a.remove() }, listen: function () { var i = this, t = i.$element, a = i.$captionContainer, n = i.$btnFile, r = t.closest("form"); t.on("change", e.proxy(i.change, i)), e(window).on("resize", function () { i.setEllipsis() }), n.off("click").on("click", function () { i.raise("filebrowse"), i.isError && !i.isUploadable && i.clear(), a.focus() }), r.off("reset").on("reset", e.proxy(i.reset, i)), i.$container.off("click").on("click", ".fileinput-remove:not([disabled])", e.proxy(i.clear, i)).on("click", ".fileinput-cancel", e.proxy(i.cancel, i)), i.isUploadable && i.dropZoneEnabled && i.showPreview && i.initDragDrop(), i.isUploadable || r.on("submit", e.proxy(i.submitForm, i)), i.$container.find(".kv-fileinput-upload").off("click").on("click", function (t) { var a, n = e(this), r = !n.hasClass("disabled") && R(n.attr("disabled")); return i.isUploadable ? (t.preventDefault(), void (r && i.upload())) : void (r && "submit" !== n.attr("type") && (a = n.closest("form"), a.length && a.trigger("submit"), t.preventDefault())) }) }, submitForm: function () { var e = this, i = e.$element, t = i.get(0).files; return t && t.length < e.minFileCount && e.minFileCount > 0 ? (e.noFilesError({}), !1) : !e.abort({}) }, abort: function (i) { var t, a = this; return a.ajaxAborted && "object" == typeof a.ajaxAborted && void 0 !== a.ajaxAborted.message ? (t = e.extend(a.getOutData(), i), t.abortData = a.ajaxAborted.data || {}, t.abortMessage = a.ajaxAborted.message, a.showUploadError(a.ajaxAborted.message, t, "filecustomerror"), !0) : !1 }, noFilesError: function (e) { var i = this, t = i.minFileCount > 1 ? i.filePlural : i.fileSingle, a = i.msgFilesTooLess.replace("{n}", i.minFileCount).replace("{files}", t), n = i.$errorContainer; n.html(a), i.isError = !0, i.updateFileDetails(0), n.fadeIn(800), i.raise("fileerror", [e]), i.clearFileInput(), o(i.$container, "has-error") }, setProgress: function (e) { var i = this, t = Math.min(e, 100), a = 100 > t ? i.progressTemplate : i.progressCompleteTemplate; R(a) || i.$progress.html(a.repl("{percent}", t)) }, upload: function () { var i, t, a, n = this, r = n.getFileStack().length, l = {}, o = !e.isEmptyObject(n.getExtraData()); if (r < n.minFileCount && n.minFileCount > 0) return void n.noFilesError(l); if (n.isUploadable && !n.isDisabled && (0 !== r || o)) { if (n.resetUpload(), n.$progress.removeClass("hide"), n.uploadCount = 0, n.uploadPercent = 0, n.lock(), n.setProgress(0), 0 === r && o) return void n.uploadExtraOnly(); if (a = n.filestack.length, n.hasInitData = !1, n.uploadAsync && n.showPreview) for (t = n.getOutData(), n.raise("filebatchpreupload", [t]), n.fileBatchCompleted = !1, n.uploadCache = { content: [], config: [], tags: [], append: !0 }, i = 0; a > i; i += 1) void 0 !== n.filestack[i] && n.uploadSingle(i, n.filestack, !0); else n.uploadBatch() } }, lock: function () { var e = this; e.resetErrors(), e.disable(), e.showRemove && o(e.$container.find(".fileinput-remove"), "hide"), e.showCancel && e.$container.find(".fileinput-cancel").removeClass("hide"), e.raise("filelock", [e.filestack, e.getExtraData()]) }, unlock: function (e) { var i = this; void 0 === e && (e = !0), i.enable(), i.showCancel && o(i.$container.find(".fileinput-cancel"), "hide"), i.showRemove && i.$container.find(".fileinput-remove").removeClass("hide"), e && i.resetFileStack(), i.raise("fileunlock", [i.filestack, i.getExtraData()]) }, resetFileStack: function () { var i = this, t = 0, a = []; i.getThumbs().each(function () { var n = e(this), r = n.attr("data-fileindex"), l = i.filestack[r]; -1 !== r && (void 0 !== l ? (a[t] = l, n.attr({ id: i.previewInitId + "-" + t, "data-fileindex": t }), t += 1) : n.attr({ id: "uploaded-" + B(), "data-fileindex": "-1" })) }), i.filestack = a }, refresh: function (i) { var t, a = this, n = a.$element, r = arguments.length ? e.extend(a.options, i) : a.options; n.off(), a.init(r), t = a.$container.find(".file-drop-zone"), t.off("dragenter dragover dragleave drop"), e(document).off("dragenter dragover drop"), a.listen(), a.setFileDropZoneTitle() }, initDragDrop: function () { var i = this, t = i.$container.find(".file-drop-zone"); t.off("dragenter dragover dragleave drop"), e(document).off("dragenter dragover drop"), t.on("dragenter dragover", function (t) { var a = e.inArray("Files", t.originalEvent.dataTransfer.types) > -1; return t.stopPropagation(), t.preventDefault(), i.isDisabled || !a ? (t.originalEvent.dataTransfer.effectAllowed = "none", void (t.originalEvent.dataTransfer.dropEffect = "none")) : void o(e(this), "highlighted") }), t.on("dragleave", function (t) { t.stopPropagation(), t.preventDefault(), i.isDisabled || e(this).removeClass("highlighted") }), t.on("drop", function (t) { t.preventDefault(), i.isDisabled || R(t.originalEvent.dataTransfer.files) || (i.change(t, "dragdrop"), e(this).removeClass("highlighted")) }), e(document).on("dragenter dragover drop", function (e) { e.stopPropagation(), e.preventDefault() }) }, setFileDropZoneTitle: function () { var e = this, i = e.$container.find(".file-drop-zone"); i.find("." + e.dropZoneTitleClass).remove(), e.isUploadable && e.showPreview && 0 !== i.length && !(e.getFileStack().length > 0) && e.dropZoneEnabled && (0 === i.find(".file-preview-frame").length && i.prepend('<div class="' + e.dropZoneTitleClass + '">' + e.dropZoneTitle + "</div>"), e.$container.removeClass("file-input-new"), o(e.$container, "file-input-ajax-new")) }, initFileActions: function () { var i = this; i.$preview.find(".kv-file-remove").each(function () { var a, n, r = e(this), l = r.closest(".file-preview-frame"), o = l.attr("data-fileindex"); r.off("click").on("click", function () { i.cleanMemory(l), l.fadeOut("slow", function () { i.filestack[o] = void 0, i.clearObjects(l), l.remove(); var e = i.getFileStack(!0), r = e.length, s = t.count(i.id); i.clearFileInput(), 0 === r && 0 === s ? i.reset() : (a = s + r, n = a > 1 ? i.getMsgSelected(a) : e[0] ? e[0].name : "", i.setCaption(n)) }) }) }), i.$preview.find(".kv-file-upload").each(function () { var t = e(this); t.off("click").on("click", function () { var e = t.closest(".file-preview-frame"), a = e.attr("data-fileindex"); i.uploadSingle(a, i.filestack, !1) }) }) }, getMsgSelected: function (e) { var i = this, t = 1 === e ? i.fileSingle : i.filePlural; return i.msgSelected.replace("{n}", e).replace("{files}", t) }, renderFileFooter: function (e, i) { var t, a, n = this, r = n.fileActionSettings, l = n.getLayoutTemplate("footer"); return n.isUploadable ? (t = l.repl("{actions}", n.renderFileActions(!0, !0, !1, !1, !1)), a = t.repl("{caption}", e).repl("{width}", i).repl("{indicator}", r.indicatorNew).repl("{indicatorTitle}", r.indicatorNewTitle)) : a = l.repl("{actions}", "").repl("{caption}", e).repl("{width}", i).repl("{indicator}", "").repl("{indicatorTitle}", ""), a = H(a, n.previewThumbTags) }, renderFileActions: function (e, i, t, a, n) { if (!e && !i) return ""; var r = this, l = a === !1 ? "" : ' data-url="' + a + '"', o = n === !1 ? "" : ' data-key="' + n + '"', s = r.getLayoutTemplate("actionDelete"), d = "", c = r.getLayoutTemplate("actions"), p = r.otherActionButtons.repl("{dataKey}", o), u = r.fileActionSettings, f = t ? u.removeClass + " disabled" : u.removeClass; return s = s.repl("{removeClass}", f).repl("{removeIcon}", u.removeIcon).repl("{removeTitle}", u.removeTitle).repl("{dataUrl}", l).repl("{dataKey}", o), e && (d = r.getLayoutTemplate("actionUpload").repl("{uploadClass}", u.uploadClass).repl("{uploadIcon}", u.uploadIcon).repl("{uploadTitle}", u.uploadTitle)), c.repl("{delete}", s).repl("{upload}", d).repl("{other}", p) }, setThumbStatus: function (e, i) { var t = this, a = "indicator" + i, n = a + "Title", r = "file-preview-" + i.toLowerCase(), l = e.find(".file-upload-indicator"), o = t.fileActionSettings; e.removeClass("file-preview-success file-preview-error file-preview-loading"), l.html(o[a]), l.attr("title", o[n]), e.addClass(r) }, clearPreview: function () { var e = this, i = e.$preview.find(e.showUploadedThumbs ? ".file-preview-frame:not(.file-preview-success)" : ".file-preview-frame"); i.remove(), e.$preview.find(".file-preview-frame").length && e.showPreview || e.resetUpload() }, initPreview: function (e) { var i, a = this, n = a.initialCaption || ""; return t.count(a.id) ? (i = t.out(a.id), n = e && a.initialCaption ? a.initialCaption : i.caption, a.$preview.html(i.content), a.setCaption(n), void (R(i.content) || a.$container.removeClass("file-input-new"))) : (a.clearPreview(), void (e ? a.setCaption(n) : a.initCaption())) }, initPreviewDeletes: function () { var i = this, a = i.deleteExtraData || {}, n = function () { 0 === i.$preview.find(".kv-file-remove").length && (i.reset(), i.initialCaption = "") }; i.$preview.find(".kv-file-remove").each(function () { var r = e(this), l = r.data("url") || i.deleteUrl, s = r.data("key"); if (!R(l) && void 0 !== s) { var d, c, p, u, f = r.closest(".file-preview-frame"), v = t.data[i.id], h = f.data("fileindex"); h = parseInt(h.replace("init_", "")), p = R(v.config) && R(v.config[h]) ? null : v.config[h], u = R(p) || R(p.extra) ? a : p.extra, "function" == typeof u && (u = u()), c = { id: r.attr("id"), key: s, extra: u }, d = e.extend({ url: l, type: "DELETE", dataType: "json", data: e.extend({ key: s }, u), beforeSend: function (e) { i.ajaxAborted = !1, i.raise("filepredelete", [s, e, u]), i.ajaxAborted ? e.abort() : (o(f, "file-uploading"), o(r, "disabled")) }, success: function (e, a, l) { var o, d; return R(e) || R(e.error) ? (t.unset(i.id, h), o = t.count(i.id), d = o > 0 ? i.getMsgSelected(o) : "", i.raise("filedeleted", [s, l, u]), i.setCaption(d), f.removeClass("file-uploading").addClass("file-deleted"), void f.fadeOut("slow", function () { i.clearObjects(f), f.remove(), n(), o || 0 !== i.getFileStack().length || (i.setCaption(""), i.reset()) })) : (c.jqXHR = l, c.response = e, i.showError(e.error, c, "filedeleteerror"), f.removeClass("file-uploading"), r.removeClass("disabled"), void n()) }, error: function (e, t, a) { var r = i.parseError(e, a); c.jqXHR = e, c.response = {}, i.showError(r, c, "filedeleteerror"), f.removeClass("file-uploading"), n() } }, i.ajaxDeleteSettings), r.off("click").on("click", function () { e.ajax(d) }) } }) }, clearObjects: function (i) { i.find("video audio").each(function () { this.pause(), e(this).remove() }), i.find("img object div").each(function () { e(this).remove() }) }, clearFileInput: function () { var i, t, a, n = this, r = n.$element; R(r.val()) || (n.isIE9 || n.isIE10 ? (i = r.closest("form"), t = e(document.createElement("form")), a = e(document.createElement("div")), r.before(a), i.length ? i.after(t) : a.after(t), t.append(r).trigger("reset"), a.before(r).remove(), t.remove()) : r.val(""), n.fileInputCleared = !0) }, resetUpload: function () { var e = this; e.uploadCache = { content: [], config: [], tags: [], append: !0 }, e.uploadCount = 0, e.uploadPercent = 0, e.$btnUpload.removeAttr("disabled"), e.setProgress(0), o(e.$progress, "hide"), e.resetErrors(!1), e.ajaxAborted = !1, e.ajaxRequests = [] }, cancel: function () { var i, t = this, a = t.ajaxRequests, n = a.length; if (n > 0) for (i = 0; n > i; i += 1) a[i].abort(); t.getThumbs().each(function () { var i = e(this), a = i.attr("data-fileindex"); i.removeClass("file-uploading"), void 0 !== t.filestack[a] && (i.find(".kv-file-upload").removeClass("disabled").removeAttr("disabled"), i.find(".kv-file-remove").removeClass("disabled").removeAttr("disabled")), t.unlock() }) }, cleanMemory: function (e) { var i = e.is("img") ? e.attr("src") : e.find("source").attr("src"); W.revokeObjectURL(i) }, hasInitialPreview: function () { var e = this; return !e.overwriteInitial && t.count(e.id) }, clear: function () { var i, t = this; t.$btnUpload.removeAttr("disabled"), t.getThumbs().find("video,audio,img").each(function () { t.cleanMemory(e(this)) }), t.resetUpload(), t.filestack = [], t.clearFileInput(), t.resetErrors(!0), t.raise("fileclear"), t.hasInitialPreview() ? (t.showFileIcon(), t.resetPreview(), t.setEllipsis(), t.initPreviewDeletes(), t.$container.removeClass("file-input-new")) : (t.getThumbs().each(function () { t.clearObjects(e(this)) }), t.$preview.html(""), i = !t.overwriteInitial && t.initialCaption.length > 0 ? t.initialCaption : "", t.setCaption(i), t.setEllipsis(), t.$caption.attr("title", ""), o(t.$container, "file-input-new")), 0 === t.$container.find(".file-preview-frame").length && (t.initCaption() || t.$captionContainer.find(".kv-caption-icon").hide(), t.setEllipsis()), t.hideFileIcon(), t.raise("filecleared"), t.$captionContainer.focus(), t.setFileDropZoneTitle() }, resetPreview: function () { var e, i = this; t.count(i.id) ? (e = t.out(i.id), i.$preview.html(e.content), i.setCaption(e.caption)) : (i.clearPreview(), i.initCaption()) }, reset: function () { var e = this; e.resetPreview(), e.setEllipsis(), e.$container.find(".fileinput-filename").text(""), e.raise("filereset"), e.initialPreview.length > 0 && e.$container.removeClass("file-input-new"), e.setFileDropZoneTitle(), e.filestack = [], e.formdata = {} }, disable: function () { var e = this; e.isDisabled = !0, e.raise("filedisabled"), e.$element.attr("disabled", "disabled"), e.$container.find(".kv-fileinput-caption").addClass("file-caption-disabled"), e.$container.find(".btn-file, .fileinput-remove, .kv-fileinput-upload").attr("disabled", !0), e.initDragDrop() }, enable: function () { var e = this; e.isDisabled = !1, e.raise("fileenabled"), e.$element.removeAttr("disabled"), e.$container.find(".kv-fileinput-caption").removeClass("file-caption-disabled"), e.$container.find(".btn-file, .fileinput-remove, .kv-fileinput-upload").removeAttr("disabled"), e.initDragDrop() }, getThumbs: function (e) { return e = e || "", this.$preview.find(".file-preview-frame:not(.file-preview-initial)" + e) }, getExtraData: function () { var e = this, i = e.uploadExtraData; return "function" == typeof e.uploadExtraData && (i = e.uploadExtraData()), i }, uploadExtra: function () { var i = this, t = i.getExtraData(); 0 !== t.length && e.each(t, function (e, t) { i.formdata.append(e, t) }) }, initXhr: function (e, i) { var t = this; return e.upload && e.upload.addEventListener("progress", function (e) { var a = 0, n = e.loaded || e.position, r = e.total; e.lengthComputable && (a = Math.ceil(n / r * i)), t.uploadPercent = Math.max(a, t.uploadPercent), t.setProgress(t.uploadPercent) }, !1), e }, ajaxSubmit: function (i, t, a, n) { var r, l = this; l.uploadExtra(), r = e.extend({ xhr: function () { var i = e.ajaxSettings.xhr(); return l.initXhr(i, 98) }, url: l.uploadUrl, type: "POST", dataType: "json", data: l.formdata, cache: !1, processData: !1, contentType: !1, beforeSend: i, success: t, complete: a, error: n }, l.ajaxSettings), l.ajaxRequests.push(e.ajax(r)) }, initUploadSuccess: function (i, a, n) { var r, l, o, s, d, c, p, u = this; "object" != typeof i || e.isEmptyObject(i) || void 0 !== i.initialPreview && i.initialPreview.length > 0 && (u.hasInitData = !0, d = i.initialPreview || [], c = i.initialPreviewConfig || [], p = i.initialPreviewThumbTags || [], r = void 0 === i.append || i.append ? !0 : !1, u.overwriteInitial = !1, void 0 === a || n ? n ? (u.uploadCache.content.push(d[0]), u.uploadCache.config.push(c[0]), u.uploadCache.tags.push(p[0]), u.uploadCache.append = r) : (t.set(u.id, d, c, p, r), u.initPreview(), u.initPreviewDeletes()) : (o = t.add(u.id, d, c[0], p[0], r), l = t.get(u.id, o, !1), s = e(l).hide(), a.after(s).fadeOut("slow", function () { s.fadeIn("slow").css("display:inline-block"), u.initPreviewDeletes(), u.clearFileInput(), a.remove() }))) }, initSuccessThumbs: function () { var i = this; i.getThumbs(".file-preview-success").each(function () { var t = e(this), a = t.find(".kv-file-remove"); a.removeAttr("disabled").off("click").on("click", function () { var e = i.raise("filesuccessremove", [t.attr("id"), t.data("fileindex")]); i.cleanMemory(t), e !== !1 && t.fadeOut("slow", function () { t.remove(), i.$preview.find(".file-preview-frame").length || i.reset() }) }) }) }, uploadSingle: function (i, a, n) { var r, l, s, d, c, p, u, f, v, h = this, m = h.getFileStack().length, g = new FormData, w = h.previewInitId + "-" + i, b = e("#" + w + ":not(.file-preview-initial)"), x = b.find(".kv-file-upload"), C = b.find(".kv-file-remove"), y = h.filestack.length > 0 || !e.isEmptyObject(h.uploadExtraData), T = { id: w, index: i }; h.formdata = g, 0 === m || !y || x.hasClass("disabled") || h.abort(T) || (s = function () { var e = h.getThumbs(".file-uploading"); e.length > 0 || h.fileBatchCompleted || (h.fileBatchCompleted = !0, setTimeout(function () { t.set(h.id, h.uploadCache.content, h.uploadCache.config, h.uploadCache.tags, h.uploadCache.append), h.hasInitData && (h.initPreview(), h.initPreviewDeletes()), h.setProgress(100), h.unlock(), h.clearFileInput(), h.raise("filebatchuploadcomplete", [h.filestack, h.getExtraData()]) }, 100)) }, d = function () { !n || 0 === m || h.uploadPercent >= 100 || (h.uploadCount += 1, l = 80 + Math.ceil(20 * h.uploadCount / m), h.uploadPercent = Math.max(l, h.uploadPercent), h.setProgress(h.uploadPercent), h.initPreviewDeletes()) }, c = function () { x.removeAttr("disabled"), C.removeAttr("disabled"), b.removeClass("file-uploading") }, p = function (t) { r = h.getOutData(t), b.hasClass("file-preview-success") || (h.setThumbStatus(b, "Loading"), o(b, "file-uploading")), x.attr("disabled", !0), C.attr("disabled", !0), n || h.lock(), h.raise("filepreupload", [r, w, i]), T = e.extend(T, r), h.abort(T) && (t.abort(), h.setProgress(100)) }, u = function (t, a, l) { r = h.getOutData(l, t), T = e.extend(T, r), setTimeout(function () { R(t) || R(t.error) ? (h.setThumbStatus(b, "Success"), x.hide(), h.filestack[i] = void 0, h.raise("fileuploaded", [r, w, i]), h.initUploadSuccess(t, b, n), n || h.resetFileStack()) : (h.setThumbStatus(b, "Error"), h.showUploadError(t.error, T)) }, 100) }, f = function () { setTimeout(function () { d(), c(), n ? s() : h.unlock(!1), h.initSuccessThumbs() }, 100) }, v = function (t, r, l) { var o = h.parseError(t, l, n ? a[i].name : null); h.setThumbStatus(b, "Error"), T = e.extend(T, h.getOutData(t)), h.showUploadError(o, T) }, g.append(h.uploadFileAttr, a[i]), g.append("file_id", i), h.ajaxSubmit(p, u, f, v)) }, uploadBatch: function () {
                    //                        var i, t, a, n, r, l = this, s = l.filestack, d = s.length, c = l.filestack.length > 0 || !e.isEmptyObject(l.uploadExtraData), p = {}; l.formdata = new FormData, 0 !== d && c && !l.abort(p) && (i = function () { e.each(s, function (e) { l.filestack[e] = void 0 }), l.clearFileInput() }, t = function (i) { l.lock(); var t = l.getOutData(i); l.showPreview && l.getThumbs().each(function () { var i = e(this), t = i.find(".kv-file-upload"), a = i.find(".kv-file-remove"); i.hasClass("file-preview-success") || (l.setThumbStatus(i, "Loading"), o(i, "file-uploading")), t.attr("disabled", !0), a.attr("disabled", !0) }), l.raise("filebatchpreupload", [t]), l.abort(t) && i.abort() }, a = function (t, a, n) {
                    //                            var r = l.getOutData(n, t), o = l.getThumbs(), s = R(t.errorkeys) ? [] : t.errorkeys; R(t) || R(t.error) ? (l.raise("filebatchuploadsuccess", [r]), i(), l.showPreview ? (o.each(function () { var i = e(this), t = i.find(".kv-file-upload"); i.find(".kv-file-upload").hide(), l.setThumbStatus(i, "Success"), i.removeClass("file-uploading"), t.removeAttr("disabled") }), l.initUploadSuccess(t)) : l.reset()) : (l.showPreview && (o.each(function () {
                    //                                var i = e(this), t = i.find(".kv-file-remove"), a = i.find(".kv-file-upload"); return i.removeClass("file-uploading"), a.removeAttr("disabled"), t.removeAttr("disabled"), 0 === s.length ? void l.setThumbStatus(i, "Error") : void (-1 !== e.inArray(key, s) ? l.setThumbStatus(i, "Error") : (i.find(".kv-file-upload").hide(), l.setThumbStatus(i, "Success"), l.filestack[key] = void 0));

                    //                            }), l.initUploadSuccess(t)), l.showUploadError(t.error, r, "filebatchuploaderror"))
                    //                        }, n = function () { l.setProgress(100), l.unlock(), l.initSuccessThumbs(), l.raise("filebatchuploadcomplete", [l.filestack, l.getExtraData()]), l.clearFileInput() }, r = function (i, t, a) { var n = l.getOutData(i), r = l.parseError(i, a); l.showUploadError(r, n, "filebatchuploaderror"), l.uploadFileCount = d - 1, l.showPreview && (l.getThumbs().each(function () { var i = e(this), t = i.attr("data-fileindex"); i.removeClass("file-uploading"), void 0 !== l.filestack[t] && l.setThumbStatus(i, "Error") }), l.getThumbs().removeClass("file-uploading"), l.getThumbs(" .kv-file-upload").removeAttr("disabled"), l.getThumbs(" .kv-file-delete").removeAttr("disabled")) }, e.each(s, function (e, i) { R(s[e]) || l.formdata.append(l.uploadFileAttr, i) }), l.ajaxSubmit(t, a, n, r))
                    //                    }, uploadExtraOnly: function () { var e, i, t, a, n = this, r = {}; n.formdata = new FormData, n.abort(r) || (e = function (e) { n.lock(); var i = n.getOutData(e); n.raise("filebatchpreupload", [i]), n.setProgress(50), r.data = i, r.xhr = e, n.abort(r) && (e.abort(), n.setProgress(100)) }, i = function (e, i, t) { var a = n.getOutData(t, e); R(e) || R(e.error) ? (n.raise("filebatchuploadsuccess", [a]), n.clearFileInput(), n.initUploadSuccess(e)) : n.showUploadError(e.error, a, "filebatchuploaderror") }, t = function () { n.setProgress(100), n.unlock(), n.raise("filebatchuploadcomplete", [n.filestack, n.getExtraData()]), n.clearFileInput() }, a = function (e, i, t) { var a = n.getOutData(e), l = n.parseError(e, t); r.data = a, n.showUploadError(l, a, "filebatchuploaderror") }, n.ajaxSubmit(e, i, t, a)) }, hideFileIcon: function () { this.overwriteInitial && this.$captionContainer.find(".kv-caption-icon").hide() }, showFileIcon: function () { this.$captionContainer.find(".kv-caption-icon").show() }, resetErrors: function (e) { var i = this, t = i.$errorContainer; i.isError = !1, i.$container.removeClass("has-error"), t.html(""), e ? t.fadeOut("slow") : t.hide() }, showFolderError: function (e) { var i = this, t = i.$errorContainer; e && (t.html(i.msgFoldersNotAllowed.repl("{n}", e)), t.fadeIn(800), o(i.$container, "has-error"), i.raise("filefoldererror", [e])) }, showUploadError: function (e, i, t) { var a = this, n = a.$errorContainer, r = t || "fileuploaderror"; return 0 === n.find("ul").length ? n.html("<ul><li>" + e + "</li></ul>") : n.find("ul").append("<li>" + e + "</li>"), n.fadeIn(800), a.raise(r, [i]), o(a.$container, "has-error"), !0 }, showError: function (e, i, t) { var a = this, n = a.$errorContainer, r = t || "fileerror"; return i = i || {}, i.reader = a.reader, n.html(e), n.fadeIn(800), a.raise(r, [i]), a.isUploadable || a.clearFileInput(), o(a.$container, "has-error"), a.$btnUpload.attr("disabled", !0), !0 }, errorHandler: function (e, i) { var t = this, a = e.target.error; switch (a.code) { case a.NOT_FOUND_ERR: t.showError(t.msgFileNotFound.replace("{name}", i)); break; case a.SECURITY_ERR: t.showError(t.msgFileSecured.replace("{name}", i)); break; case a.NOT_READABLE_ERR: t.showError(t.msgFileNotReadable.replace("{name}", i)); break; case a.ABORT_ERR: t.showError(t.msgFilePreviewAborted.replace("{name}", i)); break; default: t.showError(t.msgFilePreviewError.replace("{name}", i)) } }, parseFileType: function (e) { var i, t, a, n, r = this; for (n = 0; n < A.length; n += 1) if (a = A[n], i = M(a, r.fileTypeSettings) ? r.fileTypeSettings[a] : O[a], t = i(e.type, e.name) ? a : "", !R(t)) return t; return "other" }, previewDefault: function (i, t, a) { if (this.showPreview) { var n = this, r = W.createObjectURL(i), l = (e("#" + t), n.previewSettings.other || L.other), o = n.renderFileFooter(i.name, l.width), s = n.getPreviewTemplate("other"), d = t.slice(t.lastIndexOf("-") + 1), c = ""; a === !0 && (c = " btn disabled", o += '<div class="file-other-error text-danger"><i class="glyphicon glyphicon-exclamation-sign"></i></div>'), n.$preview.append("\n" + s.repl("{previewId}", t).repl("{frameClass}", c).repl("{fileindex}", d).repl("{caption}", n.slug(i.name)).repl("{width}", l.width).repl("{height}", l.height).repl("{type}", i.type).repl("{data}", r).repl("{footer}", o)) } }, previewFile: function (e, i, t, a, n) { if (this.showPreview) { var r, l, o, s, d = this, c = d.parseFileType(i), p = d.slug(i.name), u = d.allowedPreviewTypes, f = d.allowedPreviewMimeTypes, v = d.getPreviewTemplate(c), h = M(c, d.previewSettings) ? d.previewSettings[c] : L[c], m = parseInt(d.wrapTextLength, 10), g = d.wrapIndicator, w = u.indexOf(c) >= 0, b = R(f) || !R(f) && -1 !== f.indexOf(i.type), x = d.renderFileFooter(p, h.width), C = "", y = a.slice(a.lastIndexOf("-") + 1); w && b ? ("text" === c ? (l = Z(t.target.result), l.length > m && (o = "text-" + B(), s = .75 * window.innerHeight, C = d.getLayoutTemplate("modal").repl("{id}", o).repl("{title}", p).repl("{height}", s).repl("{body}", l), g = g.repl("{title}", p).repl("{dialog}", "$('#" + o + "').modal('show')"), l = l.substring(0, m - 1) + g), r = v.repl("{previewId}", a).repl("{caption}", p).repl("{frameClass}", "").repl("{type}", i.type).repl("{width}", h.width).repl("{height}", h.height).repl("{data}", l).repl("{footer}", x).repl("{fileindex}", y) + C) : r = v.repl("{previewId}", a).repl("{caption}", p).repl("{frameClass}", "").repl("{type}", i.type).repl("{data}", n).repl("{width}", h.width).repl("{height}", h.height).repl("{footer}", x).repl("{fileindex}", y), d.$preview.append("\n" + r), d.validateImage(e, a)) : d.previewDefault(i, a) } }, slugDefault: function (e) { return R(e) ? "" : e.split(/(\\|\/)/g).pop().replace(/[^\w\u00C0-\u017F\-.\\\/ ]+/g, "") }, getFileStack: function (e) { var i = this; return i.filestack.filter(function (i) { return e ? void 0 !== i : void 0 !== i && null !== i }) }, readFiles: function (i) { function t(e) { if (R(n.attr("multiple")) && (u = 1), e >= u) return a.isUploadable && a.filestack.length > 0 ? a.raise("filebatchselected", [a.getFileStack()]) : a.raise("filebatchselected", [i]), o.removeClass("loading"), void s.html(""); var m, g, w, b, x, C, y = v + e, T = p + "-" + y, E = i[e], k = a.slug(E.name), F = (E.size || 0) / 1e3, $ = "", I = W.createObjectURL(E), D = 0, P = a.allowedFileTypes, S = R(P) ? "" : P.join(", "), U = a.allowedFileExtensions, j = R(U) ? "" : U.join(", "); if (R(U) || ($ = new RegExp("\\.(" + U.join("|") + ")$", "i")), F = F.toFixed(2), a.maxFileSize > 0 && F > a.maxFileSize) return b = a.msgSizeTooLarge.replace("{name}", k).replace("{size}", F).replace("{maxSize}", a.maxFileSize), void (a.isError = h(b, E, T, e)); if (!R(P) && z(P)) { for (w = 0; w < P.length; w += 1) x = P[w], g = f[x], C = void 0 !== g && g(E.type, k), D += R(C) ? 0 : C.length; if (0 === D) return b = a.msgInvalidFileType.replace("{name}", k).replace("{types}", S), void (a.isError = h(b, E, T, e)) } return 0 !== D || R(U) || !z(U) || R($) || (C = k.match($), D += R(C) ? 0 : C.length, 0 !== D) ? a.showPreview ? (r.length > 0 && void 0 !== FileReader ? (s.html(d.replace("{index}", e + 1).replace("{files}", u)), o.addClass("loading"), l.onerror = function (e) { a.errorHandler(e, k) }, l.onload = function (i) { a.previewFile(e, E, i, T, I), a.initFileActions() }, l.onloadend = function () { b = c.replace("{index}", e + 1).replace("{files}", u).replace("{percent}", 50).replace("{name}", k), setTimeout(function () { s.html(b), t(e + 1), a.updateFileDetails(u) }, 100), a.raise("fileloaded", [E, T, e, l]) }, l.onprogress = function (i) { if (i.lengthComputable) { var t = i.loaded / i.total * 100, a = Math.ceil(t); b = c.replace("{index}", e + 1).replace("{files}", u).replace("{percent}", a).replace("{name}", k), setTimeout(function () { s.html(b) }, 100) } }, m = M("text", f) ? f.text : O.text, m(E.type, k) ? l.readAsText(E, a.textEncoding) : l.readAsArrayBuffer(E)) : (a.previewDefault(E, T), setTimeout(function () { t(e + 1), a.updateFileDetails(u) }, 100), a.raise("fileloaded", [E, T, e, l])), void a.filestack.push(E)) : (a.filestack.push(E), setTimeout(t(e + 1), 100), void a.raise("fileloaded", [E, T, e, l])) : (b = a.msgInvalidFileExtension.replace("{name}", k).replace("{extensions}", j), void (a.isError = h(b, E, T, e))) } this.reader = new FileReader; var a = this, n = a.$element, r = a.$preview, l = a.reader, o = a.$previewContainer, s = a.$previewStatus, d = a.msgLoading, c = a.msgProgress, p = a.previewInitId, u = i.length, f = a.fileTypeSettings, v = a.filestack.length, h = function (t, n, r, l) { var o = e.extend(a.getOutData({}, {}, i), { id: r, index: l }), s = { id: r, index: l, file: n, files: i }; return a.previewDefault(n, r, !0), a.isUploadable ? a.showUploadError(t, o) : a.showError(t, s) }; t(0), a.updateFileDetails(u, !1) }, updateFileDetails: function (e) { var i = this, a = i.$element, n = i.getFileStack(), r = a.val() || n.length && n[0].name || "", l = i.slug(r), o = i.isUploadable ? n.length : e, s = t.count(i.id) + o, d = o > 1 ? i.getMsgSelected(s) : l; i.isError ? (i.$previewContainer.removeClass("loading"), i.$previewStatus.html(""), i.$captionContainer.find(".kv-caption-icon").hide()) : i.showFileIcon(), i.setCaption(d, i.isError), i.$container.removeClass("file-input-new file-input-ajax-new"), 1 === arguments.length && i.raise("fileselect", [e, l]), t.count(i.id) && i.initPreviewDeletes() }, change: function (i) { var a = this, n = a.$element; if (!a.isUploadable && R(n.val()) && a.fileInputCleared) return void (a.fileInputCleared = !1); a.fileInputCleared = !1; var r, l, o, s, d = a.$preview, c = arguments.length > 1, p = c ? i.originalEvent.dataTransfer.files : n.get(0).files, u = R(n.attr("multiple")), f = 0, v = 0, h = a.filestack.length, m = a.isUploadable, g = function (i, t, n, r) { var l = e.extend(a.getOutData({}, {}, p), { id: n, index: r }), o = { id: n, index: r, file: t, files: p }; return a.isUploadable ? a.showUploadError(i, l) : a.showError(i, o) }; if (a.reader = null, a.resetUpload(), a.hideFileIcon(), a.isUploadable && a.$container.find(".file-drop-zone ." + a.dropZoneTitleClass).remove(), c) for (r = []; p[f];) s = p[f], s.type || s.size % 4096 !== 0 ? r.push(s) : v++, f++; else r = void 0 === i.target.files ? i.target && i.target.value ? [{ name: i.target.value.replace(/^.+\\/, "") }] : [] : i.target.files; if (R(r) || 0 === r.length) return m || a.clear(), a.showFolderError(v), void a.raise("fileselectnone"); if (a.resetErrors(), o = a.isUploadable ? a.getFileStack().length + r.length : r.length, a.maxFileCount > 0 && o > a.maxFileCount) return l = a.msgFilesTooMany.replace("{m}", a.maxFileCount).replace("{n}", o), a.isError = g(l, null, null, null), a.$captionContainer.find(".kv-caption-icon").hide(), a.setCaption("", !0), a.setEllipsis(), void a.$container.removeClass("file-input-new file-input-ajax-new"); if (!m || u && h > 0) { if (a.hasInitialPreview()) { var w = t.out(a.id); d.html(w.content), a.setCaption(w.caption), a.initPreviewDeletes() } else a.clearPreview(); u && h > 0 && (a.filestack = []) } else !m || 0 !== h || t.count(a.id) && !a.overwriteInitial || (a.clearPreview(), a.filestack = []); a.isPreviewable ? a.readFiles(r) : a.updateFileDetails(1), a.showFolderError(v) }, validateImage: function (e, i) { var t, a, n, r, l = this, o = l.$preview, s = o.find("#" + i), d = "Untitled", c = s.find("img"); c.length && c.on("load", function () { a = s.width(), n = o.width(), a > n && (c.css("width", "100%"), s.css("width", "97%")), r = c.closest(".file-preview-frame").find(".file-caption-name"), r.length && (r.width(c.width()), d = r.text(), r.attr("title", d)), t = { ind: e, id: i }, l.checkDimensions(e, "Small", c, s, d, "Width", t), l.checkDimensions(e, "Small", c, s, d, "Height", t), l.checkDimensions(e, "Large", c, s, d, "Width", t), l.checkDimensions(e, "Large", c, s, d, "Height", t), l.raise("fileimageloaded", [i]), W.revokeObjectURL(c.attr("src")) }) }, checkDimensions: function (e, i, t, a, n, r, l) { var o, s, d, c, p = this, u = "Small" === i ? "min" : "max", f = p[u + "Image" + r]; !R(f) && t.length && (d = t[0], s = "Width" === r ? d.naturalWidth || d.width : d.naturalHeight || d.height, c = "Small" === i ? s >= f : f >= s, c || (o = p["msgImage" + r + i].replace("{name}", n).replace("{size}", f), p.showUploadError(o, l), p.setThumbStatus(a, "Error"), p.filestack[e] = null)) }, initCaption: function () { var e = this, i = e.initialCaption || ""; return e.overwriteInitial || R(i) ? (e.$caption.html(""), !1) : (e.setCaption(i), !0) }, setCaption: function (i, t) { var a, n, r = this; if (t) a = e("<div>" + r.msgValidationError + "</div>").text(), n = '<span class="' + r.msgValidationErrorClass + '">' + r.msgValidationErrorIcon + a + "</span>"; else { if (R(i) || 0 === r.$caption.length) return; a = e("<div>" + i + "</div>").text(), n = r.getLayoutTemplate("icon") + a } r.$caption.html(n), r.$caption.attr("title", a), r.$captionContainer.find(".file-caption-ellipsis").attr("title", a), r.setEllipsis() }, initBrowse: function (e) { var i = this; i.$btnFile = e.find(".btn-file"), i.$btnFile.append(i.$element) }, createContainer: function () { var i = this, t = e(document.createElement("span")).attr({ "class": "file-input file-input-new" }).html(i.renderMain()); return i.$element.before(t), i.initBrowse(t), t }, refreshContainer: function () { var e = this, i = e.$container; i.before(e.$element), i.html(e.renderMain()), e.initBrowse(i) }, renderMain: function () { var e = this, i = e.isUploadable && e.dropZoneEnabled ? " file-drop-zone" : "", t = e.showPreview ? e.getLayoutTemplate("preview").repl("{class}", e.previewClass).repl("{dropClass}", i) : "", a = e.isDisabled ? e.captionClass + " file-caption-disabled" : e.captionClass, n = e.captionTemplate.repl("{class}", a + " kv-fileinput-caption"); return e.mainTemplate.repl("{class}", e.mainClass).repl("{preview}", t).repl("{caption}", n).repl("{upload}", e.renderUpload()).repl("{remove}", e.renderRemove()).repl("{cancel}", e.renderCancel()).repl("{browse}", e.renderBrowse()) }, renderBrowse: function () { var e = this, i = e.browseClass + " btn-file", t = ""; return e.isDisabled && (t = " disabled "), '<div class="' + i + '"' + t + "> " + e.browseIcon + e.browseLabel + " </div>" }, renderRemove: function () { var e = this, i = e.removeClass + " fileinput-remove fileinput-remove-button", t = ""; return e.showRemove ? (e.isDisabled && (t = " disabled "), '<button type="button" title="' + e.removeTitle + '" class="' + i + '"' + t + ">" + e.removeIcon + e.removeLabel + "</button>") : "" }, renderCancel: function () { var e = this, i = e.cancelClass + " fileinput-cancel fileinput-cancel-button"; return e.showCancel ? '<button type="button" title="' + e.cancelTitle + '" class="hide ' + i + '">' + e.cancelIcon + e.cancelLabel + "</button>" : "" }, renderUpload: function () { var e = this, i = e.uploadClass + " kv-fileinput-upload fileinput-upload-button", t = "", a = ""; return e.showUpload ? (e.isDisabled && (a = " disabled "), t = !e.isUploadable || e.isDisabled ? '<button type="submit" title="' + e.uploadTitle + '"class="' + i + '"' + a + ">" + e.uploadIcon + e.uploadLabel + "</button>" : '<a href="' + e.uploadUrl + '" title="' + e.uploadTitle + '" class="' + i + '"' + a + ">" + e.uploadIcon + e.uploadLabel + "</a>") : "" }
                    //                }, e.fn.fileinput = function (t) { if (n() || i(9)) { var a = Array.apply(null, arguments); return a.shift(), this.each(function () { var i, n = e(this), r = n.data("fileinput"), l = "object" == typeof t && t, o = l.language || n.data("language") || "en"; r || (i = e.extend({}, e.fn.fileinput.defaults), "en" === o || R(e.fn.fileinputLocales[o]) || (i = e.extend(i, e.fn.fileinputLocales[o])), r = new _(this, e.extend(i, l, n.data())), n.data("fileinput", r)), "string" == typeof t && r[t].apply(r, a) }) } }, e.fn.fileinput.defaults = { language: "en", showCaption: !0, showPreview: !0, showRemove: !0, showUpload: !0, showCancel: !0, showUploadedThumbs: !0, mainClass: "", previewClass: "", captionClass: "", mainTemplate: null, initialCaption: "", initialPreview: [], initialPreviewDelimiter: "*$$*", initialPreviewConfig: [], initialPreviewThumbTags: [], previewThumbTags: {}, initialPreviewShowDelete: !0, deleteUrl: "", deleteExtraData: {}, overwriteInitial: !0, layoutTemplates: U, previewTemplates: j, allowedPreviewTypes: A, allowedPreviewMimeTypes: null, allowedFileTypes: null, allowedFileExtensions: null, customLayoutTags: {}, customPreviewTags: {}, previewSettings: L, fileTypeSettings: O, previewFileIcon: '<i class="glyphicon glyphicon-file"></i>', browseIcon: '<i class="glyphicon glyphicon-folder-open"></i> &nbsp;', browseClass: "btn btn-primary", removeIcon: '<i class="glyphicon glyphicon-trash"></i> ', removeClass: "btn btn-default", cancelIcon: '<i class="glyphicon glyphicon-ban-circle"></i> ', cancelClass: "btn btn-default", uploadIcon: '<i class="glyphicon glyphicon-upload"></i> ', uploadClass: "btn btn-default", uploadUrl: null, uploadAsync: !0, uploadExtraData: {}, minImageWidth: null, minImageHeight: null, maxImageWidth: null, maxImageHeight: null, maxFileSize: 0, minFileCount: 0, maxFileCount: 0, msgValidationErrorClass: "text-danger", msgValidationErrorIcon: '<i class="glyphicon glyphicon-exclamation-sign"></i> ', msgErrorClass: "file-error-message", progressClass: "progress-bar progress-bar-success progress-bar-striped active", progressCompleteClass: "progress-bar progress-bar-success", previewFileType: "image", wrapTextLength: 250, wrapIndicator: ' <span class="wrap-indicator" title="{title}" onclick="{dialog}">[&hellip;]</span>', elCaptionContainer: null, elCaptionText: null, elPreviewContainer: null, elPreviewImage: null, elPreviewStatus: null, elErrorContainer: null, slugCallback: null, dropZoneEnabled: !0, dropZoneTitleClass: "file-drop-zone-title", fileActionSettings: {}, otherActionButtons: "", textEncoding: "UTF-8", ajaxSettings: {}, ajaxDeleteSettings: {}, showAjaxErrorDetails: !0 }, e.fn.fileinputLocales.en = { fileSingle: "file", filePlural: "files", browseLabel: "Browse &hellip;", removeLabel: "Remove", removeTitle: "Clear selected files", cancelLabel: "Cancel", cancelTitle: "Abort ongoing upload", uploadLabel: "Upload", uploadTitle: "Upload selected files", msgSizeTooLarge: 'File "{name}" (<b>{size} KB</b>) exceeds maximum allowed upload size of <b>{maxSize} KB</b>. Please retry your upload!', msgFilesTooLess: "You must select at least <b>{n}</b> {files} to upload. Please retry your upload!", msgFilesTooMany: "Number of files selected for upload <b>({n})</b> exceeds maximum allowed limit of <b>{m}</b>. Please retry your upload!", msgFileNotFound: 'File "{name}" not found!', msgFileSecured: 'Security restrictions prevent reading the file "{name}".', msgFileNotReadable: 'File "{name}" is not readable.', msgFilePreviewAborted: 'File preview aborted for "{name}".', msgFilePreviewError: 'An error occurred while reading the file "{name}".', msgInvalidFileType: 'Invalid type for file "{name}". Only "{types}" files are supported.', msgInvalidFileExtension: 'Invalid extension for file "{name}". Only "{extensions}" files are supported.', msgValidationError: "File Upload Error", msgLoading: "Loading file {index} of {files} &hellip;", msgProgress: "Loading file {index} of {files} - {name} - {percent}% completed.", msgSelected: "{n} {files} selected", msgFoldersNotAllowed: "Drag & drop files only! {n} folder(s) dropped were skipped.", msgImageWidthSmall: 'Width of image file "{name}" must be at least {size} px.', msgImageHeightSmall: 'Height of image file "{name}" must be at least {size} px.', msgImageWidthLarge: 'Width of image file "{name}" cannot exceed {size} px.', msgImageHeightLarge: 'Height of image file "{name}" cannot exceed {size} px.', dropZoneTitle: " " }, e.extend(e.fn.fileinput.defaults, e.fn.fileinputLocales.en), e.fn.fileinput.Constructor = _, e(document).ready(function () { var i = e("input.file[type=file]"); i.length && i.fileinput() })
                    //            }(window.jQuery);
                    //            //  }

                    //            //$(".openPopupUpload").show();

                    //        }
                    //        else {
                    //            //alert(FileCount);

                    //            for (var i = 0; i <= lcount - 1; i++)
                    //                if (FileCount == i)
                    //                { $("#" + FileCount).css("display", "block"); }
                    //                else {
                    //                    $("#" + i).css("display", "none");
                    //                }
                    //        }
                    //    }

                    //    FileCount++;

                    //});


                },
                error: function (data) {
                    alert("hii");
                }

            });

        }

        //$(sou).attr('src', soua);
        $("#editPopUp").css('display', 'block');
        $("#editPopUp").css('position', 'fixed');
        $("#editPopUp").css('width', '722px');
        $("#editPopUp").css('height', 'auto');
        $("#editPopUp").css('top', '10%');
        $("#editPopUp").css('left', '25%');
        $("#editPopUp").css('background-color', '#fff');
        $("#editPopUp").css('z-index', '9999');
        $("#cover").css('display', 'block')
        $("#cover").css('position', 'fixed');
        $("#cover").css('width', '100%');
        $("#cover").css('height', '100%');
        $("#cover").css('top', '0');
        $("#cover").css('left', '0');
        $("#cover").css('background', 'rgba(0,0,0,0.5)');
        $("#cover").css('z-index', '999');
        //alert($(".dialog1").attr('id'));
        //$("#dialog").dialog({
        //    width: 1000,
        //    height: 300,
        //    modal: true,
        //});

        //alert($('#' + id).closest('tr').find('.form - group').html());
        $(".save").click(function () {
            $("#divImages").empty();


        })
    }


    //function RemoveImage(id) {
    //    var ProductID = id.id.split('$')[0];
    //    var ColorID = id.id.split('$')[1];
    //    var ImagePath = id.id.split('$')[2];
    //    $.ajax({
    //        url: "/ProductUploadTemp/ImagesRemove",
    //        type: "POST",
    //        dataType: "json",
    //        data: { 'ProductID': ProductID, 'ColorID': ColorID, 'ImagePath': ImagePath },
    //        success: function (data) {
    //            //alert(data);
    //            // $("#dialog").empty();
    //            $(".editPopUp #divImages").empty();
    //            // $("#divImages").load(location.href + "#divImages");
    //            $.each(data, function (index, item) {
    //                // alert(item);
    //                //alert("aaa");
    //                $("#divImages").append(
    //                    "<img src=" + item + " style='width:167px; height:167px; float: left; margin-bottom:4px;' >" +

    //                   "<input name='submit' type='submit' id='" + ProductID + "$" + ColorID + "$" + item + "' class='btn btn-dark-gray remove' onclick='RemoveImage(this)' style='margin-left:-24px'  />"


    //          );
    //                //$(".remove").each(function (i) {
    //                //    $(this).attr('value', 'Remove$' + (i + 0));
    //                //})


    //            });




    //        },
    //        error: function (data) {
    //            alert("hiiii");
    //        }

    //    });
    //}

</script>
<script>
    $(function () {
        $("#editPopUp .okClose").click(function () {
            // alert("1");
            $("#editPopUp").css('display', 'none');
            $("#cover").css('display', 'none')
            $("#divImages").empty();
        });
    });
</script>
<script type="text/javascript">

    $("#file-1").fileinput({
        uploadUrl: '#', // you must set a valid URL here else you will get an error
        allowedFileExtensions: ['jpg', 'png', 'gif'],
        overwriteInitial: false,
        maxFileSize: 1000,
        maxFilesNum: 10,
        //allowedFileTypes: ['image', 'video', 'flash'],
        slugCallback: function (filename) {
            return filename.replace('(', '_').replace(']', '_');
        }
    });
</script>

<script>


        @* =======dropdown for category *@
    $("select#CategoryID").bind('change', function () {
        $('#ddlCategorySecondID').empty();
        $('#ddlCategoryFirstID').empty();
        var categoryid = $("select#CategoryID option:selected").val();
        // alert(categoryid);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSecondLevelCategory", "ProductUploadAproved")',
            data: { 'categoryID': categoryid },
            //dataType: "json",
            cache: false,
            success: function (data) {
                onSuccessBindSubCategory(data);

            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });

    });

    function onSuccessBindSubCategory(data) {
        var ID = 0;
        $.each(data, function (index, item) {
            ID = item.ID;
            $('#ddlCategorySecondID').append('<option value=' + item.ID + '>' + item.Name + '</option>');
        });

        GetThirdLevelCategory(ID);
    }

    function GetThirdLevelCategory(ID) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetFirstLevelCategory", "ProductUploadAproved")',
            data: { 'categoryID': ID },
            //dataType: "json",
            cache: false,
            success: function (data) {
                //alert(data);
                $.each(data, function (index, item) {
                    $('#ddlCategoryFirstID').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                });
            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });
    }

    @*$("select#CategoryLevel0").bind('change', function () {

        var categoryid = $("select#CategoryLevel0 option:selected").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetCategoryLevel1ByParentCategory", "ProductUploadTemp")',
            data: { 'categoryID': categoryid },
            //dataType: "json",
            cache: false,
            success: function (msg) {
                $('#ddlCategoryLevel1').empty();
                $('#ddlCategoryLevel2').empty();
                $('#ddlProduct').empty();
                $('#ddlCategoryLevel1').append('<option value=0>--Select--</option>');
                $('#ddlCategoryLevel2').append('<option value=0>--Select--</option>');
                $('#ddlProduct').append('<option value=0>--Select--</option>');
                $.each(msg, function (index, item) {
                    $('#ddlCategoryLevel1').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                });
            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });*@

    //}
    // });

    @*$("select#ddlCategoryLevel1").bind('change', function () {

        var categoryid = $("select#ddlCategoryLevel1 option:selected").val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetCategoryLevel2ByCategoryLevel1", "ProductUploadTemp")',
            data: { 'categoryID': categoryid },
            //dataType: "json",
            cache: false,
            success: function (msg) {
                $('#ddlCategoryLevel2').empty();
                $('#ddlProduct').empty();
                $('#ddlCategoryLevel2').append('<option value=0>--Select--</option>');
                $('#ddlProduct').append('<option value=0>--Select--</option>');
                $.each(msg, function (index, item) {
                    $('#ddlCategoryLevel2').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                });
            },
            error: function (x, e) {
                //alert('Failure');
                //alert("The call to the server side failed. " + x.responseText);
            }
        });

        //}
    });*@
</script>

<script>
    //function uploadFile() {
    //    //alert("bbb");
    //    var flagMRP = false;
    //    var flagQty = false;
    //    var i = 0;
    //    $("#dataTable tr:gt(0)").each(function () {
    //        var a = "NewProductVarientS_";

    //        var b = i;

    //        var c = "__Qty";
    //        var d = "__ReorderLevel";
    //        var e = "__MRP";
    //        var f = "__RetailerRate";

    //        var Quan = a + b + c;

    //        var Reord = a + b + d;
    //        var Mrp = a + b + e;
    //        var Sale = a + b + f;
    //        //alert(Quan);
    //        var Quantity = $(this).closest('tr').find('#' + Quan).val();

    //        var ReorderLevel = $(this).closest('tr').find('#' + Reord).val();

    //        var MRP = $(this).closest('tr').find('#' + Mrp).val();

    //        var SaleRate = $(this).closest('tr').find('#' + Sale).val();

    //        if (parseInt(ReorderLevel) > parseInt(Quantity)) {
    //            flagQty = true;
    //        }
    //        if (parseFloat(SaleRate) > parseFloat(MRP)) {
    //            flagMRP = true;
    //        }
    //        i++;

    //    });

    //    if (flagQty == true && flagMRP == true) {
    //        alert('Quantity should be greater than or equal Reorder Level');
    //        alert('MRP should be greater than or equal Sale Rate');
    //        return false;
    //    }

    //    else if (flagQty == true) {
    //        alert('Quantity should be greater than or equal Reorder Level');
    //        return false;

    //    }
    //    else if (flagMRP == true) {
    //        alert('MRP should be greater than or equal Sale Rate');
    //        return false;
    //    }

    //    var filename = $('#Files').val();
    //    if (filename == '') {
    //        //Show error message or alert('please choose file');
    //        //alert('please choose Image');
    //        //return false;
    //        return true;
    //    }
    //    else {
    //        //var Re = /^(([a-zA-Z]:)|(\\{2}\w+)\$?)(\\(\w[\w].*))+(.jpeg|.JPEG|.jpg|.gif|.GIF|.png|.PNG|.JPG)$/;
    //        var Re = /^.*\.(jpg|JPG|png|PNG)$/;
    //        //if (Re.test(filename) == false) {
    //        //    alert('Please select valid Image');
    //        //    return false;
    //        //}
    //        return true;
    //    }


    //}

    function uploadFile() {
        //--------------------------------------------------------------------------------------
        var Variantlist = new Array();
        var Size = $(this).closest('tr').find('#NewProductVarientS_0__SizeID').val();
        var Diamention = $(this).closest('tr').find('#NewProductVarientS_0__DimensionID').val();
        var Material = $(this).closest('tr').find('#NewProductVarientS_0__MaterialID').val();
        //--------------------------------------------------------------------------------------
        var flagMRP = false;
        var flagQty = false;
        var flagColSizeDimMat = false;
        var flagtempColSizeDimMat = false;
        var flagImage = false;

        var flagMRPZero = false;
        var flagSaleRateZero = false;
        var flagPackSizeZero = false;
        var flagQtyZero = false;
        var flagReorderLevelZero = false;

        var tempColSizeDimMat = "";
        var ColSizeDimMat = "";
        var VarientCount = 0;
        var NewVarientCount = 0;
        var k = 0;
        $("#dataTable tr:gt(0)").each(function () {
            var b = k;
            var g = "IsSelect";
            var e = "Active";
            var Varient = g + b;
            var NewVarient = e + b;
            var Color = $(this).closest('tr').find('#Color_' + k).val();
            var Size = $(this).closest('tr').find('#NewProductVarientS_' + k + '__SizeID').val();
            var Diamention = $(this).closest('tr').find('#NewProductVarientS_' + k + '__DimensionID').val();
            var Material = $(this).closest('tr').find('#NewProductVarientS_' + k + '__MaterialID').val();

            var Quantity = $(this).closest('tr').find('#NewProductVarientS_' + k + '__Qty').val();
            var ReorderLevel = $(this).closest('tr').find('#NewProductVarientS_' + k + '__ReorderLevel').val();
            var MRP = $(this).closest('tr').find('#NewProductVarientS_' + k + '__MRP').val();
            var SaleRate = $(this).closest('tr').find('#NewProductVarientS_' + k + '__RetailerRate').val();

            //========================================================
            var PackSize = $(this).closest('tr').find('#NewProductVarientS_' + k + '__PackSize').val();

            ColSizeDimMat = Color + "$" + Size + "$" + Diamention + "$" + Material;
            Variantlist.push(ColSizeDimMat);

            //if (PackSize == null || PackSize == "" || PackSize <= 0 || PackSize == 'undefined') {
            //    //alert('PackSize should be greater than 0');
            //    flagPackSizeZero = true;
            //    //event.preventDefault();
            //    //return false;
            //}
            //if (Quantity == null || Quantity == "" || Quantity <= 0) {
            //    //alert('Quantity should be greater than 0');
            //    flagQtyZero = true;
            //    //event.preventDefault();
            //}
            //if (ReorderLevel == null || ReorderLevel == "" || ReorderLevel <= 0) {
            //    //alert('ReorderLevel should be greater than 0');
            //    flagReorderLevelZero = true;
            //    //event.preventDefault();
            //}
            //if (MRP == null || MRP == "" || MRP <= 0) {
            //    //alert('MRP should be greater than 0');
            //    flagMRPZero = true;
            //    //event.preventDefault();
            //}
            //if (SaleRate == null || SaleRate == "" || SaleRate <= 0) {
            //    // alert('SaleRate should be greater than 0');
            //    flagSaleRateZero = true;
            //    //event.preventDefault();
            //}
            if (Color > 1 || Size > 1 || Diamention > 1 || Material > 1) {
                flagColSizeDimMat = true;
            }
            else {
                flagColSizeDimMat = false;
            }
            if (Color > 1) {

            }
            if (parseInt(ReorderLevel) > parseInt(Quantity)) {
                flagQty = true;
            }
            if (parseFloat(SaleRate) > parseFloat(MRP)) {
                flagMRP = true;
            }
            if ($(this).closest('tr').find('#' + Varient).prop("checked")) {
                // it is checked
                VarientCount++;
                if (PackSize == null || PackSize == "" || PackSize <= 0 || PackSize == 'undefined') {
                    flagPackSizeZero = true;
                }
                if (Quantity == null || Quantity == "" || Quantity <= 0) {
                    flagQtyZero = true;
                }
                if (ReorderLevel == null || ReorderLevel == "" || ReorderLevel <= 0) {
                    flagReorderLevelZero = true;
                }
                if (MRP == null || MRP == "" || MRP <= 0) {
                    flagMRPZero = true;
                }
                if (SaleRate == null || SaleRate == "" || SaleRate <= 0) {
                    flagSaleRateZero = true;
                }
            }

            if ($(this).closest('tr').find('#' + NewVarient).prop("checked")) {
                // it is checked
                NewVarientCount++;
                if (PackSize == null || PackSize == "" || PackSize <= 0 || PackSize == 'undefined') {
                    flagPackSizeZero = true;
                }
                if (Quantity == null || Quantity == "" || Quantity <= 0) {
                    flagQtyZero = true;
                }
                if (ReorderLevel == null || ReorderLevel == "" || ReorderLevel <= 0) {
                    flagReorderLevelZero = true;
                }
                if (MRP == null || MRP == "" || MRP <= 0) {
                    flagMRPZero = true;
                }
                if (SaleRate == null || SaleRate == "" || SaleRate <= 0) {
                    flagSaleRateZero = true;
                }
            }
           

            k++;
        });
        var recipientsArray = Variantlist.sort();
        var reportRecipientsDuplicate = [];
        for (var i = 0; i < recipientsArray.length - 1; i++) {
            if (recipientsArray[i + 1] == recipientsArray[i]) {
                flagtempColSizeDimMat = true;
            }
        }
        if (flagtempColSizeDimMat == true) {
            alert('Variant duplication occurs.Please Change');
            return false;
        }
        if (flagColSizeDimMat == false) {
            alert('Please select atleast one variant from size, color, dimension and material.');
            return false;
        }
        if (ColSizeDimMat == tempColSizeDimMat) {
            alert('Please select');
            return false;
        }
        if (flagQty == true && flagMRP == true) {
            alert('Quantity should be greater than or equal Reorder Level');
            alert('MRP should be greater than or equal Sale Rate');
            return false;
        }

        else if (flagQty == true) {
            alert('Quantity should be greater than or equal Reorder Level');
            return false;

        }
        else if (flagMRP == true) {
            alert('MRP should be greater than or equal Sale Rate');
            return false;
        }
        else if (VarientCount == 0 && NewVarientCount == 0) {
            alert('Select at least one variant');
            return false;
        }
        else if (flagPackSizeZero == true)
        {
            alert('PackSize should be greater than 0');
            event.preventDefault();
        }
        else if (flagQtyZero==true) {
            alert('Quantity should be greater than 0');
            event.preventDefault();
        }
        else if (flagReorderLevelZero == true) {
            alert('ReorderLevel should be greater than 0');
            event.preventDefault();
        }
        else if (flagMRPZero == true) {
            alert('MRP should be greater than 0');
            event.preventDefault();
        }
        else if (flagSaleRateZero == true) {
            alert('SaleRate should be greater than 0');
            event.preventDefault();
        }
        // var fileNme = $('.file').attr('id');
        // var filename = $('.file').val();
        //// alert(fileNme);
        // alert(filename);
        var $uploads = $('input.file');

        if (flagImage == true) {
            return false;
        }

    }


</script>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
<script language="javascript">
    $(document).ready(function () {

        /////////////////////////////////// specification script /////////////////////////////////


        /////////////////////// specification load //////////////////////////////////////////////////


        $("#Catspecification").empty();
        /* Get the selected value of dropdownlist */
        var selectedID = $("#ProductID").val();

        // alert("On Load Down");

        $.ajax({
            type: 'POST',

            url: "/ProductUploadAproved/ProductSpecification?productID=" + selectedID,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            cache: false,
            success: function (data) {
                // $.each(data, function (index, item) {
                //     $("#Catspecification").append("<li>" +
                //         "<div>" +
                //         "<input type='hidden' value='" + item.SpecificationID + "' name='CategorySpecificationList[" + index + "].SpecificationID' />" +
                //         "<input type='hidden' value='" + item.level + "' name='CategorySpecificationList[" + index + "].level' />" +
                //         "<input type='hidden' value='" + item.ParentID + "' name='CategorySpecificationList[" + index + "].ParentID' />" + "</div>" +
                //         "<lable>" + item.SpecificationName + "</lable>" +
                //         "<div>" + "<input type='text' value='" + item.SpecificationValue + "' name='CategorySpecificationList[" + index + "].SpecificationValue' />" + "</div>" +
                //         "</li>"
                //);
                // });
                $.each(data, function (index, item) {

                    if (item.ParentID == 0) {
                        //  alert(item.SpecificationName)
                        $("#Catspecification").append("<li style='display:block;'>" +
                                "<div style='font-weight:bold;'>" +
                                 "<input type='hidden' value='" + item.SpecificationID + "' name='CategorySpecificationList[" + index + "].SpecificationID' />" +
                                    "<input type='hidden' value='" + item.level + "' name='CategorySpecificationList[" + index + "].level' />" +
                                    "<input type='hidden' value='" + item.ParentID + "' name='CategorySpecificationList[" + index + "].ParentID' />" + "</div>" +
                                    "<div style='font-weight:bold;'>" + item.SpecificationName + "</div>" +
                                    "<div style='display:none;'>" + "<input type='text' value='" + item.SpecificationValue + "' name='CategorySpecificationList[" + index + "].SpecificationValue' />" + "</div>" +

                                "</li>"
                                );
                    }
                    else {
                        $("#Catspecification").append("<li>" +
                            "<div>" +
                            "<input type='hidden' value='" + item.SpecificationID + "' name='CategorySpecificationList[" + index + "].SpecificationID' />" +
                            "<input type='hidden' value='" + item.level + "' name='CategorySpecificationList[" + index + "].level' />" +
                            "<input type='hidden' value='" + item.ParentID + "' name='CategorySpecificationList[" + index + "].ParentID' />" + "</div>" +
                            "<div>" + item.SpecificationName + "</div>" +
                            "<div>" + "<input type='text' value='" + item.SpecificationValue + "' name='CategorySpecificationList[" + index + "].SpecificationValue' />" + "</div>" +
                            "</li>"
                            );
                    }
                });
            },
            error: function (data) {
                alert("Can't Get Category Specifcation Data!!!");
            }
        });




        //////////////////////////////////////////////////////////////////////////////////////////





        //////////////////////////////////////specification change ////////////////////////////////

        $("#CategoryID").change(function () {
            $("#Catspecification").empty();
            /* Get the selected value of dropdownlist */
            var selectedID = $(this).val();
            //  alert("On Change");
            var productID = $("#ProductID").val();
            $.ajax({
                type: 'POST',

                url: '/ProductUploadAproved/SpecificationList?categoryID=' + selectedID + '&productID=' + productID,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                cache: false,
                success: function (data) {

                    // $.each(data, function (index, item) {
                    //     $("#Catspecification").append("<li>" +
                    //         "<div>" +
                    //         "<input type='hidden' value='" + item.SpecificationID + "' name='CategorySpecificationList[" + index + "].SpecificationID' />" +
                    //         "<input type='hidden' value='" + item.level + "' name='CategorySpecificationList[" + index + "].level' />" +
                    //         "<input type='hidden' value='" + item.ParentID + "' name='CategorySpecificationList[" + index + "].ParentID' />" + "</div>" +
                    //         "<div>" + item.SpecificationName + "</div>" +
                    //         "<div>" + "<input type='text' value='" + item.SpecificationValue + "' name='CategorySpecificationList[" + index + "].SpecificationValue' />" + "</div>" +
                    //         "</li>"
                    //);
                    // });
                    $.each(data, function (index, item) {

                        if (item.ParentID == 0) {
                            //  alert(item.SpecificationName)
                            $("#Catspecification").append("<li style='display:block;'>" +
                                    "<div style='font-weight:bold;'>" +
                                     "<input type='hidden' value='" + item.SpecificationID + "' name='CategorySpecificationList[" + index + "].SpecificationID' />" +
                                        "<input type='hidden' value='" + item.level + "' name='CategorySpecificationList[" + index + "].level' />" +
                                        "<input type='hidden' value='" + item.ParentID + "' name='CategorySpecificationList[" + index + "].ParentID' />" + "</div>" +
                                        "<div style='font-weight:bold;'>" + item.SpecificationName + "</div>" +
                                        "<div style='display:none;'>" + "<input type='text' value='" + item.SpecificationValue + "' name='CategorySpecificationList[" + index + "].SpecificationValue' />" + "</div>" +

                                    "</li>"
                                    );
                        }
                        else {
                            $("#Catspecification").append("<li>" +
                                "<div>" +
                                "<input type='hidden' value='" + item.SpecificationID + "' name='CategorySpecificationList[" + index + "].SpecificationID' />" +
                                "<input type='hidden' value='" + item.level + "' name='CategorySpecificationList[" + index + "].level' />" +
                                "<input type='hidden' value='" + item.ParentID + "' name='CategorySpecificationList[" + index + "].ParentID' />" + "</div>" +
                                "<div>" + item.SpecificationName + "</div>" +
                                "<div>" + "<input type='text' value='" + item.SpecificationValue + "' name='CategorySpecificationList[" + index + "].SpecificationValue' />" + "</div>" +
                                "</li>"
                                );
                        }
                    });

                },
                error: function (data) {
                    alert("Can't Get Category Specifcation Data!!!");
                }
            });
        });


        /////////////////////////////////////////////////////////////////


        //1. Add new row
        //$("#addNew").click(function (e) {

        //    e.preventDefault();
        //    var $tableBody = $("#dataTable");
        //    var $trLast = $tableBody.find("tr:last");
        //    var $trNew = $trLast.clone();

        //    var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
        //    var $newIn = $trNew.find('img');
        //    //alert($newIn);
        //    $newIn.attr('id', 'img_1');
        //    $newIn.attr('alt', 'BROWSE');
        //    $newIn.attr('src', '');

        //    $trNew.find("td:last").html('<a href="#" class="remove"><img src="/Content/img/remove-icon.png" /></a>');



        //    $.each($trNew.find(':input'), function (i, val) {
        //        // Replaced Name
        //        var oldN = $(this).attr('name');
        //        var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
        //        $(this).attr('name', newN);
        //        //    //Replaced value

        //        //var type = $(this).attr('type');
        //        // if (type.toLowerCase() == "text") {
        //        //    $(this).attr('value', '');
        //        //}
        //        //else if{
        //        $(this).attr('value', '');
        //    });
        //    $trLast.after($trNew);

        //    // Re-assign Validation
        //    var form = $("form")
        //        .removeData("validator")
        //        .removeData("unobtrusiveValidation");
        //    $.validator.unobtrusive.parse(form);
        //});

        $('#dataTable tr:gt(0)').each(function () {
            var rowID = $(this).attr('id').split('_')[1];
            var CompareColorId = $("#Color_" + rowID).val();

            $('#dataTable tr:gt(' + (parseInt(rowID) + 1) + ')').each(function () {
                var rowID1 = $(this).attr('id').split('_')[1];
                var imgID = $(this).closest('tr').find('.addProduct');
                var rowColorId = $(this).closest('tr').find('.addProduct').attr('id').split('$')[0];
                if (CompareColorId == rowColorId) {
                    $(imgID).css('display', 'none');
                    $(imgID).attr("src", "");
                    $('#divPreview_' + rowID1).css('pointer-events', 'none');
                }
                else {
                    $(imgID).css('display', 'block');
                    $('#divPreview_' + rowID1).css('pointer-events', 'visible');
                }
            });
            rowID++;

        });
        //$('.trMain-createId').each(function (i) {
        //    alert($(this).id);

        //    //EnableDisableImageCtrl($('#Color_' + i), $('#Color_' + i).attr('id'));
        //});

        $("#addNew").click(function (e) {

            e.preventDefault();
            var $tableBody = $("#dataTable");
            var $trLast = $tableBody.find("tr:last");
            var $trNew = $trLast.clone();

            var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
            $trNew.find("td:nth-child(3)").attr('id', 'divPreview_' + (parseInt(suffix) + 1));
            $trNew.find("td:nth-child(3)").css('pointer-events', 'none');

            $trNew.find('td:last').html("<div id='editPopUp' class='editPopUp' title='Images' style='display:none'>" +
                                        "<h2 class='selectImg'>" + "Select Images" +
                                        "<span class='okClose'>X</span>" +
                                        "</h2>" +
                                        "<div class='popupInner'>" +
                                               "<div class='openPopupUpload'>" +
                                               //"<div class='kv-main'>"+
                                              "<div class='form-group input-group mainInput'>" +
                                              "<input id='img_' name='files_' class='file' type='file' multiple='multiple' data-preview-file-type='any' data-upload-url='#' onchange='readURL1(this,this.id);' />" +
                                               //"<a href='#' id='save' class='save'>OK</a>" +
                                              // "</div>"+
                                               "</div>" +
                                               "</div>" +
                                               "</div>" +
                                               "</div>" +
                                               "<div id='cover'></div>");
            $trNew.find("td.img_div").html("<img src='' id='img_' class='addProduct' alt='BROWSE' width='60' height='45' style='display:none;' onerror='this.src='../../Content/img/No_thumbnail.png'' />");
            $trNew.find("td:nth-child(15)").html('<a href="#" class="remove"><img src="../../Content/img/remove-icon.png"/></a>');
            var $newIn = $trNew.find('input.file');
            var $newIMG = $trNew.find('img.addProduct');
            var $newLink = $trNew.find('a.addProduct');
            var newColor = $trNew.find("td:nth-child(4)");
            $(newColor).find('select').attr('id', 'Color_' + (parseInt(suffix) + 1));
            var newSize = $trNew.find("td:nth-child(5)");
            $(newSize).find('select').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__SizeID');

            var newDimension = $trNew.find("td:nth-child(6)");
            $(newDimension).find('select').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__DimensionID');

            var newMaterial = $trNew.find("td:nth-child(7)");
            $(newMaterial).find('select').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__MaterialID');

            var newPacksize = $trNew.find("td:nth-child(8)");
            $(newPacksize).find('input').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__PackSize');
            var newQuantity = $trNew.find("td:nth-child(9)");
            $(newQuantity).find('input').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__Qty');
            var newReorderLevel = $trNew.find("td:nth-child(10)");
            $(newReorderLevel).find('input').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__ReorderLevel');
            var newMRP = $trNew.find("td:nth-child(12)");
            $(newMRP).find('input').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__MRP');
            var newSaleRate = $trNew.find("td:nth-child(13)");
            $(newSaleRate).find('input').attr('id', 'NewProductVarientS_' + (parseInt(suffix) + 1) + '__RetailerRate');
            

            var $select = $trNew.find('td select');
            var $checkBox = $trNew.find('td:first-child input');
            $($select).css('pointer-events', 'visible');
            $checkBox.attr('checked', 'checked');
            $checkBox.css('pointer-events', 'none');
            $('.trMain-createId').each(function (i) {
                //alert(i);
                $newIMG.attr('id', 'img_' + (i + 1));
                $trNew.attr('id', 'MainTr_' + (i + 1));
                $newIn.attr('id', 'img_' + (i + 1));
                $newIn.attr('name', 'files_' + (i + 1));
                $newLink.attr('id', 'img_' + (i + 1));
                $checkBox.attr('id', 'Active' + (i + 1));


            });
            //$(".kv-main").css("display", "block");

            $.each($trNew.find(':input'), function (i, val) {
                // Replaced Name
                var oldN = $(this).attr('name');
                var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                $(this).attr('name', newN);
                //    //Replaced value

                //var type = $(this).attr('type');
                // if (type.toLowerCase() == "text") {
                //    $(this).attr('value', '');
                //}
                //else if{
                $(this).attr('value', '');
            });
            $trLast.after($trNew);

            // Re-assign Validation
            var form = $("form")
                .removeData("validator")
                .removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse(form);


        });

        // 2. Remove
        $('td img.addProduct').live("click", function (e) {
            e.preventDefault();
            $(this).closest('tr').find('td:last div.editPopUp').css('display', 'block');
            $(this).closest('tr').find('td:last div.editPopUp .kv-main').remove();

            !function (e) {
                "use strict"; e.fn.fileinputLocales = {}, String.prototype.repl = function (e, i) { return this.split(e).join(i) }; var i = function (e) { var i, t = document.createElement("div"); return t.innerHTML = "<!--[if IE " + e + "]><i></i><![endif]-->", i = 1 === t.getElementsByTagName("i").length, document.body.appendChild(t), t.parentNode.removeChild(t), i }, t = { data: {}, init: function (e) { var i = e.initialPreview, a = e.id; i.length > 0 && !z(i) && (i = i.split(e.initialPreviewDelimiter)), t.data[a] = { content: i, config: e.initialPreviewConfig, tags: e.initialPreviewThumbTags, delimiter: e.initialPreviewDelimiter, template: e.previewGenericTemplate, msg: function (i) { return e.getMsgSelected(i) }, initId: e.previewInitId, footer: e.getLayoutTemplate("footer"), isDelete: e.initialPreviewShowDelete, caption: e.initialCaption, actions: function (i, t, a, n, r) { return e.renderFileActions(i, t, a, n, r) } } }, fetch: function (e) { return t.data[e].content.filter(function (e) { return null !== e }) }, count: function (e, i) { return t.data[e] && t.data[e].content ? i ? t.data[e].content.length : t.fetch(e).length : 0 }, get: function (i, a, n) { var r, l, o = "init_" + a, s = t.data[i], d = s.config[a], c = s.initId + "-" + o, p = " file-preview-initial"; return n = void 0 === n ? !0 : n, null === s.content[a] ? "" : (R(d) || R(d.frameClass) || (p += " " + d.frameClass), r = s.template.repl("{previewId}", c).repl("{frameClass}", p).repl("{fileindex}", o).repl("{content}", s.content[a]).repl("{footer}", t.footer(i, a, n)), s.tags.length && s.tags[a] && (r = H(r, s.tags[a])), R(d) || R(d.frameAttr) || (l = e(document.createElement("div")).html(r), l.find(".file-preview-initial").attr(d.frameAttr), r = l.html(), l.remove()), r) }, add: function (i, a, n, r, l) { var o, s = e.extend(!0, {}, t.data[i]); return z(a) || (a = a.split(s.delimiter)), l ? (o = s.content.push(a) - 1, s.config[o] = n, s.tags[o] = r) : (o = a.length, s.content = a, s.config = n, s.tags = r), t.data[i] = s, o }, set: function (i, a, n, r, l) { var o, s = e.extend(!0, {}, t.data[i]); if (z(a) || (a = a.split(s.delimiter)), l) { for (o = 0; o < a.length; o++) s.content.push(a[o]); for (o = 0; o < n.length; o++) s.config.push(n[o]); for (o = 0; o < r.length; o++) s.tags.push(r[o]) } else s.content = a, s.config = n, s.tags = r; t.data[i] = s }, unset: function (e, i) { var a = t.count(e); if (a) { if (1 === a) return t.data[e].content = [], void (t.data[e].config = []); t.data[e].content[i] = null, t.data[e].config[i] = null } }, out: function (e) { var i, a = "", n = t.data[e], r = t.count(e, !0); if (0 === r) return { content: "", caption: "" }; for (var l = 0; r > l; l++) a += t.get(e, l); return i = n.msg(t.count(e)), { content: a, caption: i } }, footer: function (e, i, a) { var n = t.data[e]; if (a = void 0 === a ? !0 : a, 0 === n.config.length || R(n.config[i])) return ""; var r = n.config[i], l = M("caption", r) ? r.caption : "", o = M("width", r) ? r.width : "auto", s = M("url", r) ? r.url : !1, d = M("key", r) ? r.key : null, c = s === !1 && a, p = n.isDelete ? n.actions(!1, !0, c, s, d) : "", u = n.footer.repl("{actions}", p); return u.repl("{caption}", l).repl("{width}", o).repl("{indicator}", "").repl("{indicatorTitle}", "") } }, a = function (e, i) { return i = i || 0, "number" == typeof e ? e : ("string" == typeof e && (e = parseFloat(e)), isNaN(e) ? i : e) }, n = function () { return window.File && window.FileReader }, r = function () { var e = document.createElement("div"); return !i(9) && (void 0 !== e.draggable || void 0 !== e.ondragstart && void 0 !== e.ondrop) }, l = function () { return n() && window.FormData }, o = function (e, i) { e.removeClass(i).addClass(i) }, s = 'style="width:{width};height:{height};"', d = '      <param name="controller" value="true" />\n      <param name="allowFullScreen" value="true" />\n      <param name="allowScriptAccess" value="always" />\n      <param name="autoPlay" value="false" />\n      <param name="autoStart" value="false" />\n      <param name="quality" value="high" />\n', c = '<div class="file-preview-other">\n       {previewFileIcon}\n   </div>', p = { removeIcon: '<i class="glyphicon glyphicon-trash text-danger"></i>', removeClass: " btn-xs ", removeTitle: "Remove file", uploadIcon: '<i class="glyphicon glyphicon-upload text-info"></i>', uploadClass: "btn btn-xs btn-default", uploadTitle: "Upload file", indicatorNew: '<i class="glyphicon glyphicon-hand-down text-warning"></i>', indicatorSuccess: '<i class="glyphicon glyphicon-ok-sign file-icon-large text-success"></i>', indicatorError: '<i class="glyphicon glyphicon-exclamation-sign text-danger"></i>', indicatorLoading: '<i class="glyphicon glyphicon-hand-up text-muted"></i>', indicatorNewTitle: "Not uploaded yet", indicatorSuccessTitle: "Uploaded", indicatorErrorTitle: "Upload Error", indicatorLoadingTitle: "Uploading ..." }, u = '{preview}\n<div class="kv-upload-progress hide"></div>\n<div class="input-group {class}">\n   {caption}\n   <div class="input-group-btn">\n       {remove}\n       {cancel}\n       {upload}\n       {browse}\n   </div>\n</div>', f = '{preview}\n<div class="kv-upload-progress hide"></div>\n{remove}\n{cancel}\n{upload}\n{browse}\n', v = '<div class="file-preview {class}">\n    <div class="close fileinput-remove">&times;</div>\n    <div class="{dropClass}">\n    <div class="file-preview-thumbnails">\n    </div>\n    <div class="clearfix"></div>    <div class="file-preview-status text-center text-success"></div>\n    <div class="kv-fileinput-error"></div>\n    </div>\n</div>', h = '<span class="glyphicon glyphicon-file kv-caption-icon"></span>', m = '<div tabindex="-1" class="form-control file-caption {class}">\n   <span class="file-caption-ellipsis">&hellip;</span>\n   <div class="file-caption-name"></div>\n</div>', g = '<div id="{id}" class="modal fade">\n  <div class="modal-dialog modal-lg">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n        <h3 class="modal-title">Detailed Preview <small>{title}</small></h3>\n      </div>\n      <div class="modal-body">\n        <textarea class="form-control" style="font-family:Monaco,Consolas,monospace; height: {height}px;" readonly>{body}</textarea>\n      </div>\n    </div>\n  </div>\n</div>', w = '<div class="progress">\n    <div class="{class}" role="progressbar" aria-valuenow="{percent}" aria-valuemin="0" aria-valuemax="100" style="width:{percent}%;">\n        {percent}%\n     </div>\n</div>', b = '<div class="file-thumbnail-footer">\n    <div class="file-caption-name">{caption}</div>\n    {actions}\n</div>', x = '<div class="file-actions">\n    <div class="file-footer-buttons">\n        {upload}{delete}{other}    </div>\n    <div class="file-upload-indicator" tabindex="-1" title="{indicatorTitle}">{indicator}</div>\n    <div class="clearfix"></div>\n</div>', C = '<button type="button" class="kv-file-remove {removeClass}" title="{removeTitle}"{dataUrl}{dataKey}>{removeIcon}</button> <input id="{fileindex}" class="radioThumb radioSet" type="radio" name="thumbnail"onclick="CreateThumbnail(this,this.id);" />\n', y = '<button type="button" class="kv-file-upload {uploadClass}" title="{uploadTitle}">   {uploadIcon}\n</button>\n', T = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   {content}\n   {footer}\n</div>\n', E = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n    <object data="{data}" type="{type}" width="{width}" height="{height}">\n       ' + c + "\n    </object>\n   {footer}\n</div>", k = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   <img src="{data}" class="file-preview-image" title="{caption}" alt="{caption}" ' + s + ">\n   {footer}\n</div>\n", F = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}">\n   <div class="file-preview-text" title="{caption}" ' + s + ">\n       {data}\n   </div>\n   {footer}\n</div>", $ = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <video width="{width}" height="{height}" controls>\n       <source src="{data}" type="{type}">\n       ' + c + "\n   </video>\n   {footer}\n</div>\n", I = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <audio controls>\n       <source src="{data}" type="{type}">\n       ' + c + "\n   </audio>\n   {footer}\n</div>", D = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <object type="application/x-shockwave-flash" width="{width}" height="{height}" data="{data}">\n' + d + "       " + c + "\n   </object>\n   {footer}\n</div>\n", P = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + '>\n   <object data="{data}" type="{type}" width="{width}" height="{height}">\n       <param name="movie" value="{caption}" />\n' + d + "         " + c + "\n   </object>\n   {footer}\n</div>", S = '<div class="file-preview-frame{frameClass}" id="{previewId}" data-fileindex="{fileindex}" title="{caption}" ' + s + ">\n   " + c + "\n   {footer}\n</div>", U = { main1: u, main2: f, preview: v, icon: h, caption: m, modal: g, progress: w, footer: b, actions: x, actionDelete: C, actionUpload: y }, j = { generic: T, html: E, image: k, text: F, video: $, audio: I, flash: D, object: P, other: S }, A = ["image", "html", "text", "video", "audio", "flash", "object"], L = { image: { width: "auto", height: "160px" }, html: { width: "213px", height: "160px" }, text: { width: "160px", height: "160px" }, video: { width: "213px", height: "160px" }, audio: { width: "213px", height: "80px" }, flash: { width: "213px", height: "160px" }, object: { width: "160px", height: "160px" }, other: { width: "160px", height: "160px" } }, O = { image: function (e, i) { return void 0 !== e ? e.match("image.*") : i.match(/\.(gif|png|jpe?g)$/i) }, html: function (e, i) { return void 0 !== e ? "text/html" === e : i.match(/\.(htm|html)$/i) }, text: function (e, i) { return void 0 !== e && e.match("text.*") || i.match(/\.(txt|md|csv|nfo|php|ini)$/i) }, video: function (e, i) { return void 0 !== e && e.match(/\.video\/(ogg|mp4|webm)$/i) || i.match(/\.(og?|mp4|webm)$/i) }, audio: function (e, i) { return void 0 !== e && e.match(/\.audio\/(ogg|mp3|wav)$/i) || i.match(/\.(ogg|mp3|wav)$/i) }, flash: function (e, i) { return void 0 !== e && "application/x-shockwave-flash" === e || i.match(/\.(swf)$/i) }, object: function () { return !0 }, other: function () { return !0 } }, R = function (i, t) { return null === i || void 0 === i || 0 === i.length || t && "" === e.trim(i) }, z = function (e) { return Array.isArray(e) || "[object Array]" === Object.prototype.toString.call(e) }, M = function (e, i) { return "object" == typeof i && e in i }, N = function (i, t, a) { return R(i) || R(i[t]) ? a : e(i[t]) }, B = function () { return Math.round((new Date).getTime() + 100 * Math.random()) }, Z = function (e) { return String(e).repl("&", "&amp;").repl('"', "&quot;").repl("'", "&#39;").repl("<", "&lt;").repl(">", "&gt;") }, H = function (i, t) { var a = i; return t = t || {}, e.each(t, function (e, i) { "function" == typeof i && (i = i()), a = a.repl(e, i) }), a }, W = window.URL || window.webkitURL, _ = function (t, a) { var r = this; r.$element = e(t), r.validate() && (r.isPreviewable = n(), r.isIE9 = i(9), r.isIE10 = i(10), r.isPreviewable || r.isIE9 ? (r.init(a), r.listen()) : r.$element.removeClass("file-loading")) }; _.prototype = {
                    constructor: _, validate: function () { var e, i = this; return "file" === i.$element.attr("type") ? !0 : (e = '<div class="help-block alert alert-warning"><h4>Invalid Input Type</h4>You must set an input <code>type = file</code> for <b>bootstrap-fileinput</b> plugin to initialize.</div>', i.$element.after(e), !1) }, init: function (i) { var n, s = this, d = s.$element; e.each(i, function (e, i) { s[e] = "maxFileCount" === e || "maxFileSize" === e ? a(i) : i }), s.fileInputCleared = !1, s.fileBatchCompleted = !0, R(s.allowedPreviewTypes) && (s.allowedPreviewTypes = A), s.isPreviewable || (s.showPreview = !1), s.uploadFileAttr = R(d.attr("name")) ? "file_data" : d.attr("name"), s.reader = null, s.formdata = {}, s.filestack = [], s.ajaxRequests = [], s.isError = !1, s.ajaxAborted = !1, s.dropZoneEnabled = r() && s.dropZoneEnabled, s.isDisabled = s.$element.attr("disabled") || s.$element.attr("readonly"), s.isUploadable = l() && !R(s.uploadUrl), s.slug = "function" == typeof i.slugCallback ? i.slugCallback : s.slugDefault, s.mainTemplate = s.getLayoutTemplate(s.showCaption ? "main1" : "main2"), s.captionTemplate = s.getLayoutTemplate("caption"), s.previewGenericTemplate = s.getPreviewTemplate("generic"), R(s.$element.attr("id")) && s.$element.attr("id", B()), void 0 === s.$container ? s.$container = s.createContainer() : s.refreshContainer(), s.$progress = s.$container.find(".kv-upload-progress"), s.$btnUpload = s.$container.find(".kv-fileinput-upload"), s.$captionContainer = N(i, "elCaptionContainer", s.$container.find(".file-caption")), s.$caption = N(i, "elCaptionText", s.$container.find(".file-caption-name")), s.$previewContainer = N(i, "elPreviewContainer", s.$container.find(".file-preview")), s.$preview = N(i, "elPreviewImage", s.$container.find(".file-preview-thumbnails")), s.$previewStatus = N(i, "elPreviewStatus", s.$container.find(".file-preview-status")), s.$errorContainer = N(i, "elErrorContainer", s.$previewContainer.find(".kv-fileinput-error")), R(s.msgErrorClass) || o(s.$errorContainer, s.msgErrorClass), s.$errorContainer.hide(), s.fileActionSettings = e.extend(p, i.fileActionSettings), s.previewInitId = "preview-" + B(), s.id = s.$element.attr("id"), t.init(s), s.initPreview(!0), s.initPreviewDeletes(), s.options = i, s.setFileDropZoneTitle(), s.uploadCount = 0, s.uploadPercent = 0, s.$element.removeClass("file-loading"), n = s.getLayoutTemplate("progress"), s.progressTemplate = n.replace("{class}", s.progressClass), s.progressCompleteTemplate = n.replace("{class}", s.progressCompleteClass), s.setEllipsis() }, parseError: function (i, t, a) { var n = this, r = e.trim(t + ""), l = "." === r.slice(-1) ? "" : ".", o = void 0 !== i.responseJSON && void 0 !== i.responseJSON.error ? i.responseJSON.error : i.responseText; return n.showAjaxErrorDetails ? (o = e.trim(o.replace(/\n\s*\n/g, "\n")), o = o.length > 0 ? "<pre>" + o + "</pre>" : "", r += l + o) : r += l, a ? "<b>" + a + ": </b>" + i : r }, raise: function (i, t) { var a = this, n = e.Event(i); if (void 0 !== t ? a.$element.trigger(n, t) : a.$element.trigger(n), !n.result) return n.result; switch (i) { case "filebatchuploadcomplete": case "filebatchuploadsuccess": case "fileuploaded": case "fileclear": case "filecleared": case "filereset": case "fileerror": case "filefoldererror": case "fileuploaderror": case "filebatchuploaderror": case "filedeleteerror": case "filecustomerror": case "filesuccessremove": break; default: a.ajaxAborted = n.result } return !0 }, getLayoutTemplate: function (e) { var i = this, t = M(e, i.layoutTemplates) ? i.layoutTemplates[e] : U[e]; return R(i.customLayoutTags) ? t : H(t, i.customLayoutTags) }, getPreviewTemplate: function (e) { var i = this, t = M(e, i.previewTemplates) ? i.previewTemplates[e] : j[e]; return t = t.repl("{previewFileIcon}", i.previewFileIcon), R(i.customPreviewTags) ? t : H(t, i.customPreviewTags) }, getOutData: function (e, i, t) { var a = this; return e = e || {}, i = i || {}, t = t || a.filestack.slice(0) || {}, { form: a.formdata, files: t, extra: a.getExtraData(), response: i, reader: a.reader, jqXHR: e } }, setEllipsis: function () { var e = this, i = e.$captionContainer, t = e.$caption, a = t.clone().css("height", "auto").hide(); i.parent().before(a), i.removeClass("kv-has-ellipsis"), a.outerWidth() > t.outerWidth() && i.addClass("kv-has-ellipsis"), a.remove() }, listen: function () { var i = this, t = i.$element, a = i.$captionContainer, n = i.$btnFile, r = t.closest("form"); t.on("change", e.proxy(i.change, i)), e(window).on("resize", function () { i.setEllipsis() }), n.off("click").on("click", function () { i.raise("filebrowse"), i.isError && !i.isUploadable && i.clear(), a.focus() }), r.off("reset").on("reset", e.proxy(i.reset, i)), i.$container.off("click").on("click", ".fileinput-remove:not([disabled])", e.proxy(i.clear, i)).on("click", ".fileinput-cancel", e.proxy(i.cancel, i)), i.isUploadable && i.dropZoneEnabled && i.showPreview && i.initDragDrop(), i.isUploadable || r.on("submit", e.proxy(i.submitForm, i)), i.$container.find(".kv-fileinput-upload").off("click").on("click", function (t) { var a, n = e(this), r = !n.hasClass("disabled") && R(n.attr("disabled")); return i.isUploadable ? (t.preventDefault(), void (r && i.upload())) : void (r && "submit" !== n.attr("type") && (a = n.closest("form"), a.length && a.trigger("submit"), t.preventDefault())) }) }, submitForm: function () { var e = this, i = e.$element, t = i.get(0).files; return t && t.length < e.minFileCount && e.minFileCount > 0 ? (e.noFilesError({}), !1) : !e.abort({}) }, abort: function (i) { var t, a = this; return a.ajaxAborted && "object" == typeof a.ajaxAborted && void 0 !== a.ajaxAborted.message ? (t = e.extend(a.getOutData(), i), t.abortData = a.ajaxAborted.data || {}, t.abortMessage = a.ajaxAborted.message, a.showUploadError(a.ajaxAborted.message, t, "filecustomerror"), !0) : !1 }, noFilesError: function (e) { var i = this, t = i.minFileCount > 1 ? i.filePlural : i.fileSingle, a = i.msgFilesTooLess.replace("{n}", i.minFileCount).replace("{files}", t), n = i.$errorContainer; n.html(a), i.isError = !0, i.updateFileDetails(0), n.fadeIn(800), i.raise("fileerror", [e]), i.clearFileInput(), o(i.$container, "has-error") }, setProgress: function (e) { var i = this, t = Math.min(e, 100), a = 100 > t ? i.progressTemplate : i.progressCompleteTemplate; R(a) || i.$progress.html(a.repl("{percent}", t)) }, upload: function () { var i, t, a, n = this, r = n.getFileStack().length, l = {}, o = !e.isEmptyObject(n.getExtraData()); if (r < n.minFileCount && n.minFileCount > 0) return void n.noFilesError(l); if (n.isUploadable && !n.isDisabled && (0 !== r || o)) { if (n.resetUpload(), n.$progress.removeClass("hide"), n.uploadCount = 0, n.uploadPercent = 0, n.lock(), n.setProgress(0), 0 === r && o) return void n.uploadExtraOnly(); if (a = n.filestack.length, n.hasInitData = !1, n.uploadAsync && n.showPreview) for (t = n.getOutData(), n.raise("filebatchpreupload", [t]), n.fileBatchCompleted = !1, n.uploadCache = { content: [], config: [], tags: [], append: !0 }, i = 0; a > i; i += 1) void 0 !== n.filestack[i] && n.uploadSingle(i, n.filestack, !0); else n.uploadBatch() } }, lock: function () { var e = this; e.resetErrors(), e.disable(), e.showRemove && o(e.$container.find(".fileinput-remove"), "hide"), e.showCancel && e.$container.find(".fileinput-cancel").removeClass("hide"), e.raise("filelock", [e.filestack, e.getExtraData()]) }, unlock: function (e) { var i = this; void 0 === e && (e = !0), i.enable(), i.showCancel && o(i.$container.find(".fileinput-cancel"), "hide"), i.showRemove && i.$container.find(".fileinput-remove").removeClass("hide"), e && i.resetFileStack(), i.raise("fileunlock", [i.filestack, i.getExtraData()]) }, resetFileStack: function () { var i = this, t = 0, a = []; i.getThumbs().each(function () { var n = e(this), r = n.attr("data-fileindex"), l = i.filestack[r]; -1 !== r && (void 0 !== l ? (a[t] = l, n.attr({ id: i.previewInitId + "-" + t, "data-fileindex": t }), t += 1) : n.attr({ id: "uploaded-" + B(), "data-fileindex": "-1" })) }), i.filestack = a }, refresh: function (i) { var t, a = this, n = a.$element, r = arguments.length ? e.extend(a.options, i) : a.options; n.off(), a.init(r), t = a.$container.find(".file-drop-zone"), t.off("dragenter dragover dragleave drop"), e(document).off("dragenter dragover drop"), a.listen(), a.setFileDropZoneTitle() }, initDragDrop: function () { var i = this, t = i.$container.find(".file-drop-zone"); t.off("dragenter dragover dragleave drop"), e(document).off("dragenter dragover drop"), t.on("dragenter dragover", function (t) { var a = e.inArray("Files", t.originalEvent.dataTransfer.types) > -1; return t.stopPropagation(), t.preventDefault(), i.isDisabled || !a ? (t.originalEvent.dataTransfer.effectAllowed = "none", void (t.originalEvent.dataTransfer.dropEffect = "none")) : void o(e(this), "highlighted") }), t.on("dragleave", function (t) { t.stopPropagation(), t.preventDefault(), i.isDisabled || e(this).removeClass("highlighted") }), t.on("drop", function (t) { t.preventDefault(), i.isDisabled || R(t.originalEvent.dataTransfer.files) || (i.change(t, "dragdrop"), e(this).removeClass("highlighted")) }), e(document).on("dragenter dragover drop", function (e) { e.stopPropagation(), e.preventDefault() }) }, setFileDropZoneTitle: function () { var e = this, i = e.$container.find(".file-drop-zone"); i.find("." + e.dropZoneTitleClass).remove(), e.isUploadable && e.showPreview && 0 !== i.length && !(e.getFileStack().length > 0) && e.dropZoneEnabled && (0 === i.find(".file-preview-frame").length && i.prepend('<div class="' + e.dropZoneTitleClass + '">' + e.dropZoneTitle + "</div>"), e.$container.removeClass("file-input-new"), o(e.$container, "file-input-ajax-new")) }, initFileActions: function () { var i = this; i.$preview.find(".kv-file-remove").each(function () { var a, n, r = e(this), l = r.closest(".file-preview-frame"), o = l.attr("data-fileindex"); r.off("click").on("click", function () { i.cleanMemory(l), l.fadeOut("slow", function () { i.filestack[o] = void 0, i.clearObjects(l), l.remove(); var e = i.getFileStack(!0), r = e.length, s = t.count(i.id); i.clearFileInput(), 0 === r && 0 === s ? i.reset() : (a = s + r, n = a > 1 ? i.getMsgSelected(a) : e[0] ? e[0].name : "", i.setCaption(n)) }) }) }), i.$preview.find(".kv-file-upload").each(function () { var t = e(this); t.off("click").on("click", function () { var e = t.closest(".file-preview-frame"), a = e.attr("data-fileindex"); i.uploadSingle(a, i.filestack, !1) }) }) }, getMsgSelected: function (e) { var i = this, t = 1 === e ? i.fileSingle : i.filePlural; return i.msgSelected.replace("{n}", e).replace("{files}", t) }, renderFileFooter: function (e, i) { var t, a, n = this, r = n.fileActionSettings, l = n.getLayoutTemplate("footer"); return n.isUploadable ? (t = l.repl("{actions}", n.renderFileActions(!0, !0, !1, !1, !1)), a = t.repl("{caption}", e).repl("{width}", i).repl("{indicator}", r.indicatorNew).repl("{indicatorTitle}", r.indicatorNewTitle)) : a = l.repl("{actions}", "").repl("{caption}", e).repl("{width}", i).repl("{indicator}", "").repl("{indicatorTitle}", ""), a = H(a, n.previewThumbTags) }, renderFileActions: function (e, i, t, a, n) { if (!e && !i) return ""; var r = this, l = a === !1 ? "" : ' data-url="' + a + '"', o = n === !1 ? "" : ' data-key="' + n + '"', s = r.getLayoutTemplate("actionDelete"), d = "", c = r.getLayoutTemplate("actions"), p = r.otherActionButtons.repl("{dataKey}", o), u = r.fileActionSettings, f = t ? u.removeClass + " disabled" : u.removeClass; return s = s.repl("{removeClass}", f).repl("{removeIcon}", u.removeIcon).repl("{removeTitle}", u.removeTitle).repl("{dataUrl}", l).repl("{dataKey}", o), e && (d = r.getLayoutTemplate("actionUpload").repl("{uploadClass}", u.uploadClass).repl("{uploadIcon}", u.uploadIcon).repl("{uploadTitle}", u.uploadTitle)), c.repl("{delete}", s).repl("{upload}", d).repl("{other}", p) }, setThumbStatus: function (e, i) { var t = this, a = "indicator" + i, n = a + "Title", r = "file-preview-" + i.toLowerCase(), l = e.find(".file-upload-indicator"), o = t.fileActionSettings; e.removeClass("file-preview-success file-preview-error file-preview-loading"), l.html(o[a]), l.attr("title", o[n]), e.addClass(r) }, clearPreview: function () { var e = this, i = e.$preview.find(e.showUploadedThumbs ? ".file-preview-frame:not(.file-preview-success)" : ".file-preview-frame"); i.remove(), e.$preview.find(".file-preview-frame").length && e.showPreview || e.resetUpload() }, initPreview: function (e) { var i, a = this, n = a.initialCaption || ""; return t.count(a.id) ? (i = t.out(a.id), n = e && a.initialCaption ? a.initialCaption : i.caption, a.$preview.html(i.content), a.setCaption(n), void (R(i.content) || a.$container.removeClass("file-input-new"))) : (a.clearPreview(), void (e ? a.setCaption(n) : a.initCaption())) }, initPreviewDeletes: function () { var i = this, a = i.deleteExtraData || {}, n = function () { 0 === i.$preview.find(".kv-file-remove").length && (i.reset(), i.initialCaption = "") }; i.$preview.find(".kv-file-remove").each(function () { var r = e(this), l = r.data("url") || i.deleteUrl, s = r.data("key"); if (!R(l) && void 0 !== s) { var d, c, p, u, f = r.closest(".file-preview-frame"), v = t.data[i.id], h = f.data("fileindex"); h = parseInt(h.replace("init_", "")), p = R(v.config) && R(v.config[h]) ? null : v.config[h], u = R(p) || R(p.extra) ? a : p.extra, "function" == typeof u && (u = u()), c = { id: r.attr("id"), key: s, extra: u }, d = e.extend({ url: l, type: "DELETE", dataType: "json", data: e.extend({ key: s }, u), beforeSend: function (e) { i.ajaxAborted = !1, i.raise("filepredelete", [s, e, u]), i.ajaxAborted ? e.abort() : (o(f, "file-uploading"), o(r, "disabled")) }, success: function (e, a, l) { var o, d; return R(e) || R(e.error) ? (t.unset(i.id, h), o = t.count(i.id), d = o > 0 ? i.getMsgSelected(o) : "", i.raise("filedeleted", [s, l, u]), i.setCaption(d), f.removeClass("file-uploading").addClass("file-deleted"), void f.fadeOut("slow", function () { i.clearObjects(f), f.remove(), n(), o || 0 !== i.getFileStack().length || (i.setCaption(""), i.reset()) })) : (c.jqXHR = l, c.response = e, i.showError(e.error, c, "filedeleteerror"), f.removeClass("file-uploading"), r.removeClass("disabled"), void n()) }, error: function (e, t, a) { var r = i.parseError(e, a); c.jqXHR = e, c.response = {}, i.showError(r, c, "filedeleteerror"), f.removeClass("file-uploading"), n() } }, i.ajaxDeleteSettings), r.off("click").on("click", function () { e.ajax(d) }) } }) }, clearObjects: function (i) { i.find("video audio").each(function () { this.pause(), e(this).remove() }), i.find("img object div").each(function () { e(this).remove() }) }, clearFileInput: function () { var i, t, a, n = this, r = n.$element; R(r.val()) || (n.isIE9 || n.isIE10 ? (i = r.closest("form"), t = e(document.createElement("form")), a = e(document.createElement("div")), r.before(a), i.length ? i.after(t) : a.after(t), t.append(r).trigger("reset"), a.before(r).remove(), t.remove()) : r.val(""), n.fileInputCleared = !0) }, resetUpload: function () { var e = this; e.uploadCache = { content: [], config: [], tags: [], append: !0 }, e.uploadCount = 0, e.uploadPercent = 0, e.$btnUpload.removeAttr("disabled"), e.setProgress(0), o(e.$progress, "hide"), e.resetErrors(!1), e.ajaxAborted = !1, e.ajaxRequests = [] }, cancel: function () { var i, t = this, a = t.ajaxRequests, n = a.length; if (n > 0) for (i = 0; n > i; i += 1) a[i].abort(); t.getThumbs().each(function () { var i = e(this), a = i.attr("data-fileindex"); i.removeClass("file-uploading"), void 0 !== t.filestack[a] && (i.find(".kv-file-upload").removeClass("disabled").removeAttr("disabled"), i.find(".kv-file-remove").removeClass("disabled").removeAttr("disabled")), t.unlock() }) }, cleanMemory: function (e) { var i = e.is("img") ? e.attr("src") : e.find("source").attr("src"); W.revokeObjectURL(i) }, hasInitialPreview: function () { var e = this; return !e.overwriteInitial && t.count(e.id) }, clear: function () { var i, t = this; t.$btnUpload.removeAttr("disabled"), t.getThumbs().find("video,audio,img").each(function () { t.cleanMemory(e(this)) }), t.resetUpload(), t.filestack = [], t.clearFileInput(), t.resetErrors(!0), t.raise("fileclear"), t.hasInitialPreview() ? (t.showFileIcon(), t.resetPreview(), t.setEllipsis(), t.initPreviewDeletes(), t.$container.removeClass("file-input-new")) : (t.getThumbs().each(function () { t.clearObjects(e(this)) }), t.$preview.html(""), i = !t.overwriteInitial && t.initialCaption.length > 0 ? t.initialCaption : "", t.setCaption(i), t.setEllipsis(), t.$caption.attr("title", ""), o(t.$container, "file-input-new")), 0 === t.$container.find(".file-preview-frame").length && (t.initCaption() || t.$captionContainer.find(".kv-caption-icon").hide(), t.setEllipsis()), t.hideFileIcon(), t.raise("filecleared"), t.$captionContainer.focus(), t.setFileDropZoneTitle() }, resetPreview: function () { var e, i = this; t.count(i.id) ? (e = t.out(i.id), i.$preview.html(e.content), i.setCaption(e.caption)) : (i.clearPreview(), i.initCaption()) }, reset: function () { var e = this; e.resetPreview(), e.setEllipsis(), e.$container.find(".fileinput-filename").text(""), e.raise("filereset"), e.initialPreview.length > 0 && e.$container.removeClass("file-input-new"), e.setFileDropZoneTitle(), e.filestack = [], e.formdata = {} }, disable: function () { var e = this; e.isDisabled = !0, e.raise("filedisabled"), e.$element.attr("disabled", "disabled"), e.$container.find(".kv-fileinput-caption").addClass("file-caption-disabled"), e.$container.find(".btn-file, .fileinput-remove, .kv-fileinput-upload").attr("disabled", !0), e.initDragDrop() }, enable: function () { var e = this; e.isDisabled = !1, e.raise("fileenabled"), e.$element.removeAttr("disabled"), e.$container.find(".kv-fileinput-caption").removeClass("file-caption-disabled"), e.$container.find(".btn-file, .fileinput-remove, .kv-fileinput-upload").removeAttr("disabled"), e.initDragDrop() }, getThumbs: function (e) { return e = e || "", this.$preview.find(".file-preview-frame:not(.file-preview-initial)" + e) }, getExtraData: function () { var e = this, i = e.uploadExtraData; return "function" == typeof e.uploadExtraData && (i = e.uploadExtraData()), i }, uploadExtra: function () { var i = this, t = i.getExtraData(); 0 !== t.length && e.each(t, function (e, t) { i.formdata.append(e, t) }) }, initXhr: function (e, i) { var t = this; return e.upload && e.upload.addEventListener("progress", function (e) { var a = 0, n = e.loaded || e.position, r = e.total; e.lengthComputable && (a = Math.ceil(n / r * i)), t.uploadPercent = Math.max(a, t.uploadPercent), t.setProgress(t.uploadPercent) }, !1), e }, ajaxSubmit: function (i, t, a, n) { var r, l = this; l.uploadExtra(), r = e.extend({ xhr: function () { var i = e.ajaxSettings.xhr(); return l.initXhr(i, 98) }, url: l.uploadUrl, type: "POST", dataType: "json", data: l.formdata, cache: !1, processData: !1, contentType: !1, beforeSend: i, success: t, complete: a, error: n }, l.ajaxSettings), l.ajaxRequests.push(e.ajax(r)) }, initUploadSuccess: function (i, a, n) { var r, l, o, s, d, c, p, u = this; "object" != typeof i || e.isEmptyObject(i) || void 0 !== i.initialPreview && i.initialPreview.length > 0 && (u.hasInitData = !0, d = i.initialPreview || [], c = i.initialPreviewConfig || [], p = i.initialPreviewThumbTags || [], r = void 0 === i.append || i.append ? !0 : !1, u.overwriteInitial = !1, void 0 === a || n ? n ? (u.uploadCache.content.push(d[0]), u.uploadCache.config.push(c[0]), u.uploadCache.tags.push(p[0]), u.uploadCache.append = r) : (t.set(u.id, d, c, p, r), u.initPreview(), u.initPreviewDeletes()) : (o = t.add(u.id, d, c[0], p[0], r), l = t.get(u.id, o, !1), s = e(l).hide(), a.after(s).fadeOut("slow", function () { s.fadeIn("slow").css("display:inline-block"), u.initPreviewDeletes(), u.clearFileInput(), a.remove() }))) }, initSuccessThumbs: function () { var i = this; i.getThumbs(".file-preview-success").each(function () { var t = e(this), a = t.find(".kv-file-remove"); a.removeAttr("disabled").off("click").on("click", function () { var e = i.raise("filesuccessremove", [t.attr("id"), t.data("fileindex")]); i.cleanMemory(t), e !== !1 && t.fadeOut("slow", function () { t.remove(), i.$preview.find(".file-preview-frame").length || i.reset() }) }) }) }, uploadSingle: function (i, a, n) { var r, l, s, d, c, p, u, f, v, h = this, m = h.getFileStack().length, g = new FormData, w = h.previewInitId + "-" + i, b = e("#" + w + ":not(.file-preview-initial)"), x = b.find(".kv-file-upload"), C = b.find(".kv-file-remove"), y = h.filestack.length > 0 || !e.isEmptyObject(h.uploadExtraData), T = { id: w, index: i }; h.formdata = g, 0 === m || !y || x.hasClass("disabled") || h.abort(T) || (s = function () { var e = h.getThumbs(".file-uploading"); e.length > 0 || h.fileBatchCompleted || (h.fileBatchCompleted = !0, setTimeout(function () { t.set(h.id, h.uploadCache.content, h.uploadCache.config, h.uploadCache.tags, h.uploadCache.append), h.hasInitData && (h.initPreview(), h.initPreviewDeletes()), h.setProgress(100), h.unlock(), h.clearFileInput(), h.raise("filebatchuploadcomplete", [h.filestack, h.getExtraData()]) }, 100)) }, d = function () { !n || 0 === m || h.uploadPercent >= 100 || (h.uploadCount += 1, l = 80 + Math.ceil(20 * h.uploadCount / m), h.uploadPercent = Math.max(l, h.uploadPercent), h.setProgress(h.uploadPercent), h.initPreviewDeletes()) }, c = function () { x.removeAttr("disabled"), C.removeAttr("disabled"), b.removeClass("file-uploading") }, p = function (t) { r = h.getOutData(t), b.hasClass("file-preview-success") || (h.setThumbStatus(b, "Loading"), o(b, "file-uploading")), x.attr("disabled", !0), C.attr("disabled", !0), n || h.lock(), h.raise("filepreupload", [r, w, i]), T = e.extend(T, r), h.abort(T) && (t.abort(), h.setProgress(100)) }, u = function (t, a, l) { r = h.getOutData(l, t), T = e.extend(T, r), setTimeout(function () { R(t) || R(t.error) ? (h.setThumbStatus(b, "Success"), x.hide(), h.filestack[i] = void 0, h.raise("fileuploaded", [r, w, i]), h.initUploadSuccess(t, b, n), n || h.resetFileStack()) : (h.setThumbStatus(b, "Error"), h.showUploadError(t.error, T)) }, 100) }, f = function () { setTimeout(function () { d(), c(), n ? s() : h.unlock(!1), h.initSuccessThumbs() }, 100) }, v = function (t, r, l) { var o = h.parseError(t, l, n ? a[i].name : null); h.setThumbStatus(b, "Error"), T = e.extend(T, h.getOutData(t)), h.showUploadError(o, T) }, g.append(h.uploadFileAttr, a[i]), g.append("file_id", i), h.ajaxSubmit(p, u, f, v)) }, uploadBatch: function () {
                        var i, t, a, n, r, l = this, s = l.filestack, d = s.length, c = l.filestack.length > 0 || !e.isEmptyObject(l.uploadExtraData), p = {}; l.formdata = new FormData, 0 !== d && c && !l.abort(p) && (i = function () { e.each(s, function (e) { l.filestack[e] = void 0 }), l.clearFileInput() }, t = function (i) { l.lock(); var t = l.getOutData(i); l.showPreview && l.getThumbs().each(function () { var i = e(this), t = i.find(".kv-file-upload"), a = i.find(".kv-file-remove"); i.hasClass("file-preview-success") || (l.setThumbStatus(i, "Loading"), o(i, "file-uploading")), t.attr("disabled", !0), a.attr("disabled", !0) }), l.raise("filebatchpreupload", [t]), l.abort(t) && i.abort() }, a = function (t, a, n) {
                            var r = l.getOutData(n, t), o = l.getThumbs(), s = R(t.errorkeys) ? [] : t.errorkeys; R(t) || R(t.error) ? (l.raise("filebatchuploadsuccess", [r]), i(), l.showPreview ? (o.each(function () { var i = e(this), t = i.find(".kv-file-upload"); i.find(".kv-file-upload").hide(), l.setThumbStatus(i, "Success"), i.removeClass("file-uploading"), t.removeAttr("disabled") }), l.initUploadSuccess(t)) : l.reset()) : (l.showPreview && (o.each(function () {
                                var i = e(this), t = i.find(".kv-file-remove"), a = i.find(".kv-file-upload"); return i.removeClass("file-uploading"), a.removeAttr("disabled"), t.removeAttr("disabled"), 0 === s.length ? void l.setThumbStatus(i, "Error") : void (-1 !== e.inArray(key, s) ? l.setThumbStatus(i, "Error") : (i.find(".kv-file-upload").hide(), l.setThumbStatus(i, "Success"), l.filestack[key] = void 0));

                            }), l.initUploadSuccess(t)), l.showUploadError(t.error, r, "filebatchuploaderror"))
                        }, n = function () { l.setProgress(100), l.unlock(), l.initSuccessThumbs(), l.raise("filebatchuploadcomplete", [l.filestack, l.getExtraData()]), l.clearFileInput() }, r = function (i, t, a) { var n = l.getOutData(i), r = l.parseError(i, a); l.showUploadError(r, n, "filebatchuploaderror"), l.uploadFileCount = d - 1, l.showPreview && (l.getThumbs().each(function () { var i = e(this), t = i.attr("data-fileindex"); i.removeClass("file-uploading"), void 0 !== l.filestack[t] && l.setThumbStatus(i, "Error") }), l.getThumbs().removeClass("file-uploading"), l.getThumbs(" .kv-file-upload").removeAttr("disabled"), l.getThumbs(" .kv-file-delete").removeAttr("disabled")) }, e.each(s, function (e, i) { R(s[e]) || l.formdata.append(l.uploadFileAttr, i) }), l.ajaxSubmit(t, a, n, r))
                    }, uploadExtraOnly: function () { var e, i, t, a, n = this, r = {}; n.formdata = new FormData, n.abort(r) || (e = function (e) { n.lock(); var i = n.getOutData(e); n.raise("filebatchpreupload", [i]), n.setProgress(50), r.data = i, r.xhr = e, n.abort(r) && (e.abort(), n.setProgress(100)) }, i = function (e, i, t) { var a = n.getOutData(t, e); R(e) || R(e.error) ? (n.raise("filebatchuploadsuccess", [a]), n.clearFileInput(), n.initUploadSuccess(e)) : n.showUploadError(e.error, a, "filebatchuploaderror") }, t = function () { n.setProgress(100), n.unlock(), n.raise("filebatchuploadcomplete", [n.filestack, n.getExtraData()]), n.clearFileInput() }, a = function (e, i, t) { var a = n.getOutData(e), l = n.parseError(e, t); r.data = a, n.showUploadError(l, a, "filebatchuploaderror") }, n.ajaxSubmit(e, i, t, a)) }, hideFileIcon: function () { this.overwriteInitial && this.$captionContainer.find(".kv-caption-icon").hide() }, showFileIcon: function () { this.$captionContainer.find(".kv-caption-icon").show() }, resetErrors: function (e) { var i = this, t = i.$errorContainer; i.isError = !1, i.$container.removeClass("has-error"), t.html(""), e ? t.fadeOut("slow") : t.hide() }, showFolderError: function (e) { var i = this, t = i.$errorContainer; e && (t.html(i.msgFoldersNotAllowed.repl("{n}", e)), t.fadeIn(800), o(i.$container, "has-error"), i.raise("filefoldererror", [e])) }, showUploadError: function (e, i, t) { var a = this, n = a.$errorContainer, r = t || "fileuploaderror"; return 0 === n.find("ul").length ? n.html("<ul><li>" + e + "</li></ul>") : n.find("ul").append("<li>" + e + "</li>"), n.fadeIn(800), a.raise(r, [i]), o(a.$container, "has-error"), !0 }, showError: function (e, i, t) { var a = this, n = a.$errorContainer, r = t || "fileerror"; return i = i || {}, i.reader = a.reader, n.html(e), n.fadeIn(800), a.raise(r, [i]), a.isUploadable || a.clearFileInput(), o(a.$container, "has-error"), a.$btnUpload.attr("disabled", !0), !0 }, errorHandler: function (e, i) { var t = this, a = e.target.error; switch (a.code) { case a.NOT_FOUND_ERR: t.showError(t.msgFileNotFound.replace("{name}", i)); break; case a.SECURITY_ERR: t.showError(t.msgFileSecured.replace("{name}", i)); break; case a.NOT_READABLE_ERR: t.showError(t.msgFileNotReadable.replace("{name}", i)); break; case a.ABORT_ERR: t.showError(t.msgFilePreviewAborted.replace("{name}", i)); break; default: t.showError(t.msgFilePreviewError.replace("{name}", i)) } }, parseFileType: function (e) { var i, t, a, n, r = this; for (n = 0; n < A.length; n += 1) if (a = A[n], i = M(a, r.fileTypeSettings) ? r.fileTypeSettings[a] : O[a], t = i(e.type, e.name) ? a : "", !R(t)) return t; return "other" }, previewDefault: function (i, t, a) { if (this.showPreview) { var n = this, r = W.createObjectURL(i), l = (e("#" + t), n.previewSettings.other || L.other), o = n.renderFileFooter(i.name, l.width), s = n.getPreviewTemplate("other"), d = t.slice(t.lastIndexOf("-") + 1), c = ""; a === !0 && (c = " btn disabled", o += '<div class="file-other-error text-danger"><i class="glyphicon glyphicon-exclamation-sign"></i></div>'), n.$preview.append("\n" + s.repl("{previewId}", t).repl("{frameClass}", c).repl("{fileindex}", d).repl("{caption}", n.slug(i.name)).repl("{width}", l.width).repl("{height}", l.height).repl("{type}", i.type).repl("{data}", r).repl("{footer}", o)) } }, previewFile: function (e, i, t, a, n) { if (this.showPreview) { var r, l, o, s, d = this, c = d.parseFileType(i), p = d.slug(i.name), u = d.allowedPreviewTypes, f = d.allowedPreviewMimeTypes, v = d.getPreviewTemplate(c), h = M(c, d.previewSettings) ? d.previewSettings[c] : L[c], m = parseInt(d.wrapTextLength, 10), g = d.wrapIndicator, w = u.indexOf(c) >= 0, b = R(f) || !R(f) && -1 !== f.indexOf(i.type), x = d.renderFileFooter(p, h.width), C = "", y = a.slice(a.lastIndexOf("-") + 1); w && b ? ("text" === c ? (l = Z(t.target.result), l.length > m && (o = "text-" + B(), s = .75 * window.innerHeight, C = d.getLayoutTemplate("modal").repl("{id}", o).repl("{title}", p).repl("{height}", s).repl("{body}", l), g = g.repl("{title}", p).repl("{dialog}", "$('#" + o + "').modal('show')"), l = l.substring(0, m - 1) + g), r = v.repl("{previewId}", a).repl("{caption}", p).repl("{frameClass}", "").repl("{type}", i.type).repl("{width}", h.width).repl("{height}", h.height).repl("{data}", l).repl("{footer}", x).repl("{fileindex}", y) + C) : r = v.repl("{previewId}", a).repl("{caption}", p).repl("{frameClass}", "").repl("{type}", i.type).repl("{data}", n).repl("{width}", h.width).repl("{height}", h.height).repl("{footer}", x).repl("{fileindex}", y), d.$preview.append("\n" + r), d.validateImage(e, a)) : d.previewDefault(i, a) } }, slugDefault: function (e) { return R(e) ? "" : e.split(/(\\|\/)/g).pop().replace(/[^\w\u00C0-\u017F\-.\\\/ ]+/g, "") }, getFileStack: function (e) { var i = this; return i.filestack.filter(function (i) { return e ? void 0 !== i : void 0 !== i && null !== i }) }, readFiles: function (i) { function t(e) { if (R(n.attr("multiple")) && (u = 1), e >= u) return a.isUploadable && a.filestack.length > 0 ? a.raise("filebatchselected", [a.getFileStack()]) : a.raise("filebatchselected", [i]), o.removeClass("loading"), void s.html(""); var m, g, w, b, x, C, y = v + e, T = p + "-" + y, E = i[e], k = a.slug(E.name), F = (E.size || 0) / 1e3, $ = "", I = W.createObjectURL(E), D = 0, P = a.allowedFileTypes, S = R(P) ? "" : P.join(", "), U = a.allowedFileExtensions, j = R(U) ? "" : U.join(", "); if (R(U) || ($ = new RegExp("\\.(" + U.join("|") + ")$", "i")), F = F.toFixed(2), a.maxFileSize > 0 && F > a.maxFileSize) return b = a.msgSizeTooLarge.replace("{name}", k).replace("{size}", F).replace("{maxSize}", a.maxFileSize), void (a.isError = h(b, E, T, e)); if (!R(P) && z(P)) { for (w = 0; w < P.length; w += 1) x = P[w], g = f[x], C = void 0 !== g && g(E.type, k), D += R(C) ? 0 : C.length; if (0 === D) return b = a.msgInvalidFileType.replace("{name}", k).replace("{types}", S), void (a.isError = h(b, E, T, e)) } return 0 !== D || R(U) || !z(U) || R($) || (C = k.match($), D += R(C) ? 0 : C.length, 0 !== D) ? a.showPreview ? (r.length > 0 && void 0 !== FileReader ? (s.html(d.replace("{index}", e + 1).replace("{files}", u)), o.addClass("loading"), l.onerror = function (e) { a.errorHandler(e, k) }, l.onload = function (i) { a.previewFile(e, E, i, T, I), a.initFileActions() }, l.onloadend = function () { b = c.replace("{index}", e + 1).replace("{files}", u).replace("{percent}", 50).replace("{name}", k), setTimeout(function () { s.html(b), t(e + 1), a.updateFileDetails(u) }, 100), a.raise("fileloaded", [E, T, e, l]) }, l.onprogress = function (i) { if (i.lengthComputable) { var t = i.loaded / i.total * 100, a = Math.ceil(t); b = c.replace("{index}", e + 1).replace("{files}", u).replace("{percent}", a).replace("{name}", k), setTimeout(function () { s.html(b) }, 100) } }, m = M("text", f) ? f.text : O.text, m(E.type, k) ? l.readAsText(E, a.textEncoding) : l.readAsArrayBuffer(E)) : (a.previewDefault(E, T), setTimeout(function () { t(e + 1), a.updateFileDetails(u) }, 100), a.raise("fileloaded", [E, T, e, l])), void a.filestack.push(E)) : (a.filestack.push(E), setTimeout(t(e + 1), 100), void a.raise("fileloaded", [E, T, e, l])) : (b = a.msgInvalidFileExtension.replace("{name}", k).replace("{extensions}", j), void (a.isError = h(b, E, T, e))) } this.reader = new FileReader; var a = this, n = a.$element, r = a.$preview, l = a.reader, o = a.$previewContainer, s = a.$previewStatus, d = a.msgLoading, c = a.msgProgress, p = a.previewInitId, u = i.length, f = a.fileTypeSettings, v = a.filestack.length, h = function (t, n, r, l) { var o = e.extend(a.getOutData({}, {}, i), { id: r, index: l }), s = { id: r, index: l, file: n, files: i }; return a.previewDefault(n, r, !0), a.isUploadable ? a.showUploadError(t, o) : a.showError(t, s) }; t(0), a.updateFileDetails(u, !1) }, updateFileDetails: function (e) { var i = this, a = i.$element, n = i.getFileStack(), r = a.val() || n.length && n[0].name || "", l = i.slug(r), o = i.isUploadable ? n.length : e, s = t.count(i.id) + o, d = o > 1 ? i.getMsgSelected(s) : l; i.isError ? (i.$previewContainer.removeClass("loading"), i.$previewStatus.html(""), i.$captionContainer.find(".kv-caption-icon").hide()) : i.showFileIcon(), i.setCaption(d, i.isError), i.$container.removeClass("file-input-new file-input-ajax-new"), 1 === arguments.length && i.raise("fileselect", [e, l]), t.count(i.id) && i.initPreviewDeletes() }, change: function (i) { var a = this, n = a.$element; if (!a.isUploadable && R(n.val()) && a.fileInputCleared) return void (a.fileInputCleared = !1); a.fileInputCleared = !1; var r, l, o, s, d = a.$preview, c = arguments.length > 1, p = c ? i.originalEvent.dataTransfer.files : n.get(0).files, u = R(n.attr("multiple")), f = 0, v = 0, h = a.filestack.length, m = a.isUploadable, g = function (i, t, n, r) { var l = e.extend(a.getOutData({}, {}, p), { id: n, index: r }), o = { id: n, index: r, file: t, files: p }; return a.isUploadable ? a.showUploadError(i, l) : a.showError(i, o) }; if (a.reader = null, a.resetUpload(), a.hideFileIcon(), a.isUploadable && a.$container.find(".file-drop-zone ." + a.dropZoneTitleClass).remove(), c) for (r = []; p[f];) s = p[f], s.type || s.size % 4096 !== 0 ? r.push(s) : v++, f++; else r = void 0 === i.target.files ? i.target && i.target.value ? [{ name: i.target.value.replace(/^.+\\/, "") }] : [] : i.target.files; if (R(r) || 0 === r.length) return m || a.clear(), a.showFolderError(v), void a.raise("fileselectnone"); if (a.resetErrors(), o = a.isUploadable ? a.getFileStack().length + r.length : r.length, a.maxFileCount > 0 && o > a.maxFileCount) return l = a.msgFilesTooMany.replace("{m}", a.maxFileCount).replace("{n}", o), a.isError = g(l, null, null, null), a.$captionContainer.find(".kv-caption-icon").hide(), a.setCaption("", !0), a.setEllipsis(), void a.$container.removeClass("file-input-new file-input-ajax-new"); if (!m || u && h > 0) { if (a.hasInitialPreview()) { var w = t.out(a.id); d.html(w.content), a.setCaption(w.caption), a.initPreviewDeletes() } else a.clearPreview(); u && h > 0 && (a.filestack = []) } else !m || 0 !== h || t.count(a.id) && !a.overwriteInitial || (a.clearPreview(), a.filestack = []); a.isPreviewable ? a.readFiles(r) : a.updateFileDetails(1), a.showFolderError(v) }, validateImage: function (e, i) { var t, a, n, r, l = this, o = l.$preview, s = o.find("#" + i), d = "Untitled", c = s.find("img"); c.length && c.on("load", function () { a = s.width(), n = o.width(), a > n && (c.css("width", "100%"), s.css("width", "97%")), r = c.closest(".file-preview-frame").find(".file-caption-name"), r.length && (r.width(c.width()), d = r.text(), r.attr("title", d)), t = { ind: e, id: i }, l.checkDimensions(e, "Small", c, s, d, "Width", t), l.checkDimensions(e, "Small", c, s, d, "Height", t), l.checkDimensions(e, "Large", c, s, d, "Width", t), l.checkDimensions(e, "Large", c, s, d, "Height", t), l.raise("fileimageloaded", [i]), W.revokeObjectURL(c.attr("src")) }) }, checkDimensions: function (e, i, t, a, n, r, l) { var o, s, d, c, p = this, u = "Small" === i ? "min" : "max", f = p[u + "Image" + r]; !R(f) && t.length && (d = t[0], s = "Width" === r ? d.naturalWidth || d.width : d.naturalHeight || d.height, c = "Small" === i ? s >= f : f >= s, c || (o = p["msgImage" + r + i].replace("{name}", n).replace("{size}", f), p.showUploadError(o, l), p.setThumbStatus(a, "Error"), p.filestack[e] = null)) }, initCaption: function () { var e = this, i = e.initialCaption || ""; return e.overwriteInitial || R(i) ? (e.$caption.html(""), !1) : (e.setCaption(i), !0) }, setCaption: function (i, t) { var a, n, r = this; if (t) a = e("<div>" + r.msgValidationError + "</div>").text(), n = '<span class="' + r.msgValidationErrorClass + '">' + r.msgValidationErrorIcon + a + "</span>"; else { if (R(i) || 0 === r.$caption.length) return; a = e("<div>" + i + "</div>").text(), n = r.getLayoutTemplate("icon") + a } r.$caption.html(n), r.$caption.attr("title", a), r.$captionContainer.find(".file-caption-ellipsis").attr("title", a), r.setEllipsis() }, initBrowse: function (e) { var i = this; i.$btnFile = e.find(".btn-file"), i.$btnFile.append(i.$element) }, createContainer: function () { var i = this, t = e(document.createElement("span")).attr({ "class": "file-input file-input-new" }).html(i.renderMain()); return i.$element.before(t), i.initBrowse(t), t }, refreshContainer: function () { var e = this, i = e.$container; i.before(e.$element), i.html(e.renderMain()), e.initBrowse(i) }, renderMain: function () { var e = this, i = e.isUploadable && e.dropZoneEnabled ? " file-drop-zone" : "", t = e.showPreview ? e.getLayoutTemplate("preview").repl("{class}", e.previewClass).repl("{dropClass}", i) : "", a = e.isDisabled ? e.captionClass + " file-caption-disabled" : e.captionClass, n = e.captionTemplate.repl("{class}", a + " kv-fileinput-caption"); return e.mainTemplate.repl("{class}", e.mainClass).repl("{preview}", t).repl("{caption}", n).repl("{upload}", e.renderUpload()).repl("{remove}", e.renderRemove()).repl("{cancel}", e.renderCancel()).repl("{browse}", e.renderBrowse()) }, renderBrowse: function () { var e = this, i = e.browseClass + " btn-file", t = ""; return e.isDisabled && (t = " disabled "), '<div class="' + i + '"' + t + "> " + e.browseIcon + e.browseLabel + " </div>" }, renderRemove: function () { var e = this, i = e.removeClass + " fileinput-remove fileinput-remove-button", t = ""; return e.showRemove ? (e.isDisabled && (t = " disabled "), '<button type="button" title="' + e.removeTitle + '" class="' + i + '"' + t + ">" + e.removeIcon + e.removeLabel + "</button>") : "" }, renderCancel: function () { var e = this, i = e.cancelClass + " fileinput-cancel fileinput-cancel-button"; return e.showCancel ? '<button type="button" title="' + e.cancelTitle + '" class="hide ' + i + '">' + e.cancelIcon + e.cancelLabel + "</button>" : "" }, renderUpload: function () { var e = this, i = e.uploadClass + " kv-fileinput-upload fileinput-upload-button", t = "", a = ""; return e.showUpload ? (e.isDisabled && (a = " disabled "), t = !e.isUploadable || e.isDisabled ? '<button type="submit" title="' + e.uploadTitle + '"class="' + i + '"' + a + ">" + e.uploadIcon + e.uploadLabel + "</button>" : '<a href="' + e.uploadUrl + '" title="' + e.uploadTitle + '" class="' + i + '"' + a + ">" + e.uploadIcon + e.uploadLabel + "</a>") : "" }
                }, e.fn.fileinput = function (t) { if (n() || i(9)) { var a = Array.apply(null, arguments); return a.shift(), this.each(function () { var i, n = e(this), r = n.data("fileinput"), l = "object" == typeof t && t, o = l.language || n.data("language") || "en"; r || (i = e.extend({}, e.fn.fileinput.defaults), "en" === o || R(e.fn.fileinputLocales[o]) || (i = e.extend(i, e.fn.fileinputLocales[o])), r = new _(this, e.extend(i, l, n.data())), n.data("fileinput", r)), "string" == typeof t && r[t].apply(r, a) }) } }, e.fn.fileinput.defaults = { language: "en", showCaption: !0, showPreview: !0, showRemove: !0, showUpload: !0, showCancel: !0, showUploadedThumbs: !0, mainClass: "", previewClass: "", captionClass: "", mainTemplate: null, initialCaption: "", initialPreview: [], initialPreviewDelimiter: "*$$*", initialPreviewConfig: [], initialPreviewThumbTags: [], previewThumbTags: {}, initialPreviewShowDelete: !0, deleteUrl: "", deleteExtraData: {}, overwriteInitial: !0, layoutTemplates: U, previewTemplates: j, allowedPreviewTypes: A, allowedPreviewMimeTypes: null, allowedFileTypes: null, allowedFileExtensions: null, customLayoutTags: {}, customPreviewTags: {}, previewSettings: L, fileTypeSettings: O, previewFileIcon: '<i class="glyphicon glyphicon-file"></i>', browseIcon: '<i class="glyphicon glyphicon-folder-open"></i> &nbsp;', browseClass: "btn btn-primary", removeIcon: '<i class="glyphicon glyphicon-trash"></i> ', removeClass: "btn btn-default", cancelIcon: '<i class="glyphicon glyphicon-ban-circle"></i> ', cancelClass: "btn btn-default", uploadIcon: '<i class="glyphicon glyphicon-upload"></i> ', uploadClass: "btn btn-default", uploadUrl: null, uploadAsync: !0, uploadExtraData: {}, minImageWidth: null, minImageHeight: null, maxImageWidth: null, maxImageHeight: null, maxFileSize: 0, minFileCount: 0, maxFileCount: 0, msgValidationErrorClass: "text-danger", msgValidationErrorIcon: '<i class="glyphicon glyphicon-exclamation-sign"></i> ', msgErrorClass: "file-error-message", progressClass: "progress-bar progress-bar-success progress-bar-striped active", progressCompleteClass: "progress-bar progress-bar-success", previewFileType: "image", wrapTextLength: 250, wrapIndicator: ' <span class="wrap-indicator" title="{title}" onclick="{dialog}">[&hellip;]</span>', elCaptionContainer: null, elCaptionText: null, elPreviewContainer: null, elPreviewImage: null, elPreviewStatus: null, elErrorContainer: null, slugCallback: null, dropZoneEnabled: !0, dropZoneTitleClass: "file-drop-zone-title", fileActionSettings: {}, otherActionButtons: "", textEncoding: "UTF-8", ajaxSettings: {}, ajaxDeleteSettings: {}, showAjaxErrorDetails: !0 }, e.fn.fileinputLocales.en = { fileSingle: "file", filePlural: "files", browseLabel: "Browse &hellip;", removeLabel: "Remove", removeTitle: "Clear selected files", cancelLabel: "Cancel", cancelTitle: "Abort ongoing upload", uploadLabel: "Upload", uploadTitle: "Upload selected files", msgSizeTooLarge: 'File "{name}" (<b>{size} KB</b>) exceeds maximum allowed upload size of <b>{maxSize} KB</b>. Please retry your upload!', msgFilesTooLess: "You must select at least <b>{n}</b> {files} to upload. Please retry your upload!", msgFilesTooMany: "Number of files selected for upload <b>({n})</b> exceeds maximum allowed limit of <b>{m}</b>. Please retry your upload!", msgFileNotFound: 'File "{name}" not found!', msgFileSecured: 'Security restrictions prevent reading the file "{name}".', msgFileNotReadable: 'File "{name}" is not readable.', msgFilePreviewAborted: 'File preview aborted for "{name}".', msgFilePreviewError: 'An error occurred while reading the file "{name}".', msgInvalidFileType: 'Invalid type for file "{name}". Only "{types}" files are supported.', msgInvalidFileExtension: 'Invalid extension for file "{name}". Only "{extensions}" files are supported.', msgValidationError: "File Upload Error", msgLoading: "Loading file {index} of {files} &hellip;", msgProgress: "Loading file {index} of {files} - {name} - {percent}% completed.", msgSelected: "{n} {files} selected", msgFoldersNotAllowed: "Drag & drop files only! {n} folder(s) dropped were skipped.", msgImageWidthSmall: 'Width of image file "{name}" must be at least {size} px.', msgImageHeightSmall: 'Height of image file "{name}" must be at least {size} px.', msgImageWidthLarge: 'Width of image file "{name}" cannot exceed {size} px.', msgImageHeightLarge: 'Height of image file "{name}" cannot exceed {size} px.', dropZoneTitle: "Drag & drop files here<br/><br/>Image size must be less than 100Kb" }, e.extend(e.fn.fileinput.defaults, e.fn.fileinputLocales.en), e.fn.fileinput.Constructor = _, e(document).ready(function () { var i = e("input.file[type=file]"); i.length && i.fileinput() })
            }(window.jQuery);
        });

        $('span.okClose').live("click", function (e) {
            e.preventDefault();
            $(this).closest('tr').find('td:last div.editPopUp').css('display', 'none');
            $("#cover").hide();

            $("#cover").css('display', 'none');

        });

        $('td.img_div').live("click", function (e) {
            e.preventDefault();
            $(this).closest('tr').find('td:last div.openPopupUpload').show();
            $("#cover").css('display', 'block');
        });

        $('a.remove').live("click", function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
        });

    });

    function EnableDisableImageCtrl(obj, id) {
        var rowID = id.split('_')[1];
        var colorID = $(obj).val();
        var flag = false;
        var imgID = $(obj).closest('tr').find('.addProduct');
        $(imgID).attr("src", "");

        $('#dataTable tr:gt(0)').each(function (i) {
            if (i != rowID) {     //&& rowID > 0
                var currentImgID = $('#Color_' + i).closest('tr').find('.addProduct');
                if ($('#Color_' + i).val() == colorID && $(currentImgID).css('display') != 'none') {
                    flag = true;
                    //return;
                }

            }
        });
        //alert(flag);
        if (!flag) {
            var curentColorID = $(imgID).attr('id').split('$')[0];
            if (colorID == curentColorID) {
                $(imgID).attr("src", $(imgID).closest('td').find('#ThumbScreen').val());

            }

            $(imgID).css('display', 'block');
            $('#divPreview_' + rowID).css('pointer-events', 'visible');
        }
        else {
            $(imgID).css('display', 'none');
            $('#divPreview_' + rowID).css('pointer-events', 'none');
            $("#divImages").empty();
            $('.ThumbDiv').empty();

        }
    }
</script>


}

<script type="text/javascript">
    function readURL1(input, id) {
        // alert("abbbbb");
        var imageCount = input.files.length;
        // alert(imageCount);
        if (input.files && input.files[0]) {

            // alert(input.files.count);
            var reader = new FileReader();
            // alert(reader);
            reader.onload = function (e) {
                // var Image = $("img.thumb").attr('id');

                $('#' + id).attr('src', e.target.result);
                //$('#' + id).attr('name', id + "$" + e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }

    };


    //function readURL1(input, id) {
    //    alert("111");
    //    var imageCount = input.files.length;
    //    if (input.files && input.files[0]) {

    //        //alert(input.files.count);
    //        var reader = new FileReader();
    //        //alert(reader);
    //        reader.onload = function (e) {
    //            // var Image = $("img.thumb").attr('id');

    //            $('#' + id).attr('src', e.target.result);
    //            //$('#' + id).attr('name', id + "$" + e.target.result);

    //        }

    //        reader.readAsDataURL(input.files[0]);
    //    }

    //    var imageCount1 = input.files.length;
    //    for (var i = 0; i <= imageCount1; i++) {
    //        var imageSize = input.files[i].size / 1024;
    //        var filetype = input.files[i].type;
    //        var ValidImageTypes = ["image/gif", "image/jpeg", "image/png", "image/GIF", "image/JPEG", "image/PNG", "image/jpg", "image/JPG"];
    //        var img = $("img").size();
    //        alert(img);
    //        if (imageSize > 100) {

    //            alert('Invalid Image Size. Please select another image less than 100kb.');
    //            //return false;
    //            //var empy = $(input).closest(".openPopupUpload").find('.file-preview-frame');
    //            //alert(empy);
    //            //$(empy).remove();


    //        }
    //        if ($.inArray(filetype, ValidImageTypes) < 0) {
    //            alert('Invalid Image Type.');
    //            return;
    //        }
    //        else {

    //        }

    //        var imageCount = input.files.length;
    //        if (input.files && input.files[0]) {

    //            //alert(input.files.count);
    //            var reader = new FileReader();
    //            //alert(reader);
    //            reader.onload = function (e) {
    //                // var Image = $("img.thumb").attr('id');

    //                $('#' + id).attr('src', e.target.result);
    //                //$('#' + id).attr('name', id + "$" + e.target.result);

    //            }

    //            reader.readAsDataURL(input.files[0]);
    //        }

    //    }





    //    // alert("1");
    //};



</script>

<script>
    //function CreateThumbnail(input, name) {
    //    $("#" + name).attr("src", $(input).val());
    //    var Imgsource = $(input).val();
    //    var temp = $("#ThumbIndex").val();
    //    $("#ThumbIndex").val(temp + "$" + name + "#" + Imgsource);
    //}

    function CreateThumbnail(input, id) {
        var find = $(input).closest('.file-preview-thumbnails').find('input');
        var getId = $(find).attr('id');
        var idRow = $(input).closest("tr").attr('id');
        $(find).attr('name', idRow);
        var checked = $('input:checked').attr('id');
        var name = $('input:checked').attr('name');

    }


</script>












