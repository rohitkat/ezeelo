@model IEnumerable<ModelLayer.Models.Offer>

@{
    ViewBag.Title = "Index";
}

<script src="~/Content/js/jquery-2.1.3.min.js"></script>
<link href="~/Content/css/jquery.dataTables.css" rel="stylesheet" />
<script src="~/Content/js/jquery.dataTables.js" language="jascript"></script>

<script type="text/javascript" class="init">
    $(document).ready(function () {
        $('#tblData').DataTable({
            dom: 'T<"clear">lfrtip',
            "processing": true,
            "serverSide": true,
        });
    });
</script>

<style>
    .paginate_disabled_previous {
        font-size: 16px;
        cursor: pointer;
    }

    .paginate_disabled_next {
        font-size: 16px;
        cursor: pointer;
        margin-left: 8px;
    }
    .btn-success {
        background-color: #8F6C39;
        border: 1px solid #8F6C39;
    }

        .btn-success:hover {
            background-color: #D29B4C;
            border: 1px solid #D29B4C;
        }
    .btn-primary {
        background-color: #DA7741;
        border: 1px solid#DA7741;
    }
    .btn-primary:hover {
        background-color: #DA7741;
        border: 1px solid#DA7741;
    }
</style>


@*<p>
        @Html.ActionLink("Create Offer", "Create")
    </p>*@
<div class="span10" id="content">
   
        <div class="row-fluid sortable ui-sortable">

            <div class="box span12">
                <div class="box-header">
                    <h2><i class="icon-edit"></i><span class="break"></span>Master Offer</h2>
                    <div class="pull-right jumpBtn">
                        @Html.ActionLink("Create Offer", "Create", null, new { @class = "btn grid-addpro btn-small CreateFormBtn" })
                        </div>
                    </div>
                <div class="box-content">
                    <table class="table table-striped table-bordered display prodct_upl_temp" id="tblData" style="border: 1px Solid #B3A185;">
                        <thead>
                            <tr>

                                <th>
                                    @Html.DisplayNameFor(model => model.ShortName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.IsFree)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.MinPurchaseQty)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FreeOty)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DiscountInRs)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DiscountInPercent)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.IsActive)
                                </th>

                                <th></th>
                            </tr>
                        </thead>
                        @foreach (var item in Model)
                        {
                            <tbody>
                                <tr>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.ShortName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IsFree)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.MinPurchaseQty)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FreeOty)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DiscountInRs)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DiscountInPercent)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.IsActive)
                                    </td>

                                    <td>
                                        @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |*@
                                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-small grid-btn1" })|

                                        @*@Html.ActionLink("Delete", "Delete", new { id = item.ID })*@

                                        @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-small grid-btn2" })
                                    </td>
                                </tr>
                            </tbody>
                        }

                    </table>
                    </div>
                </div>
        </div>

</div>
@*<script src="~/Content/js/jquery-1.9.1.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("input#btnSearch").on('click', function () {
            $('#loader_img').show();
            var pagecount = 0;
            var page = 1;
            var approvedStatus = $('input[name=Product]:radio:checked').val();
            var toDate = $('#txtToDate').val();
            var fromDate = $('#txtFromDate').val();
            var isValid = ValidateDate(fromDate, toDate);
            if (isValid == false) {
                $('#loader_img').hide();
                return;
            }
            $.ajax({
                url: '@Url.Action("GetReport", "ProductApprovedNonApproved")',
                data: { 'page': page, 'pagecount': pagecount, 'fromDate': fromDate, 'toDate': toDate, 'approvedStatus': approvedStatus },
                type: "Post",
                cache: false,
                success: function (data) {
                    //alert(data);
                    $('#loader_img').hide();
                    $('#divReport').empty();
                    $('#divReport').append(data);
                },
                error: function (data) {

                }
            });
        });
    });

    $("select#stateID").bind('change', function () {

        var stateid = $("select#stateID option:selected").val();
        if (stateid == 0) {
            $('#ddlCity').empty();
            $('#ddlfranchise').empty();
            $('#ddlMerchant').empty();
            return;
        }
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetCityByStateId", "ProductApprovedNonApproved")',
            data: { 'stateID': stateid },
            //dataType: "json",
            cache: false,
            success: function (msg) {
                $('#ddlCity').empty();
                $('#ddlCity').append('<option value=0>Select City</option>');
                $.each(msg, function (index, item) {
                    $('#ddlCity').append('<option value=' + item.CityID + '>' + item.CityName + '</option>');
                });
            },
            error: function (x, e) {
                alert('Failure');

            }
        });

        //}
    });


    $("select#ddlCity").bind('change', function () {

        var cityID = $("select#ddlCity option:selected").val();
        if (cityID == 0) {
            $('#ddlfranchise').empty();
            $('#ddlMerchant').empty();
            return;
        }
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetFranchiseByCityId", "ProductApprovedNonApproved")',
            data: { 'cityID': cityID },
            cache: false,
            success: function (msg) {
                $('#ddlfranchise').empty();
                $('#ddlfranchise').append('<option value=0>Select Franchise</option>');
                $.each(msg, function (index, item) {
                    $('#ddlfranchise').append('<option value=' + item.FranchiseID + '>' + item.FranchiseName + '</option>');
                });
            },
            error: function (x, e) {
                alert('Failure');

            }
        });

        //}
    });

    $("select#ddlfranchise").bind('change', function () {
        var franchiseID = $("select#ddlfranchise option:selected").val();
        if (franchiseID == 0) {
            $('#ddlMerchant').empty();
            return;
        }
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMerchantByFranchiseId", "ProductApprovedNonApproved")',
            data: { 'franchiseID': franchiseID },
            //dataType: "json",
            cache: false,
            success: function (msg) {
                $('#ddlMerchant').empty();
                $('#ddlMerchant').append('<option value=0>Select Merchant</option>');
                $.each(msg, function (index, item) {
                    $('#ddlMerchant').append('<option value=' + item.MerchantID + '>' + item.MerchantName + '</option>');
                });
            },
            error: function (x, e) {
                alert('Failure');

            }
        });

        //}
    });
    function ValidateDate(fromDate, toDate) {
        if (fromDate == '' && toDate == '') {
            $('[id*=lblMsg]').text('Please Select From Date and To Date.');
            return false;
        }
        else if (fromDate == '') {
            $('[id*=lblMsg]').text('Please Select From Date.');
            return false;
        }
        else if (toDate == '') {
            $('[id*=lblMsg]').text('Please Select To Date.');
            return false;
        }

        if (fromDate != '' && toDate != '') {
            dateFirst = fromDate.split('/');
            dateSecond = toDate.split('/');
            var from = new Date(dateFirst[2], dateFirst[1], dateFirst[0]); //Year, Month, Date
            var to = new Date(dateSecond[2], dateSecond[1], dateSecond[0]);
            if (from > to) {
                $('[id*=lblMsg]').text('To Date must be greater than From Date.');
                return false;
            }
            else {
                $('[id*=lblMsg]').text('');
            }
        }
    }
</script>*@
