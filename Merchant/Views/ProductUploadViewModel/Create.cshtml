@model ModelLayer.Models.ViewModel.ProductUploadViewModel

@*@{
        Layout = null;
    }*@


@using (Html.BeginForm())
{
    <link href="~/Content/css/jquery-ui-1.8.21.custom.css" rel="stylesheet" />
    @Html.AntiForgeryToken()
    <div id="content" class="span10">
        <ul class="breadcrumb">
            <li>
                <i class="icon-home"></i>
                <a href="index.html">Home</a>
                <i class="icon-angle-right"></i>
            </li>
            <li>
                <i class="icon-edit"></i>
                <a href="#">Forms</a>
            </li>
        </ul>
        <div class="row-fluid sortable ui-sortable">
            <div class="box span12">
                <div class="box-header" data-original-title="">
                    <h2><i class="halflings-icon edit"></i><span class="break"></span>Form Elements</h2>
                    <div class="box-icon">
                        <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
                        <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                        <a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
                    </div>
                </div>
                <div class="box-content">
                    <div class="form-horizontal">
                        <h4>ProductUploadViewModel</h4>
                        <hr />
                        @Html.ValidationSummary(true)
                        <div class="control-group">
                            File
                            <div class="col-md-10">
                                <input type="file" name="Files" id="Files" />
                                <br />
                                <input type="submit" name="Upload" value="Upload" id="Upload" />
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.ProductName)
                                @Html.ValidationMessageFor(model => model.ProductName)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.CategoryID, "CategoryID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.DropDownList("CategoryID", String.Empty)
                                @Html.ValidationMessageFor(model => model.CategoryID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.WeightInGram, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.WeightInGram)
                                @Html.ValidationMessageFor(model => model.WeightInGram)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.LengthInCm, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.LengthInCm)
                                @Html.ValidationMessageFor(model => model.LengthInCm)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.BreadthInCm, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.BreadthInCm)
                                @Html.ValidationMessageFor(model => model.BreadthInCm)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.HeightInCm, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.HeightInCm)
                                @Html.ValidationMessageFor(model => model.HeightInCm)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.Description)
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(model => model.BrandID, "BrandID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.DropDownList("BrandID", String.Empty)
                                @Html.ValidationMessageFor(model => model.BrandID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.SearchKeyword, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.SearchKeyword)
                                @Html.ValidationMessageFor(model => model.SearchKeyword)
                            </div>
                        </div>


                        <div class="control-group">
                            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">

                                @Html.CheckBoxFor(model => model.IsActive, new { @class = "checker" })
                                @Html.ValidationMessageFor(model => model.IsActive)

                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(model => model.ColorID, "ColorName", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.DropDownList("ColorID", String.Empty)
                                @Html.ValidationMessageFor(model => model.ColorID)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(model => model.SizeID, "SizeName", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.DropDownList("SizeID", String.Empty)
                                @Html.ValidationMessageFor(model => model.SizeID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.DimensionID, "DimensionName", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.DropDownList("DimensionID", String.Empty)
                                @Html.ValidationMessageFor(model => model.DimensionID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.MaterialID, "MaterialName", new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.DropDownList("MaterialID", String.Empty)
                                @Html.ValidationMessageFor(model => model.MaterialID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.Qty, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.Qty)
                                @Html.ValidationMessageFor(model => model.Qty)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.ReorderLevel, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.ReorderLevel)
                                @Html.ValidationMessageFor(model => model.ReorderLevel)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.StockStatus, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.StockStatus)
                                @Html.ValidationMessageFor(model => model.StockStatus)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.PackSize, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.PackSize)
                                @Html.ValidationMessageFor(model => model.PackSize)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.PackUnitID, "PackUnitID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("PackUnitID", String.Empty)
                                @Html.ValidationMessageFor(model => model.PackUnitID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.MRP, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.MRP)
                                @Html.ValidationMessageFor(model => model.MRP)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.WholeSaleRate, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.WholeSaleRate)
                                @Html.ValidationMessageFor(model => model.WholeSaleRate)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.RetailerRate, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.RetailerRate)
                                @Html.ValidationMessageFor(model => model.RetailerRate)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.IsInclusiveOfTax, new { @class = "control-label col-md-2" })
                            <div class="col-md-10 controls">
                                @Html.EditorFor(model => model.IsInclusiveOfTax)
                                @Html.ValidationMessageFor(model => model.IsInclusiveOfTax)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(model => model.DisplayProductFromDate, new { @class = "control-label col-md-2 " })
                            <div class="controls">
                                @Html.TextBoxFor(model => model.DisplayProductFromDate, new { @class = "input-xlarge datepicker" })
                                @Html.ValidationMessageFor(model => model.DisplayProductFromDate)

                            </div>
                        </div>

                        <div class="control-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

