@model ModelLayer.Models.ViewModel.ProductUploadViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductUploadViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            File
            <div class="col-md-10">
                <input type="file" name="Files" id="Files" />
                <br />
                <input type="submit" name="Upload" value="Upload" id="Upload" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ID", (IEnumerable<SelectListItem>)ViewBag.CategoryID, "Select", new { id = "ID", style = "width:265px;" })
                @Html.ValidationMessageFor(model => model.CategoryID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeightInGram, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WeightInGram)
                @Html.ValidationMessageFor(model => model.WeightInGram)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LengthInCm, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LengthInCm)
                @Html.ValidationMessageFor(model => model.LengthInCm)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BreadthInCm, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BreadthInCm)
                @Html.ValidationMessageFor(model => model.BreadthInCm)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeightInCm, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeightInCm)
                @Html.ValidationMessageFor(model => model.HeightInCm)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.BrandID, "BrandID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandID", (IEnumerable<SelectListItem>)ViewBag.BrandID, "Select", new { id = "BrandID", style = "width:265px;" })
                @Html.ValidationMessageFor(model => model.BrandID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SearchKeyword, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SearchKeyword)
                @Html.ValidationMessageFor(model => model.SearchKeyword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ColorID, "ColorName", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ColorID", String.Empty)
                @Html.ValidationMessageFor(model => model.ColorID)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SizeID, "SizeName", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SizeID", String.Empty)
                @Html.ValidationMessageFor(model => model.SizeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DimensionID, "DimensionName", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DimensionID", String.Empty)
                @Html.ValidationMessageFor(model => model.DimensionID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaterialID, "MaterialName", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaterialID", String.Empty)
                @Html.ValidationMessageFor(model => model.MaterialID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qty, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qty)
                @Html.ValidationMessageFor(model => model.Qty)
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ReorderLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReorderLevel)
                @Html.ValidationMessageFor(model => model.ReorderLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StockStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockStatus)
                @Html.ValidationMessageFor(model => model.StockStatus)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackSize, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackSize)
                @Html.ValidationMessageFor(model => model.PackSize)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackUnitID, "PackUnitID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PackUnitID", String.Empty)
                @Html.ValidationMessageFor(model => model.PackUnitID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MRP, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MRP)
                @Html.ValidationMessageFor(model => model.MRP)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WholeSaleRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WholeSaleRate)
                @Html.ValidationMessageFor(model => model.WholeSaleRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RetailerRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RetailerRate)
                @Html.ValidationMessageFor(model => model.RetailerRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsInclusiveOfTax, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsInclusiveOfTax)
                @Html.ValidationMessageFor(model => model.IsInclusiveOfTax)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayProductFromDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayProductFromDate)
                @Html.ValidationMessageFor(model => model.DisplayProductFromDate)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
