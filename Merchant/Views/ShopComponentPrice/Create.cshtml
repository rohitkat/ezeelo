@model ModelLayer.Models.ShopComponentPrice

@{
    ViewBag.Title = "eZeelo:Add Component Prices";
}

<style type="text/css">
    .radio input[type="radio"], .checkbox input[type="checkbox"] {
        float: left;
        margin-left: 0px;
    }

    div.radio {
        margin-top: -13px !important;
    }
</style>

@*<h2>Create</h2>*@

<div id="content" class="span10">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="row-fluid ">
            <div class="box span12">
                <div class="box-header">
                    <h2><i class="icon-edit"></i><span class="break"></span>Add Component Prices</h2>

                </div>
                <div class="box-content">
                    <form class="form-horizontal">

                        <div>@Html.ValidationMessage("Error")</div>
                        @Html.ValidationSummary()

                        <div class="control-group">
                            @Html.LabelFor(model => model.ComponentID, "Component", new { @class = "control-label span3" })
                            <div class="controls">
                                @Html.DropDownList("ComponentID", null, "Select Component", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.ComponentID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.ComponentUnitID, "Component Unit", new { @class = "control-label span3" })
                            <div class="controls">
                                @Html.DropDownList("ComponentUnitID", null, "Select Unit", new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="control-group">
                            <label class="span3"></label>
                            <div class="controls">
                                @Html.RadioButton("Product", "1", true, new { id = "rbPrice" }) Price
                                @Html.RadioButton("Product", "2", false, new { id = "rbPercent" }) Percent
                            </div>
                        </div>
                        <br />
                        <div class="control-group">
                            @Html.LabelFor(model => model.PerUnitRateInRs, "Per Unit Rate In Rs", new { @class = "control-label span3" })
                            <div class="controls">
                                @Html.TextBoxFor(model => model.PerUnitRateInRs)

                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.PerUnitRateInPer, "Per Unit Rate In Percentage", new { @class = "control-label span3" })
                            <div class="controls">
                                @Html.TextBoxFor(model => model.PerUnitRateInPer, new { @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.DependentOnComponentID, "Dependent On Component", new { @class = "control-label span3" })
                            <div class="controls">
                                @Html.DropDownList("DependentOnComponentID", "Select Dependent Component")
                                @Html.ValidationMessageFor(model => model.DependentOnComponentID)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label span3" })
                            <div class="controls">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>


                        <div class="form-actions">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-Ifrm-submit" onclick="return Validate();" />

                                @Html.ActionLink("Back to List", "Index", string.Empty, new { @class = "btn btn-brown" })
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    }
</div>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
<script src="~/Content/js/jquery-1.9.1.min.js"></script>
<script>
    $("input[name=Product]:radio").change(function () {
        var Status = $('input[name=Product]:radio:checked').val();
        if (Status == 2) {//if percent is checked
            $('#PerUnitRateInPer:input').removeAttr('readonly');
            $('#PerUnitRateInRs:input').attr('readonly', 'readonly');
            $('#PerUnitRateInRs:input').val(0.00);
            $('#PerUnitRateInPer:input').val('');
        }
        else if (Status == 1) { //if price is checked
            $('#PerUnitRateInRs:input').removeAttr('readonly');
            $('#PerUnitRateInPer:input').attr('readonly', 'readonly');
            $('#PerUnitRateInPer:input').val(0.00);
            $('#PerUnitRateInRs:input').val('');

        }
    });


    function Validate() {
        if (($('#PerUnitRateInRs:input').val() == "" && $('#PerUnitRateInPer:input').val() == "")) {
            alert('Please fill value in Percent or Price field.');
            return false;
        }

        if (($('#PerUnitRateInRs:input').val() == 0 && $('#PerUnitRateInPer:input').val() == "")) {
            alert('Please fill value in Percent field.');
            return false;
        }
        else if (($('#PerUnitRateInPer:input').val() == 0 && $('#PerUnitRateInRs:input').val() == "")) {
            alert('Please fill value in Rs field.');
            return false;
        }
    }


    $("select#ComponentID").bind('change', function () {

        var ComponentName = $("select#ComponentID option:selected").text();
        if (ComponentName == 'VAT') {
            $("#ComponentUnitID").prop("disabled", true);
            $("select#ComponentUnitID").val(1);
            $("#DependentOnComponentID").prop("disabled", true);

        }
        else {

            $("#ComponentUnitID").prop("disabled", false);
            $("#DependentOnComponentID").prop("disabled", false);
        }
    });

    $("select#DependentOnComponentID").bind('change', function () {

        var DepID = $("select#DependentOnComponentID option:selected").val();
        if (DepID > 0) {
            $("select#ComponentUnitID").val(1);
            $("#ComponentUnitID").prop("disabled", true);
        }
        else {

            $("#ComponentUnitID").prop("disabled", false);
        }

    });

</script>