@model ModelLayer.Models.StockComponentOfferDuration

@{
    ViewBag.Title = "Create";
}

<style>
    .oferbox {
        width: 118px;
    }

    .oferbox2 {
        width: 125px;
    }

    .scndRowOfer {
    }

    .oferbox2 {
    }

    .timeClas {
        width: 75px;
    }

    .timeClas2 {
    }
</style>
<div id="content" class="span10">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="row-fluid ">
            <div class="box ">
                <div class="box-header">
                    <h2><i class="icon-edit"></i><span class="break"></span>Creat</h2>

                </div>
                <div class="box-content">
                    <form class="form-horizontal">

                        @Html.ValidationSummary(true)
                        <div>@Html.ValidationMessage("Error")</div>
                        <label id="lblOfferMsg" style="color:red"></label>
                        <label id="lblMsg" style="color:red"></label>
                        <label id="lbltime" style="color:red"></label>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ComponentOfferID, "Offer Name", new { @class = "control-label col-md-2" })
                            <div class="">
                                @Html.DropDownList("OfferID", null, "Select Offer", new { @class = "span2", required = "required" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDateTime, "Start DateTime", new { @class = "control-label col-md-2" })
                            <div class="">
                                @Html.TextBoxFor(model => model.StartDateTime, new { @class = "input-large datepicker span2", id = "StartDateTime", @readonly = "readonly" })
                                <label for="StartDateTime" class="dtPic"><i class="glyphicons-icon calendar"></i></label>
                                @Html.DropDownList("ddlFrmHour", new SelectList(ViewBag.Frmhours, "Text", "Value"), "Select Hour", new { @class = "oferbox", required = "required" })
                                @Html.DropDownList("ddlFrmMin", new SelectList(ViewBag.Frmmin, "Text", "Value"), "Select Minute", new { @class = "oferbox2", required = "required" })
                                @Html.DropDownList("ddlFrmAmPm", new List<SelectListItem>

                 {
                    new SelectListItem{ Text="AM", Value = "AM" },
                    new SelectListItem{ Text="PM", Value = "PM" }
                 }, new { @class = "timeClas" })


                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDateTime, new { @class = "control-label col-md-2" })
                            <div class="">
                                @Html.TextBoxFor(model => model.EndDateTime, "End DateTime", new { @class = "input-large datepicker span2", id = "EndDateTime", @readonly = "readonly" })
                                <label for="EndDateTime" class="dtPic"><i class="glyphicons-icon calendar"></i></label>
                                @Html.DropDownList("ddlToHour", new SelectList(ViewBag.Tohours, "Text", "Value"), "Select Hour", new { @class = "oferbox", required = "required" })
                                @Html.DropDownList("ddlToMin", new SelectList(ViewBag.Tommin, "Text", "Value"), "Select Minute", new { @class = "oferbox2", required = "required" })
                                @Html.DropDownList("ddlToAmPm", new List<SelectListItem>
                 {
                    new SelectListItem{ Text="AM", Value = "AM" },
                    new SelectListItem{ Text="PM", Value = "PM" }
                 }, new { @class = "timeClas" })

                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.IsActive, new { @class = "control-label span2" })
                            <div class="">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>

                        <div class="form-actions">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn  btn-Ifrm-submit1 dollr" onclick="return ValidateDate();" />
                                @Html.ActionLink("Back to List", "Index", string.Empty, new { @class = "btn btn-brown" })
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    }
</div>

<script type="text/javascript">

    function ValidateDate() {
        $('[id*=lblMsg]').text('');


        var fromDate = $("[id=StartDateTime]").val();
        var toDate = $('#EndDateTime').val();
        var frommin = $("select#ddlFrmMin option:selected").val();
        var tomin = $("select#ddlToMin option:selected").val();
        var frmhr = $("select#ddlFrmHour option:selected").val();
        var tohr = $("select#ddlToHour option:selected").val();
        if (fromDate == '' && toDate == '') {
            $('[id*=lblMsg]').text('Please Select From Date and To Date.');
            return false;
        }
        else if (fromDate == '') {
            $('[id*=lblMsg]').text('Please Select From Date.');
            return false;
        }
        else if (toDate == '') {
            $('[id*=lblMsg]').text('Please Select To Date.');

            return false;
        }

        if (fromDate != '' && toDate != '') {
            dateFirst = fromDate.split('/');
            dateSecond = toDate.split('/');
            var from = new Date(dateFirst[2], dateFirst[1], dateFirst[0]); //Year, Month, Date
            var to = new Date(dateSecond[2], dateSecond[1], dateSecond[0]);
            if (from > to) {
                $('[id*=lblMsg]').text('To Date must be greater than From Date.');
                return false;
            }
            else {
                $('[id*=lblMsg]').text('');
            }
        }



    }
</script>