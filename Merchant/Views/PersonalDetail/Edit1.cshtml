@model ModelLayer.Models.PersonalDetail

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutForProfileAlert.cshtml";
}
<style>
    .field-validation-error {
        color: #ff0000 !important;
    }

    .succes-msg {
        color: #31A012;
        font-size: 20px;
    }

    #msform1 fieldset:not(:first-of-type) {
        display: none;
    }

    body {
        background: url(../Content/img/mer-bg.jpg) repeat 0px 0px;
    }
    #content {
        background:url(../Content/img/mer-bg.jpg) repeat 0px 0px;
        padding: 0;
      
       
    }
    #progressbar li {
        width: 74%!important;
    }
     .deco-div {
        /*background: url(../../Content/assets/img/loadar.gif) no-repeat 0px 0px;*/
        /*background: url(../../Content/assets/img/slider/snow03-05.gif) repeat 0px 0px;*/
        background: url(../../Content/assets/img/slider/56ed2f70e3d139428884c40847498.gif) repeat 0px 0px;
    }

    .deco-div1 {
        background: #838B92;
        display: block;
        height: 50px;
        margin-top: 233px;
        width: 628px;
        margin-left: -29px;
        z-index: 28;
        position: absolute;
    }

    fieldset {
        width: 100% !important;
        margin: 0 0% !important;
        padding: 5px 30px;
    }

    .max-width {
        width: 93% !important;
    }

    .discrip_box {
        height: 103px !important;
    }

    .form-horizontal {
        /*margin-left: 80px;*/
    }

    #progressbar li {
        float: none !important;
    }

    .fs-title {
        margin-top: -15px !important;
    }

    .fs-title {
        margin-bottom: -12px !important;
        padding-bottom: 5px !important;
    }

    
    .iframeDiv fieldset .max-width {
        width: 85% !important;
    }
    .iframeDiv {
        width:79.7%;
    }
    .input-parent button {
        display: none;
    }
    /*Beatpicker Css*/
    .beatpicker-clearButton button {
        display: none;
    }

    .input-parent button {
        display: none;
    }

    .header-navbar-button {
        position: absolute !important;
    }

    .beatpicker .main-nav .current-indicator {
        text-align: center !important;
    }

    .beatpicker .main-nav .prev1 {
        left: 0 !important;
        width: 14%;
        padding: 0px 10px;
        color: #fff;
        font-size: 16px;
    }

    .beatpicker .main-nav .next1 {
        right: 0 !important;
        width: 9%;
        color: #fff;
        font-size: 16px;
    }

    .beatpicker .main-nav .prev1:hover {
        left: 0 !important;
        width: 14%;
        padding: 0px 10px;
        color: #fff;
        font-size: 20px;
        cursor: pointer !important;
    }

    .beatpicker .main-nav .next1:hover {
        right: 0 !important;
        width: 9%;
        color: #fff;
        font-size: 20px;
        cursor: pointer !important;
    }
    /*Beatpicker Css End*/
    
</style>

<link href="~/Content/css/BeatPicker.min.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.11.0.min.js"></script>
<script src="~/Content/js/BeatPicker.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var statusGenerator = function (text) {
            var statusElem = $(".status-box");
            var child = $("<span style='display: block'></span>").text(text);
            statusElem.append(child);
        };
        myDatePicker.on("select", function (data) {
            statusGenerator(data.string + " selected")
        });
        myDatePicker.on("change", function (data) {
            statusGenerator("Date picker changed current date: " + data.string);
        });
        myDatePicker.on("show", function () {
            statusGenerator("Date picker show")
        });
        myDatePicker.on("clear", function (data) {
            statusGenerator("Date picker cleared. cleared date: " + data.string)
        });
        myDatePicker.on("hide", function () {
            statusGenerator("Date picker hide")
        });
    })

</script>
<script>
    $('.show-picker').click(function (e) {
        e.stopPropagation();
        myPicker.show();
    });
    $('.hide-picker').click(function (e) {
        e.stopPropagation();
        myPicker.hide();
    })
</script>



<link href="~/Content/assets/css/style.css" rel="stylesheet" />
<script src="~/Content/js/jquery-1.9.1.min.js"></script>
@*
<script src="~/Content/js/jquery.easing.min.js"></script>*@
<link href="http://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<link href="~/Content/assets/css/form-design.css" rel="stylesheet" />
<link href="~/Content/css/BeatPicker.min.css" rel="stylesheet" />


<div id="content" class="span12">



    <div id="" class="span12" style="margin-top: 26px; ">

        @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()

        <form class="form-horizontal" id="msform1">
            <div class="span12">
                <div class="span2">
                    <ul id="progressbar">
                        <li class="active">Personal Details</li>
                        <li>Business Details</li>
                        <li>Shop Details</li>
                        <li>Bank Details</li>
                    </ul>
                </div>
                <div class="span10 iframeDiv">
                    <fieldset>
                        <h2 class="fs-title">Personal Details</h2>
                        <div class="form-horizontal">
                            <div style="margin-top:12px; margin-bottom:-17px;">
                                @if (ViewBag.Message != null)
                                {
                                <span class="succes-msg" style="margin: 0 62px;">@ViewBag.Message</span>
                                }
                            </div>
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.ID)

                            <div class="control-group">
                                @*@Html.LabelFor(model => model.UserLoginID, "UserLoginID", new { @class = "control-label col-md-2" })*@
                                <div class="">
                                    @*@Html.("UserLoginID", String.Empty)*@
                                    @Html.HiddenFor(model => model.UserLoginID)
                                    @Html.ValidationMessageFor(model => model.UserLoginID)

                                </div>
                            </div>
                            <div class="control-group mrg-btm">
                                <div class="NameDescription ">
                                    <div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.SalutationID, "Salutation", new { @class = "col-md-2" })
                                        <div>
                                            @Html.DropDownList("SalutationID", String.Empty)

                                            @Html.ValidationMessageFor(model => model.SalutationID)
                                        </div>
                                    </div>

                                    <div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.FirstName, new { @class = "col-md-2" })
                                        <div class="">
                                            @Html.TextBoxFor(model => model.FirstName, new { @class = "input-width", required = "required" })
                                            @Html.ValidationMessageFor(model => model.FirstName)
                                        </div>
                                    </div>

                                    <div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.MiddleName, new { @class = "col-md-2" })
                                        <div class="">
                                            @Html.TextBoxFor(model => model.MiddleName, new { @class = "input-width" })
                                            @Html.ValidationMessageFor(model => model.MiddleName)
                                        </div>
                                    </div>

                                    <div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.LastName, new { @class = "col-md-2" })
                                        <div class="">
                                            @Html.TextBoxFor(model => model.LastName, new { required = "required", @class = "input-width" })
                                            @Html.ValidationMessageFor(model => model.LastName)
                                        </div>
                                    </div>
                                    <div class="clr"></div>
                                </div>
                            </div>
                            <div class="control-group mrg-btm">
                                <div class="NameDescription ">
                                    <div class="control-group  mrg-left">
                                        @Html.LabelFor(model => model.Gender, new { @class = " col-md-2" })
                                        <div class="">
                                            @*@Html.EditorFor(model => model.Gender)*@
                                            @Html.DropDownList("Gender")
                                            @Html.ValidationMessageFor(model => model.Gender)
                                        </div>
                                    </div>
                                    <div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.DOB, new { @class = "col-md-2 dtPic" })
                                        <div class="">
                                            @*@Html.TextBoxFor(model => model.DOB, new { @class ="datepicker dob-width ", @id = "txtToDate" })*@
                                            <input id="DOB1" name="DOB1" type="text" value="@ViewBag.DOB1" data-beatpicker="true" class="input-width" data-beatpicker-position="['*','*']" style=" background-position: 155px 3px; background-size: 19px 19px;" />
                                            @*@Html.TextBox("DOB1", null, new { @class = "datepicker dob-width ", @id = "DOB1" })*@
                                            @Html.ValidationMessageFor(model => model.DOB)
                                       </div>
                                   </div>

                                   <div class="control-group mrg-left">
                                        @Html.LabelFor(model => model.AlternateMobile, "Mobile", new { @class = "col-md-2" })
                                        <div class="">
                                            @Html.TextBoxFor(model => model.AlternateMobile, new { maxlength = 10, @class = "input-width" })
                                            @Html.ValidationMessageFor(model => model.AlternateMobile)
                                        </div>
                                    </div>
                                    <div class="control-group  mrg-left">
                                        @Html.LabelFor(model => model.PincodeID, "Pincode ID")

                                        <div class="">
                                            @Html.TextBox("Pincode", null, new { @id = "Pincode", @class = "form-control-Widout-block ", @placeholder = "Enter Pincode", @onkeypress = "return isValidPincode(event)" })
                                            <img id="Pincode_loading" src="~/Content/img/ajax_loader.gif" style="height: 20px; float: right; display: none" />
                                            <div id="divPincodeError" class="alert-danger focused divPincodeError-Class1" style="display:none;"> </div>
                                        </div>
                                    </div>
                                    <div class="clr"></div>

                                </div>
                            </div>

                            <div class="control-group mrg-left">
                                @*@Html.LabelFor(model => model.Address)*@
                                <div class="">
                                    @Html.TextAreaFor(model => model.Address, new { @class = "discrip_box textarea-adjust " })
                                    @Html.ValidationMessageFor(model => model.Address)
                                </div>
                            </div>
                            <div class="control-group  mrg-left">
                                @Html.LabelFor(model => model.AlternateEmail, "Email ", new { @class = " col-md-2" })
                                <div class="">
                                    @Html.EditorFor(model => model.AlternateEmail)
                                    @Html.ValidationMessageFor(model => model.AlternateEmail)
                                </div>
                            </div>
                            <div class="clr"></div>
                            <input type="submit" value="Save" class="btn btn-Ifrm-submit mrg-left mrg-top " />

                            <div class="control-group  mrg-btm">
                                @*@Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })*@
                                <div class="">
                                    @*@Html.EditorFor(model => model.IsActive)*@
                                    @Html.HiddenFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                </div>
                            </div>

                            <div class="control-group  mrg-btm">
                                @*@Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })*@
                                <div class="">
                                    @*@Html.EditorFor(model => model.CreateDate)*@
                                    @Html.HiddenFor(model => model.CreateDate)
                                    @Html.ValidationMessageFor(model => model.CreateDate)
                                </div>
                            </div>

                            <div class="control-group">
                                @*@Html.LabelFor(model => model.CreateBy, "CreateBy", new { @class = "control-label col-md-2" })*@
                                <div class="">
                                    @*@Html.DropDownList("CreateBy", String.Empty)*@
                                    @Html.HiddenFor(model => model.CreateBy)
                                    @Html.ValidationMessageFor(model => model.CreateBy)

                                </div>

                            </div>

                        </div>

                        <input type="button" name="next" class="next action-button btn btn-brown pull-right" value="Next" style="margin-top: 18px; margin-right:51px;" />

                    </fieldset>
                    <fieldset>
                        <h2 class="fs-title">Business Details</h2>

                        <iframe src='@Url.Action("Edit", "BusinessDetail")' width="100%" height="400px" frameborder="0" id="iframePersonalDetail" class="tab-pane active mrg-Reduce"></iframe>

                        <input type="button" name="next" class="next action-button btn  btn-brown pull-right" value="Next" />
                        <input type="button" name="previous" class="previous action-button btn  btn-brown pull-left" value="Previous" />


                    </fieldset>
                    <fieldset class="shop_div">
                        <h2 class="fs-title">Shop Detail</h2>

                        <iframe src='@Url.Action("Edit", "shop")' width="100%" height="750px" frameborder="0" id="iframePersonalDetail" class="tab-pane active mrg-Reduce"></iframe>
                        <input type="button" name="next" class="next action-button btn  btn-brown pull-right" value="Next" />
                        <input type="button" name="previous" class="previous action-button btn  btn-brown pull-left" value="Previous" />


                    </fieldset>
                    <fieldset>
                        <h2 class="fs-title">Bank Detail</h2>
                        <iframe src='@Url.Action("Edit", "OwnerBank")' width="100%" height="300px" frameborder="0" id="iframePersonalDetail" class="tab-pane active  mrg-Reduce"></iframe>
                        @Html.ActionLink("Finish", "Index", "Home", string.Empty, new { @class = "action-button btn btn-nxt btn-brown pull-right " })
                        <input type="button" name="previous" class="previous action-button btn btn-brown" value="Previous" />

                    </fieldset>
                </div>
            </div>
        </form>

        }

    </div>
    @*<div id="" class="span12 deco-div" style=" margin-top: 32px; background-color: #FFF; padding: 11px 27px; height:397px;">


        <img src="~/Content/assets/img/dribbble_4.gif" style="width: 587px;
        position: absolute;
        z-index: 40;" />


        <img src="~/Content/assets/img/walk%20in%20place.gif" style=" width: 193px; position: relative; z-index: 12; margin-top: -33px; top: 273px;" />
        <div class="deco-div1"></div>
    </div>*@

</div>
<script defer="defer">
    $(function () {

        //jQuery time
        var current_fs, next_fs, previous_fs; //fieldsets
        var left, opacity, scale; //fieldset properties which we will animate
        var animating; //flag to prevent quick multi-click glitches

        $(".next").click(function () {

            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            next_fs = $(this).parent().next();

            //activate next step on progressbar using the index of next_fs
            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

            //show the next fieldset
            next_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale current_fs down to 80%
                    scale = 1 - (1 - now) * 0.2;
                    //2. bring next_fs from the right(50%)
                    left = (now * 50) + "%";
                    //3. increase opacity of next_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'transform': 'scale(' + scale + ')' });
                    next_fs.css({ 'left': left, 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        $(".previous").click(function () {

            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            previous_fs = $(this).parent().prev();

            //de-activate current step on progressbar
            $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

            //show the previous fieldset
            previous_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale previous_fs from 80% to 100%
                    scale = 0.8 + (1 - now) * 0.2;
                    //2. take current_fs to the right(50%) - from 0%
                    left = ((1 - now) * 50) + "%";
                    //3. increase opacity of previous_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'left': left });
                    previous_fs.css({ 'transform': 'scale(' + scale + ')', 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        $(".submit").click(function () {
            return false;
        })

    });
</script>
<script src="~/Content/js/jquery-2.1.3.min.js"></script>
<script type="text/javascript">
    var lPincode = $('#Pincode').val()
    $('#Pincode').bind('input propertychange', function () {
        var lPincode = $('#Pincode').val()
        $('#divPincodeError').hide();
        if (lPincode.length == 6) {
            $('#Pincode_loading').show();
            $.ajax({
                url: '@Url.Action("GetAddress", "PersonalDetail")?Pincode=' + lPincode,
                type: "GET",
                success: function (result) {
                    //$('#divAddress').html(result);
                    $('#Pincode_loading').hide();
                    $('#divPincodeError').hide();
                    if (result == "1") {
                        $('#divPincodeError').show();
                        $('#divPincodeError').html('[' + lPincode + '] dose not exist, Contact to ADMIN');
                        $('#Pincode').val('');
                    }
                },
                error: function (data) {
                    //alert('Pincode : ' + lPincode + ' Dose Not Exist, please Contact to ADMIN');
                    //$('#divAddress').empty();
                    //$('#Pincode_loading').hide();
                    $('#divPincodeError').hide();
                    //$('#divPincodeError').html('Pincode [' + lPincode + '] dose not exist, please Contact to ADMIN');
                    //$('#Pincode').val('');
                }
            });
        }
    });

</script>
<script src="~/Content/js/BeatPicker.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var statusGenerator = function (text) {
            var statusElem = $(".status-box");
            var child = $("<span style='display: block'></span>").text(text);
            statusElem.append(child);
        };
        myDatePicker.on("select", function (data) {
            statusGenerator(data.string + " selected")
        });
        myDatePicker.on("change", function (data) {
            statusGenerator("Date picker changed current date: " + data.string);
        });
        myDatePicker.on("show", function () {
            statusGenerator("Date picker show")
        });
        myDatePicker.on("clear", function (data) {
            statusGenerator("Date picker cleared. cleared date: " + data.string)
        });
        myDatePicker.on("hide", function () {
            statusGenerator("Date picker hide")
        });
    })

</script>
<script>
    $('.show-picker').click(function (e) {
        e.stopPropagation();
        myPicker.show();
    });
    $('.hide-picker').click(function (e) {
        e.stopPropagation();
        myPicker.hide();
    })
</script>
