@model ModelLayer.Models.Bank

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="span10" id="content">
    <ul class="breadcrumb">
       <li>
            <a href="">Bank/Create</a>
        </li>
    </ul>
    <div class="row-fluid">
        <div class="box span12">
            <div class="box-header">
                <h2><i class="icon-edit"></i><span class="break"></span>@Html.ActionLink("Create New", "Create")</h2>
               
            </div>
            <div class="box-content">
        <div class="form-horizontal">
            @if (ViewBag.Messaage != null)
            {
                @Html.Label("Messaage", (string)ViewBag.Messaage, new { @class = "deleteMsg" })
            }
            else
            {
                @Html.Label("Messaage", "", new { @class = "deleteMsg" })
            }
        <hr />
        @*@Html.ValidationSummary(true)*@

            <div class="control-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label span2" })
                <div class="controls">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>

        <div class="control-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label span2" })
            <div class="controls">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate)
                @Html.ValidationMessageFor(model => model.CreateDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateBy)
                @Html.ValidationMessageFor(model => model.CreateBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifyDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifyDate)
                @Html.ValidationMessageFor(model => model.ModifyDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifyBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifyBy)
                @Html.ValidationMessageFor(model => model.ModifyBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NetworkIP, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NetworkIP)
                @Html.ValidationMessageFor(model => model.NetworkIP)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeviceType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceType)
                @Html.ValidationMessageFor(model => model.DeviceType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeviceID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceID)
                @Html.ValidationMessageFor(model => model.DeviceID)
            </div>
        </div>*@

        <div class="form-group">
            
            @if (ViewBag.lblError != null)
            { 
                @Html.Label("lblError", (string)ViewBag.lblError)
            }
        </div>
    </div>
                <div class="form-actions">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class="btn"})
                </div>
                </div>
            </div>
        </div>
   </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
