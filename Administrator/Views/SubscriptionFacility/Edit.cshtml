@model ModelLayer.Models.SubscriptionFacility

@{
    ViewBag.Title = "Edit";
}
<div id="content" class="span10">
    <ul class="breadcrumb">
        <li>
            <a href="#">Subscription Facility</a>
        </li>
    </ul>
    <div class="row-fluid">
        <div class="box span12">
            <div class="box-header">
                <h2><i class="icon-edit"></i><span class="break"></span>Edit</h2>
            </div>
            <div class="box-content">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.ID)

                        <div class="control-group">
                            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.Name)
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.BehaviorType, new { @class = "control-label" })
                            <div class="controls">
                                @Html.DropDownList("BehaviorType", null, new { required = "required" })
                                @*@Html.EditorFor(model => model.BehaviorType)*@
                                @Html.ValidationMessageFor(model => model.BehaviorType)
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                            <div class="controls">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>

                        <div class="form-actions">

                            <input type="submit" value="Save" class="btn btn-success" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })
                        </div>
                    </div>
                }

                

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
            </div>
        </div>
    </div>
</div>
