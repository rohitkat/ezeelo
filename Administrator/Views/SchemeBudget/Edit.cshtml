@model ModelLayer.Models.SchemeBudget

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SchemeBudget</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ReferAndEarnSchemaID, "ReferAndEarnSchemaID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReferAndEarnSchemaID", String.Empty)
                @Html.ValidationMessageFor(model => model.ReferAndEarnSchemaID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BudgetAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BudgetAmount)
                @Html.ValidationMessageFor(model => model.BudgetAmount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreRemainingAmt, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreRemainingAmt)
                @Html.ValidationMessageFor(model => model.PreRemainingAmt)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreUsedAmt, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreUsedAmt)
                @Html.ValidationMessageFor(model => model.PreUsedAmt)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate)
                @Html.ValidationMessageFor(model => model.ExpiryDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActionStatus)
                @Html.ValidationMessageFor(model => model.ActionStatus)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate)
                @Html.ValidationMessageFor(model => model.CreateDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateBy)
                @Html.ValidationMessageFor(model => model.CreateBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifyDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifyDate)
                @Html.ValidationMessageFor(model => model.ModifyDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifyBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifyBy)
                @Html.ValidationMessageFor(model => model.ModifyBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NetworkIP, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NetworkIP)
                @Html.ValidationMessageFor(model => model.NetworkIP)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeviceType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceType)
                @Html.ValidationMessageFor(model => model.DeviceType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeviceID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceID)
                @Html.ValidationMessageFor(model => model.DeviceID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
