@model ModelLayer.Models.ViewModel.Scheme

@{
    ViewBag.Title = "Edit";
}

<div id="content" class="span10">
    <ul class="breadcrumb">
        <li>
            <a href="#">Edit</a>
        </li>
    </ul>
    <div class="row-fluid ">
        <div class="box span12">
            <div class="box-header">
                <h2><i class="icon-edit"></i><span class="break"></span>Edit Scheme</h2>
            </div>
            <div class="box-content">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.ID)
                        <label id="lblMsg" style="color:red"></label>
                        <div class="span12">
                            <div class="span6">
                                <div class="control-group">
                                    @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                                    <div class="controls">
                                        @*@Html.EditorFor(model => model.Name)*@
                                        @Html.TextBoxFor(model => model.Name, new { required = "requird" })
                                        @Html.ValidationMessageFor(model => model.Name)
                                    </div>
                                </div>

                                <div class="control-group">
                                    @Html.LabelFor(model => model.ValueInRs, new { @class = "control-label" })
                                    <div class="controls">
                                        @*@Html.EditorFor(model => model.ValueInRs)*@
                                        @Html.TextBoxFor(model => model.ValueInRs, new { required = "requird" })
                                        @Html.ValidationMessageFor(model => model.ValueInRs)
                                    </div>
                                </div>

                                <div class="control-group">
                                    @Html.LabelFor(model => model.ApplicableOnPurchaseOfRs, new { @class = "control-label" })
                                    <div class="controls">
                                        @*@Html.EditorFor(model => model.ApplicableOnPurchaseOfRs)*@
                                        @Html.TextBoxFor(model => model.ApplicableOnPurchaseOfRs, new { required = "requird" })
                                        @Html.ValidationMessageFor(model => model.ApplicableOnPurchaseOfRs)
                                    </div>
                                </div>

                                @*<div class="control-group">
                                        @Html.LabelFor(model => model.SchemeCode, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.EditorFor(model => model.SchemeCode)
                                            @Html.ValidationMessageFor(model => model.SchemeCode)
                                        </div>
                                    </div>*@

                                @*<div class="control-group">
                                        @Html.LabelFor(model => model.OwnerId, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.EditorFor(model => model.OwnerId)
                                            @Html.ValidationMessageFor(model => model.OwnerId)
                                        </div>
                                    </div>*@
                                @* ************Uncommented by harshada on 10/01/2017 for BusinessTypeID***********@
                                <div class="control-group" style="display:none">
                                    @Html.LabelFor(model => model.BusinessTypeID, new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.EditorFor(model => model.BusinessTypeID)
                                        @Html.ValidationMessageFor(model => model.BusinessTypeID)
                                    </div>
                                </div>
                                @* ************END Uncommented by harshada on 10/01/2017***********@
                                <div class="control-group">
                                    @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.EditorFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive)
                                    </div>
                                </div>

                                @*<div class="control-group">
                                        @Html.LabelFor(model => model.CreateDate, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.CreateDate, new { @class = "datepicker" }) <i class="icon-calendar"></i>
                                            @Html.ValidationMessageFor(model => model.CreateDate)
                                        </div>
                                    </div>*@
                            </div>
                            <div class="span6">
                                @* <div class="control-group">
                                                                    @Html.LabelFor(model => model.CreateBy, new { @class = "control-label" })
                                                                    <div class="controls">
                                                                        @Html.EditorFor(model => model.CreateBy)
                                                                        @Html.ValidationMessageFor(model => model.CreateBy)
                                                                    </div>
                                                                </div>

                                                                <div class="control-group">
                                                                    @Html.LabelFor(model => model.ModifyDate, new { @class = "control-label" })
                                                                    <div class="controls">
                                                                        @Html.EditorFor(model => model.ModifyDate)
                                                                        @Html.ValidationMessageFor(model => model.ModifyDate)
                                                                    </div>
                                                                </div>

                                                                <div class="control-group">
                                        @Html.LabelFor(model => model.ModifyBy, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.EditorFor(model => model.ModifyBy)
                                            @Html.ValidationMessageFor(model => model.ModifyBy)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.NetworkIP, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.EditorFor(model => model.NetworkIP)
                                            @Html.ValidationMessageFor(model => model.NetworkIP)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.DeviceType, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.EditorFor(model => model.DeviceType)
                                            @Html.ValidationMessageFor(model => model.DeviceType)
                                        </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.DeviceID, new { @class = "control-label" })
                                        <div class="controls">
                                            @Html.EditorFor(model => model.DeviceID)
                                            @Html.ValidationMessageFor(model => model.DeviceID)
                                        </div>
                                    </div>*@

                                <div class="control-group">
                                    @Html.LabelFor(model => model.StartDatetime, new { @class = "control-label" })
                                    <div class="controls">
                                        @*@Html.TextBoxFor(model => model.StartDatetime, new { @class = "datepicker" }) <i class="icon-calendar"></i>*@
                                        @Html.TextBox("StartDatetime1", null, new { id = "StartDatetime1", @class = "span10  datepicker glyphicons-iconcalendar", required = "requird" })
                                        @Html.ValidationMessageFor(model => model.StartDatetime)
                                    </div>
                                </div>

                                <div class="control-group">
                                    @Html.LabelFor(model => model.EndDatetime, new { @class = "control-label" })
                                    <div class="controls">
                                        @*@Html.TextBoxFor(model => model.EndDatetime, new { @class = "datepicker" }) <i class="icon-calendar"></i>*@
                                        @Html.TextBox("EndDatetime1", null, new { id = "EndDatetime1", @class = "span10  datepicker glyphicons-iconcalendar", required = "requird" })
                                        @Html.ValidationMessageFor(model => model.EndDatetime)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>


                        <div class="form-actions" style="padding-left:25px;">

                            <input type="submit" value="Edit" class="btn btn-success" onclick="return DateValidation()" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })

                        </div>
                    </div>
                }


            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/jquery-2.1.3.min.js"></script>
<script>

    function DateValidation() {
        var FromDate = $('#StartDatetime1').val();
        var ToDate = $('#EndDatetime1').val();
        if (FromDate != null && ToDate != null) {
            if (FromDate != '' && ToDate != '') {
                FirstDate = FromDate.split('/');
                SecondDate = ToDate.split('/');
                var from = new Date(FirstDate[2], FirstDate[1], FirstDate[0]); //Year, Month, Date
                var to = new Date(SecondDate[2], SecondDate[1], SecondDate[0]);
                if (from > to) {

                    $('[id*=lblMsg]').text('To Date must be greater than From Date.');
                    return false;
                }
                else {
                    $('[id*=lblMsg]').text('');
                    return true;
                }
            }
        }
    }
    //*************added by harshada on 01/10/2017 for validating amount**************//
    $('#ApplicableOnPurchaseOfRs').on("change", function () {
        var ValueInRs = $('#ValueInRs').val();
        var ApplicableOnPurchaseOfRs = $('#ApplicableOnPurchaseOfRs').val();
        if (ValueInRs > ApplicableOnPurchaseOfRs) {
            $('[id*=lblMsg]').text('Purchase amount should be grater than ValueInRs.');
        }
        else {
            $('[id*=lblMsg]').text('');
        }
    });
    $('#ValueInRs').on("change", function () {
        var ValueInRs = $('#ValueInRs').val();
        var ApplicableOnPurchaseOfRs = $('#ApplicableOnPurchaseOfRs').val();
        if (ValueInRs > ApplicableOnPurchaseOfRs && ApplicableOnPurchaseOfRs.length != 0) {
            $('[id*=lblMsg]').text('Purchase amount should be grater than ValueInRs.');
        }
        else {
            $('[id*=lblMsg]').text('');
        }
    });
    //*************End added by harshada on 01/10/2017 for validating amount**************//
</script>