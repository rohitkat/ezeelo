@model ModelLayer.Models.OwnerAdvertisement

@{
    ViewBag.Title = "Edit";
}
<br />
<div class="row-fluid">
    <div class="box span12">
        <div class="box-header">
            <h2><i class="icon-edit"></i><span class="break"></span>Edit Owner Advertisement</h2>
        </div>
        <div class="box-content">
            <div class="form-horizontal">
                @if (ViewBag.Messaage != null)
                {
                    @Html.Label("Messaage", (string)ViewBag.Messaage, new { @class = "deleteMsg" })
                }
                else
                {
                    @Html.Label("Messaage", "", new { @class = "deleteMsg" })
                }
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                     @Html.ValidationSummary(true)
                    
                    
                    @Html.HiddenFor(model => model.ID)
                    <fieldset>
                        @if(ViewBag.Message != null)
                        {
                            @Html.Label("Message")
                        }

                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Advertisement</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.DropDownList("AdvertisementID", String.Empty)
                                @Html.ValidationMessageFor(model => model.AdvertisementID)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Ad Title</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.EditorFor(model => model.AdvertisementTitle)
                                @Html.ValidationMessageFor(model => model.AdvertisementTitle)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Navigation Url</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.EditorFor(model => model.NavigationUrl)
                                @Html.ValidationMessageFor(model => model.NavigationUrl)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">No Of Days</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.EditorFor(model => model.NoOfDays)
                                @Html.ValidationMessageFor(model => model.NoOfDays)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">No Of Hours</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.EditorFor(model => model.NoOfHours)
                                @Html.ValidationMessageFor(model => model.NoOfHours)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Business Type</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.DropDownList("BusinessTypeID", "Select Business")
                                @Html.ValidationMessageFor(model => model.BusinessTypeID)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Owner </label>
                            <div class="controls">
                                @Html.DropDownList("BusinessOwner", "Select")
                                <span id="pMessage"></span>
                                @*@Html.EditorFor(model => model.OwnerID)*@
                                @Html.ValidationMessageFor(model => model.OwnerID)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Fees In Rupee</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.FeesInRupee)
                                @Html.ValidationMessageFor(model => model.FeesInRupee)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Priority Level</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.PriorityLevel)
                                @Html.ValidationMessageFor(model => model.PriorityLevel)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="optionsCheckbox2">Is IsLive</label>
                            <div class="controls">
                                <label class="checkbox">
                                    @Html.EditorFor(model => model.IsLive)
                                    @Html.ValidationMessageFor(model => model.IsLive)
                                </label>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="optionsCheckbox2">Is Active</label>
                            <div class="controls">
                                <label class="checkbox">
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                </label>
                            </div>
                        </div>

                        <div class="form-actions">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            <button class="btn">@Html.ActionLink("Back to List", "Index")</button>
                        </div>
                    </fieldset>

                }
            </div>
        </div>
    </div><!--/span-->

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>

    $(function () {
        $("#btnSubmit").click(function () {
            var selectedVal = $("#BusinessTypeID option:selected").val();
            if (selectedVal == 0) {
                pMessage.textContent = 'Please select the role'
                return false;
            }
        });
    });

    $(function () {
        $('#BusinessTypeID').change(function (e) {
            var selectedVal = $("#BusinessTypeID option:selected").val();
            if (selectedVal > 0) {
                
                $.ajax({
                    type: "POST",
                    url: "/OwnerAdvertisement/getOwnerID",
                    data: "{ businessTypeID: '" + selectedVal + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    cache: false,
                    success: function (msg) {
                        $('#BusinessOwner').empty();
                        $('#BusinessOwner').append('<option value=0>Select Owner</option>');
                        $.each(msg, function (index, item) {
                            $('#BusinessOwner').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                        });
                    },
                    error: function (x, e) {
                        alert("The call to the server side failed. ");
                    }
                });
            }
        });
    });

</script>
@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>OwnerAdvertisement</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.AdvertisementID, "AdvertisementID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AdvertisementID", String.Empty)
                @Html.ValidationMessageFor(model => model.AdvertisementID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdvertisementTitle, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdvertisementTitle)
                @Html.ValidationMessageFor(model => model.AdvertisementTitle)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NavigationUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NavigationUrl)
                @Html.ValidationMessageFor(model => model.NavigationUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfDays, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfDays)
                @Html.ValidationMessageFor(model => model.NoOfDays)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfHours, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfHours)
                @Html.ValidationMessageFor(model => model.NoOfHours)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessTypeID, "BusinessTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BusinessTypeID", "Select Business")
                @Html.ValidationMessageFor(model => model.BusinessTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BusinessOwner", "Select")
                <span id="pMessage"></span>
                @Html.ValidationMessageFor(model => model.OwnerID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeesInRupee, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FeesInRupee)
                @Html.ValidationMessageFor(model => model.FeesInRupee)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriorityLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriorityLevel)
                @Html.ValidationMessageFor(model => model.PriorityLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsLive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsLive)
                @Html.ValidationMessageFor(model => model.IsLive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="btnSubmit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

