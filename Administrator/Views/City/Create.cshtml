@model ModelLayer.Models.City

@{
    ViewBag.Title = "Create";
}
<br />
<div class="row-fluid" style="margin-left: 15px;">
    <div class="box span12">
        <div class="box-header">
            <h2><i class="icon-edit"></i><span class="break"></span>Create City</h2>
        </div>
        <div class="box-content">
            <div class="form-horizontal">
                @if (ViewBag.Messaage != null)
                {
                    @Html.Label("Messaage", (string)ViewBag.Messaage, new { @class = "deleteMsg" })
                }
                else
                {
                    @Html.Label("Messaage", "", new { @class = "deleteMsg" })
                }
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <fieldset>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">City Name</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.TextBoxFor(model => model.Name)
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">District Name</label>
                            <div class="controls">
                                @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                                @Html.DropDownList("DistrictID", String.Empty)
                                @Html.ValidationMessageFor(model => model.DistrictID)
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="optionsCheckbox2">Is Active</label>
                            <div class="controls">
                                <label class="checkbox">
                                    @Html.EditorFor(model => model.IsActive)
                                    @Html.ValidationMessageFor(model => model.IsActive)
                                </label>
                            </div>
                        </div>

                        <div class="form-actions">
                            <input type="submit" value="Create" class="btn btn-success" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })
                        </div>
                    </fieldset>
                }
            </div>

        </div>
    </div><!--/span-->

</div>






@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>City</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.DistrictID, "DistrictID", new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownList("DistrictID", String.Empty)
                @Html.ValidationMessageFor(model => model.DistrictID)
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>*@

        @*<div class="control-group">
                @Html.LabelFor(model => model.CreateDate, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.CreateDate)
                    @Html.ValidationMessageFor(model => model.CreateDate)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.CreateBy, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.CreateBy)
                    @Html.ValidationMessageFor(model => model.CreateBy)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.ModifyDate, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.ModifyDate)
                    @Html.ValidationMessageFor(model => model.ModifyDate)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.ModifyBy, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.ModifyBy)
                    @Html.ValidationMessageFor(model => model.ModifyBy)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.NetworkIP, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.NetworkIP)
                    @Html.ValidationMessageFor(model => model.NetworkIP)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.DeviceType, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.DeviceType)
                    @Html.ValidationMessageFor(model => model.DeviceType)
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.DeviceID, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.DeviceID)
                    @Html.ValidationMessageFor(model => model.DeviceID)
                </div>
            </div>*@

        @*<div class="control-group">
            <div class="col-md-offset-2 controls">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
