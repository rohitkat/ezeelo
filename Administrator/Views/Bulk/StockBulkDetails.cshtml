@model ModelLayer.Models.ViewModel.BulkStockListViewModel

@{
    ViewBag.Title = "StockBulkDetails";
}

<h1>Stock Bulk Details</h1>
@Html.ActionLink("Back to Upload History", "Index", "Bulk", new { ShopID = @HttpContext.Current.Session["BulkUploadShopID"], FranchiseID = @HttpContext.Current.Session["BulkUploadFranchiseID"] }, new { @class = "btn btn-primary" })

@if (Request.QueryString["bulkLogID"] != null)
{
    BusinessLogicLayer.ReadConfig obj = new BusinessLogicLayer.ReadConfig(System.Web.HttpContext.Current.Server);
    @Html.Hidden("hdnPdfPath", obj.IMAGE_HTTP + "/BulkUploadTemplate/pdf-BulkLog-" + Request.QueryString["bulkLogID"] + "-ImageTemplate.pdf")
}

<h2>Upload Bulk Product Images</h2>
<div>
    <i>
        <span style="color:blue">Note:</span> For uploading images in bulk,  You can select multiple image by clicking on browse button. Please make sure, naming convention for images should be appropriate. To know correct name of product images,
        <span style="color:blue"><a id="anchorPdf" class="link">Download Product Image Feed Template</a></span>
    </i>

</div>

@using (Html.BeginForm("Images", "Bulk", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmID" }))
{


    @Html.Hidden("BulkStockLogID", @Model.UploadFiles.BulkStockLogID)
    @Html.Hidden("BulkProductLogID", @Model.UploadFiles.BulkProductLogID)

    <div id="uploaders">
        <input type="file" id="fileUploadProductImages" name="fileUpload" multiple="multiple" style="float: left;" />
        <br />
        <span id="spnFile" style="float: left; color: #FF0000"></span>
        @Html.ValidationMessage("File")
        @Html.Hidden("hdnFileUpload")
    </div>
    <br />
    <div class="col-lg-6">
        <button class="btn btn-primary" id="btnUploadProductImages" type="submit">Start Bulk Image Uploading</button>
    </div>
    <div id="ValidationMessage" class="validation-summary-errors">

        @if (TempData["ProductImagesFailureMsg"] != null)
        {
            @Html.Raw(TempData["ProductImagesFailureMsg"])
        }

    </div>
    <div id="SuccessMessage" style="color:green;">

        @if (TempData["ProductImagesSuccessMsg"] != null)
        {
            @Html.Raw(TempData["ProductImagesSuccessMsg"])
        }

    </div>

    <br />
    <div class="control-section" style="padding: 0px;">
        <div id="selectedFiles"></div>
    </div>

    @Html.Hidden("RowID", (int)ViewData["RowID"])
}
<div id="divValidationMsg" class="validation-summary-errors">
    @if (TempData["GbProductMsg"] != null)
    {


        @Html.Raw(TempData["GbProductMsg"])

    }
</div>
<br />
<h2>Upload One by One Stock Wise Product Images</h2>
<div>
    <i>
        <span style="color:blue">Note:</span>  You can select multiple image by clicking on browse button. For one by one image upload there is no need of any naming convention.
        No of images uploaded against a product and color will reflected for all stock rows having same product name and color.
    </i>

</div>
@if (TempData["UploadMessage"] != null)
{
    //When it reloads the page after uploading stock images, if any failure it shows message.
    //for this purpose we store ExcelRowCount$FailureCount in following hidden field.
    //with the help of jquery we will display error message for that ExcelRowID.
    @Html.Hidden("hdnStockImageUploadMessage", TempData["UploadMessage"].ToString())
}
else
{
    @Html.Hidden("hdnStockImageUploadMessage", string.Empty)

}

<table class="table">
    <tr>
        <th>
            Excel Sr.No.
        </th>
        <th>
            ProductName
        </th>
        <th>
            ColorName
        </th>
        <th>
            SizeName
        </th>
        <th>
            Dimension Name
        </th>
        <th>
            Material Name
        </th>
        <th>
            Stock Qty
        </th>
        <th>
            Reorder Level
        </th>
        <th>
            PackSize
        </th>
        @*<th>
                PackUnit
            </th>*@
        <th>
            MRP
        </th>
        <th>
            SaleRate
        </th>
        <th>
            WholeSaleRate
        </th>
        <th>
            Image Count
        </th>
        <th></th>

    </tr>

    @foreach (var item in Model.listBulkStock)
    {

        <tr id="tr+@item.ExcelRowID">
            <td>
                <div id="@item.ExcelRowID">

                    @Html.DisplayFor(modelItem => item.ExcelRowID)
                </div>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ColorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SizeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DimensionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaterialName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StockQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PackSize)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.PackUnit)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.MRP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaleRate)
            </td>

            <td>
                @{Decimal wholeSaleRate = 0;}
                @if (item.WholeSaleRate != null)
                {
                    wholeSaleRate=Convert.ToDecimal(item.WholeSaleRate);
                    //@Html.DisplayFor(modelItem => item.WholeSaleRate)
                }
                @wholeSaleRate
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ImageCount)
            </td>
            <td>

                @Html.Partial("_UploadStockImages", item)


            </td>
        </tr>
    }

</table>

<div id="stockValidation" class="stockValidation"></div>

<div id="lastdiv"></div>

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>


    $(function () {
        $('#fileUploadProductImages').change(function () {
            var f = this.files[1]

            $("#SuccessMessage").html("");
            $("#ValidationMessage").html("");
            Size = 0;
            for (var i = 0; i < this.files.length; ++i) {


                var filetype = this.files[i].type;

                var ValidImageTypes = ["image/gif", "image/jpeg", "image/png", "image/GIF", "image/JPEG", "image/PNG", "image/jpg", "image/JPG"];

                if ($.inArray(filetype, ValidImageTypes) < 0) {
                    $("#ValidationMessage").html("Invalid Image Type.");
                    break;
                }
                var f = this.files[i]

                if (f.size > 100 * 1024) {

                    $("#ValidationMessage").html("Max size allowed for each image is 100 Kb.");
                    break;
                }
                Size += f.size;

            }
            //3MB= 3145728
            if (Size > 3145728) {
                $("#ValidationMessage").html("Total max Size allowed is 3 MB.");
                // alert("Total max Size allowed is 3 MB.");
            }

        });

    });
    $(document).ready(function () {
        $("#pageloaddiv").attr("display", "none");
        $("#pageloaddiv").css("display", "none");

        if ($.trim($("#hdnStockImageUploadMessage").val() != "")) {

            var res = $.trim($("#hdnStockImageUploadMessage").val()).split("$");
            //It conatins value of type ExcelRowID$FailureCounter
            if (res[1] > 0) {
                //FailureCouter >0
                //put errormessage in div with ID = StockImageErrorMessage_ExcelRowID present in shared/_UploadStockImages.cshtml
                $("#StockImageErrorMessage_" + res[0]).html("Problem in Image Uploding on FTP.");
                setTimeout(function () { $("#StockImageErrorMessage_" + res[0]).fadeOut(1500); }, 50000)
            }

        }

        $("#btnUploadProductImages").click(function () {

            var has_selected_file = $('#fileUploadProductImages').val();
            //alert(has_selected_file);

            var isAnyValidatonError = $("#ValidationMessage").html();
            if (isAnyValidatonError.trim().length > 0 && has_selected_file == "") {
                $("#pageloaddiv").attr("display", "none");
                $("#pageloaddiv").css("display", "none");

                setInterval(blinkerProduct, 1000);

                return false;
            }
            else {


                if (has_selected_file != "") {
                    $("#pageloaddiv").attr("display", "block");
                    $("#pageloaddiv").css("display", "block");
                    return true;

                }
                else {

                    $("#ValidationMessage").html("Please select image files to be uploaded with naming conventions given in Image Feed Template. Max size allowed for each file is 100Kb and Total max Size allowed is 3 MB.")
                    $("#pageloaddiv").attr("display", "none");
                    $("#pageloaddiv").css("display", "none");

                    return false;
                }
            }

        });



    });
    function blinkerProduct() {

        $('#ValidationMessage').fadeOut(800);
        $('#ValidationMessage').fadeIn(800);
    }


</script>
<script>
    $(function () {

        if ($("#RowID").val() > 0) {
            //alert($("#RowID").val());
            $(document).scrollTop($("#" + $("#RowID").val()).offset().top);
        }
    });

</script>
<script>
    $(function () {
        $("#anchorPdf").attr("href", $("#hdnPdfPath").val());
    });

</script>

