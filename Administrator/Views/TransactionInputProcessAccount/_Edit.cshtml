@model ModelLayer.Models.TransactionInputProcessAccount

@{
    ViewBag.Title = "Create";
}
<style>
    textarea {
        width: 80%;
    }
</style>
<br />
<div class="row-fluid">
    <div class="box span12">
        <div class="box-header">
            <h2><i class="icon-edit"></i><span class="break"></span>Transaction Process Account / Create</h2>
        </div>
        <div class="box-content">
            <div class="form-horizontal">
                @if (TempData["Messaage"] != null)
                {
                    @Html.Label("Messaage", (string)TempData["Messaage"], new { @class = "deleteMsg" })
                }
                else
                {
                    @Html.Label("Messaage", "", new { @class = "deleteMsg" })
                }
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <fieldset>
                        <hr />
                        @Html.ValidationSummary(true)

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.LeadgerHeadID, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LeadgerHeadID)
                                @Html.ValidationMessageFor(model => model.LeadgerHeadID)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReceivedPaymentModeID, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ReceivedPaymentModeID)
                                @Html.ValidationMessageFor(model => model.ReceivedPaymentModeID)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TransactionInputID, "TransactionInputID", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TransactionInputID", String.Empty)
                                @Html.ValidationMessageFor(model => model.TransactionInputID)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Amount)
                                @Html.ValidationMessageFor(model => model.Amount)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReceivedFromUserLoginID, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ReceivedFromUserLoginID)
                                @Html.ValidationMessageFor(model => model.ReceivedFromUserLoginID)
                            </div>
                        </div>*@

                        <div class="control-group">
                            <label class="control-label" for="focusedInput">POD Received</label>
                            <div class="controls">
                                @Html.EditorFor(model => model.PODReceived)
                                @Html.ValidationMessageFor(model => model.PODReceived)
                            </div>
                        </div>

                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Narration</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.Narration)
                                @Html.ValidationMessageFor(model => model.Narration)
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.CreateDate, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreateDate)
                                @Html.ValidationMessageFor(model => model.CreateDate)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreateBy, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreateBy)
                                @Html.ValidationMessageFor(model => model.CreateBy)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifyDate, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifyDate)
                                @Html.ValidationMessageFor(model => model.ModifyDate)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifyBy, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifyBy)
                                @Html.ValidationMessageFor(model => model.ModifyBy)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NetworkIP, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NetworkIP)
                                @Html.ValidationMessageFor(model => model.NetworkIP)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DeviceType, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DeviceType)
                                @Html.ValidationMessageFor(model => model.DeviceType)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DeviceID, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DeviceID)
                                @Html.ValidationMessageFor(model => model.DeviceID)
                            </div>
                        </div>*@

                        <div class="form-actions">
                            <input type="submit" value="Save" class="btn btn-success" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })
                        </div>
                    </fieldset>
                }
            </div>
            @*<div>
                @{ Html.RenderAction("GetAccountPendingReport"); }
            </div>*@
        </div>

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
