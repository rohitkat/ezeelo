@model ModelLayer.Models.Pincode

@{
    ViewBag.Title = "Edit";
}
<br />
<div class="row-fluid">
    <div class="box span12">
        <div class="box-header">
            <h2><i class="icon-edit"></i><span class="break"></span>Edit PinCode</h2>
        </div>
        <div class="box-content">
            <div class="form-horizontal">
                @if (ViewBag.Messaage != null)
                {
                    @Html.Label("Messaage", (string)ViewBag.Messaage, new { @class = "deleteMsg" })
                }
                else
                {
                    @Html.Label("Messaage", "", new { @class = "deleteMsg" })
                }
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.ID)
                <fieldset>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">Name</label>
                        <div class="controls">
                            @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">State</label>
                        <div class="controls">
                            @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                            @Html.DropDownList("State", "---State---")
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">District</label>
                        <div class="controls">
                            @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                            @Html.DropDownList("District", "---District----")
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">City</label>
                        <div class="controls">
                            @*<input class="input-xlarge focused" id="focusedInput" type="text" value="This is focused…">*@
                            @Html.DropDownList("CityID", "---City---")
                            @Html.ValidationMessageFor(model => model.CityID)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="optionsCheckbox2">Is Active</label>
                        <div class="controls">
                            <label class="checkbox">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </label>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="optionsCheckbox2">Is Deliverable Pincode</label>
                        <div class="controls">
                            <label class="checkbox">
                                @Html.CheckBoxFor(model => model.IsDeliverablePincode)
                                @Html.ValidationMessageFor(model => model.IsDeliverablePincode)
                            </label>
                        </div>
                    </div>

                    <div class="form-actions">
                        <input type="submit" value="Save" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })
                    </div>
                </fieldset>

                }
            </div>
        </div>
    </div><!--/span-->

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Pincode</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>*@

@*<div class="form-group">
        @Html.LabelFor(model => model.CityID, "CityID", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CityID", String.Empty)
            @Html.ValidationMessageFor(model => model.CityID)
        </div>
    </div>*@

@*<div class="form-group">
                State
                <div class="col-md-10">
                    @Html.DropDownList("State", "---State---")

                </div>
            </div>

            <div class="form-group">
                District
                <div class="col-md-10">
                    @Html.DropDownList("District", "---District----")

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CityID, "City Name", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CityID", "---City---")
                    @Html.ValidationMessageFor(model => model.CityID)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(function () {
        $('#State').change(function (e) {
            var selectedVal = $("#State option:selected").val();
            if (selectedVal > 0) {
                //alert(selectedVal);
                $.ajax({
                    type: "POST",
                    url: "/Pincode/getDistrict",
                    data: "{ StateID: '" + selectedVal + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    cache: false,
                    success: function (msg) {

                        $('#CityID').empty();
                        $('#District').empty();
                        $('#District').append('<option value=0>Select District</option>');
                        $.each(msg, function (index, item) {
                            $('#District').append('<option value=' + item.value + '>' + item.text + '</option>');
                        });
                    },
                    error: function (x, e) {
                        alert("The call to the server side failed. " + x.responseText);
                    }
                });
            }
        });



        $('#District').change(function (e) {
            var selectedVal = $("#District option:selected").val();
            if (selectedVal > 0) {
                //alert(selectedVal);
                $.ajax({
                    type: "POST",
                    url: "/Pincode/getCity",
                    data: "{ DistrictID: '" + selectedVal + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    cache: false,
                    success: function (msg) {

                        $('#CityID').empty();
                        $('#CityID').append('<option value=0>Select City</option>');
                        $.each(msg, function (index, item) {
                            $('#CityID').append('<option value=' + item.value + '>' + item.text + '</option>');
                        });
                    },
                    error: function (x, e) {
                        alert("The call to the server side failed. " + x.responseText);
                    }
                });
            }
        });





    });


</script>