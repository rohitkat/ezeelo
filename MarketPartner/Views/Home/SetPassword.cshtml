@model ModelLayer.Models.MerchantsLogin
@{
    ViewBag.Title = "SetPassword";
    Layout = null;
}
<html>
<head>
    <meta charset="UTF-8">
    <title>eZeelo | Market Partner - Set Password</title>
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    <!-- Bootstrap 3.3.2 -->
    <link href="@Url.Content("~/bootstrap/css/bootstrap.min.css")" rel="stylesheet" type="text/css" />
    <!-- Font Awesome Icons -->
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" type="text/css" />

    <link href="@Url.Content("~/dist/css/AdminLTE.min.css")" rel="stylesheet" type="text/css" />
</head>
<body class="login-page">
    <div class="login-box">
        <div class="login-logo">
            <a href="www.ezeelo.com"><b>eZeelo</b> Market Partner</a>
            <p style="font-size:25px">Welcome, @ViewBag.MerchantShopNAme</p>
        </div><!-- /.login-logo -->
        <div class="login-box-body">
            <p class="login-box-msg">Please Enter Your Registered Contact Number</p>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.MerchantID)
                <div class="form-group has-feedback">
                    <label class="control-label" for="UserID"></label>
                    @Html.TextBoxFor(model => model.UserID, null, new { autocomplete = "off", maxlength = 10, placeholder = "Enter Registered Contact No.", @class = "form-control", required = "required", style = "font-size:18px !important" })
                    @Html.ValidationMessageFor(model => model.UserID, null, new { @class = "text-danger" })
                    <span class="form-control-feedback"><i id="icon" class="fa fa-fw fa-phone" style="margin-top:-9px"></i></span>
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(model => model.Password, new { autocomplete = "off", placeholder = "Enter Password", @class = "form-control", required = "required", style = "font-size:18px !important", })
                    @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { autocomplete = "off", placeholder = "Enter Confirm Password", @class = "form-control", required = "required", style = "font-size:18px !important" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    <label class="control-label" for="password"></label>
                </div>
                <div class="form-group has-feedback">
                    <button type="submit" class="form-control btn btn-primary btn-block btn-flat">&nbsp;&nbsp;&nbsp;&nbsp;Done</button>
                </div>
            }


        </div><!-- /.login-box-body -->
    </div><!-- /.login-box -->
</body>
</html>

<script src="@Url.Content("~/plugins/jQuery/jQuery-2.1.3.min.js")"></script>
<script src="~/plugins/validate/jquery.validate.min.js"></script>
<script src="~/plugins/validate/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        $("input[type='password']").attr("disabled", "disabled");
        $("#UserID").on("keyup", function () {
            if ($(this).val().length > 9) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ValidateContactNo", "Home")",
                    data: "{'contactNo':" + $("#UserID").val() + ",'MerchantId':" + $("#MerchantID").val()+"}",
                    contentType: "application/json; charset = utf-8",
                    dataType: "json",
                    cache: false,
                    success: function (data) {
                        if (data) {
                            $("label[for='UserID']").html("<i class='fa fa-check'></i> Contact Number Verified!")
                            $("#UserID").parent("div").removeClass("has-error");
                            $("#UserID").parent("div").addClass("has-success");
                            $("input[type='password']").removeAttr("disabled");
                            $("#icon").css("margin-top", "9px");
                            $("input[type='password']:first").focus();
                        } else {
                            $("label[for='UserID']").html("<i class='fa fa-times-circle-o'></i> Invalid Contact Number!")
                            $("#UserID").parent("div").addClass("has-error");
                            $("#UserID").parent("div").removeClass("has-success");
                            $("input[type='password']").attr("disabled", "disabled");
                            $("#icon").css("margin-top", "-9px");
                            $("#UserID").focus();
                        }
                    },
                    error: function (x, e) {
                    }
                });
            }
        });

        $("#UserID").on("keypress", function (e) {
            var evt = (e) ? e : window.event;
            var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
            if ((charCode > 47 && charCode < 59) || charCode == 8 || charCode == 46) { // (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return true;
            }
            else if (charCode == 9) {
                SendKeys("{tab}");
                return true;
            }
            return false;
        });
    });
</script>