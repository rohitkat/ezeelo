@model ModelLayer.Models.ViewModel.EmployeeManagement

@{
    ViewBag.Title = "Edit";
}

@*<h2>Edit</h2>*@
<div class="row">
    <div class="span12">
        <div class="widget">
            <div class="widget-header">
                <i class="icon-group"></i><h3>Employee Management</h3>
            </div>
            <div class="widget-content">
                <div class="widget big-stats-container">
                    <div class="widget-content">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @*<h4>EmployeeManagement</h4>*@
                            @Html.ValidationSummary(false)
                            @Html.HiddenFor(model => model.ID)
                            <div class="content-hed">
                                <div class="control-group">
                                    @Html.LabelFor(model => model.UserLoginID, new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.DisplayFor(model => model.UserLoginID)
                                        @Html.HiddenFor(model => model.UserLoginID)
                                    </div>
                                    @Html.ValidationMessageFor(model => model.UserLoginID)
                                </div>

                                <div class="control-group">
                                    @Html.LabelFor(model => model.EmployeeCode, new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.DisplayFor(model => model.EmployeeCode)
                                        @Html.HiddenFor(model => model.EmployeeCode)
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EmployeeCode)
                                </div>
                            </div>
                            <div class="control-group">
                                <label class="control-label" for="focusedInput"> Business Type</label>
                                <div class="controls">
                                    @*@Html.EditorFor(model => model.OwnerID)*@
                                    @Html.DropDownList("OwnerType", (SelectList)ViewBag.OwnerType)
                                    <span id="OwnerTypeMsg"></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.OwnerID)
                            </div>
                            <div class="control-group">
                                <label class="control-label" for="focusedInput">Owner Name</label>

                                <div class="controls">
                                    @Html.DropDownList("BusinessOwner", "Select")
                                    <span id="BusinessOwnerMsg"></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.OwnerID)
                            </div>
                            <div class="control-group">
                                <label class="control-label span2" for="focusedInput"> Salutation</label>
                                <div class="controls">
                                    @Html.DropDownList("Salutation", "Select")
                                    <span id="salutationMsg"></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.SalutationID)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.FirstName)
                                </div>
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.MiddleName)
                                </div>
                                @Html.ValidationMessageFor(model => model.MiddleName)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.LastName)
                                </div>
                                @Html.ValidationMessageFor(model => model.LastName)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                <div class="controls">
                                    @*@Html.EditorFor(model => model.Gender)*@
                                    @Html.DropDownList("Gender", "Select")
                                </div>
                                @Html.ValidationMessageFor(model => model.Gender)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.Address, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.Address)
                                </div>
                                @Html.ValidationMessageFor(model => model.Address)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.Mobile, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.Mobile)
                                    <span id="MobileError"></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Mobile)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.AlternateMobile, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.AlternateMobile)
                                </div>
                                @Html.ValidationMessageFor(model => model.AlternateMobile)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.Email)
                                    <span id="EmailError"></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.AlternateEmail, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.AlternateEmail)
                                </div>
                                @Html.ValidationMessageFor(model => model.AlternateEmail)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.Password)
                                </div>
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.IsActive)
                                </div>
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                            <div class="control-group">
                                <div class="controls">
                                    <input type="submit" value="Save" id="btnSubmit" class="btn btn-Ifrm-submit" />
                                    @Html.ActionLink("Back to List", "Index", string.Empty, new { @class = "btn btn-brown" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>

    $(function () {
        $("#btnSubmit").click(function (e) {
            //alert('1');
            var selectedOwner = $("#BusinessOwner option:selected ").val();
            var selectOwnerType = $("#OwnerType option:selected").val();
            var Salutation = $("#Salutation option:selected").val();
            var selectGender = $("#Gender option:selected").val();

            $('#OwnerTypeMsg').text('');
            $('#BusinessOwnerMsg').text('');
            $('#salutationMsg').text('');
            $('#GenderMsg').text('');


            if (selectOwnerType == "Select Business" || selectOwnerType == '') {
                $('#OwnerTypeMsg').text("Select Business type");
                // alert('Please select the Business type');
                return false;
            }
            else if (selectedOwner == "Select Owner" || selectedOwner == '') {
                $('#BusinessOwnerMsg').text("Select Owner");

                //alert('Select Owner');
                return false;

            }
            else if (Salutation == 'Select' || Salutation == '') {
                $('#salutationMsg').text("Select Salutation");
                // alert('Select Salutation');
                return false;
            }
            else if (Gender == 'Select' || selectGender == '') {
                $('#GenderMsg').text("Select Gender");
                //alert('Plese Select the Gender');
                return false;
            }
        });
    });

    $(function () {
        //MobileError
        $('#Mobile').blur(function (e) {
            var strMobile = $("#Mobile").val();
            var strUserLoginID = $("#UserLoginID").val();

            $.ajax({
                type: "POST",
                url: "/EmployeeManagement/CheckEditMobile",
                data: "{ 'strMobile': '" + strMobile + "', 'strUserLoginID': '" + strUserLoginID + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                cache: false,
                success: function (msg) {
                    if (msg > 0) {
                        $("#MobileError").text("Mobile No is Already Exist");

                    }
                    else
                        $("#MobileError").text('');
                },
                error: function (x, e) {
                    alert("unable to Retrive Mobile No ");
                }

            });
        });
    });

    $(function () {
        //MobileError
        $('#Email').blur(function (e) {
            //alert('hello');
            var strEmail = $("#Email").val();
            var strUserLoginID = $("#UserLoginID").val();
            $.ajax({
                type: "POST",
                url: "/EmployeeManagement/CheckEditEmail",
                data: "{ 'strEmail': '" + strEmail + "', 'strUserLoginID': '" + strUserLoginID + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                cache: false,
                success: function (msg) {
                    if (msg > 0)
                        $("#EmailError").text("Email Address is Already Exist");
                    else
                        $("#EmailError").text('');
                },
                error: function (x, e) {
                    alert("unable to Retrive Email No ");
                }

            });
        });
    });

    //$(function () {
    //    $("#btnSubmit").click(function (e) {
    //        //alert('1');
    //        var selectedOwner = $("#BusinessOwner option:selected ").val();
    //        var selectOwnerType = $("#OwnerType option:selected").val();
    //        var Salutation = $("#Salutation option:selected").val();
    //        var selectGender = $("#Gender option:selected").val();
    //        if (selectOwnerType == "Select Business" || selectOwnerType == '') {
    //            alert('Please select the Business type');
    //            return false;
    //        }
    //        else if (selectedOwner == "Select Owner" || selectedOwner == 0) {
    //            alert('Select Owner');
    //            return false;

    //        }
    //        else if (Salutation == 'Select' || Salutation == '') {
    //            alert('Select Salutation');
    //            return false;
    //        }
    //        else if (Gender == 'Select' || selectGender == '') {
    //            alert('Plese Select the Gender');
    //            return false;
    //        }
    //    });
    //});

    $(function () {
        $('#OwnerType').change(function (e) {
            var selectedVal = $("#OwnerType option:selected").val();
            if (selectedVal > 0) {

                $.ajax({
                    type: "POST",
                    url: "/EmployeeManagement/getOwnerID",
                    data: "{ businessTypeID: '" + selectedVal + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    cache: false,
                    success: function (msg) {
                        $('#BusinessOwner').empty();
                        $('#BusinessOwner').append('<option value=0>Select Owner</option>');
                        $.each(msg, function (index, item) {
                            $('#BusinessOwner').append('<option value=' + item.ID + '>' + item.Name + '</option>');
                        });
                    },
                    error: function (x, e) {
                        alert("Sorry No Such Type of Owner Is available. ");
                    }
                });
            }
        });
    });

</script>
